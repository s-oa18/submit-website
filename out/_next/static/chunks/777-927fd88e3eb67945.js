(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[777],{7544:function(){},2703:function(a,e,n){"use strict";var r=n(414);function t(){}function i(){}i.resetWarningCache=t,a.exports=function(){function a(a,e,n,t,i,o){if(o!==r){var u=Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}function e(){return a}a.isRequired=a;var n={array:a,bigint:a,bool:a,func:a,number:a,object:a,string:a,symbol:a,any:a,arrayOf:e,element:a,elementType:a,instanceOf:e,node:a,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e,checkPropTypes:i,resetWarningCache:t};return n.PropTypes=n,n}},5697:function(a,e,n){a.exports=n(2703)()},414:function(a){"use strict";a.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},1021:function(a,e,n){"use strict";n.d(e,{Px:function(){return b},Xz:function(){return y}});var r=n(7294),t=n(5697),i=n.n(t),o=[["Afghanistan","AF","Badakhshan~BDS|Badghis~BDG|Baghlan~BGL|Balkh~BAL|Bamyan~BAM|Daykundi~DAY|Farah~FRA|Faryab~FYB|Ghazni~GHA|Ghor~GHO|Helmand~HEL|Herat~HER|Jowzjan~JOW|Kabul~KAB|Kandahar~KAN|Kapisa~KAP|Khost~KHO|Kunar~KNR|Kunduz~KDZ|Laghman~LAG|Logar~LOW|Maidan Wardak~WAR|Nangarhar~NAN|Nimruz~NIM|Nuristan~NUR|Paktia~PIA|Paktika~PKA|Panjshir~PAN|Parwan~PAR|Samangan~SAM|Sar-e Pol~SAR|Takhar~TAK|Urozgan~ORU|Zabul~ZAB"],["\xc5land Islands","AX","Br\xe4nd\xf6~BR|Ecker\xf6~EC|Finstr\xf6m~FN|F\xf6gl\xf6~FG|Geta~GT|Hammarland~HM|Jomala~JM|Kumlinge~KM|K\xf6kar~KK|Lemland~LE|Lumparland~LU|Mariehamn~MH|Saltvik~SV|Sottunga~ST|Sund~SD|V\xe5rd\xf6~VR"],["Albania","AL","Berat~01|Dib\xebr~09|Durr\xebs~02|Elbasan~03|Fier~04|Gjirokast\xebr~05|Kor\xe7\xeb~06|Kuk\xebs~07|Lezh\xeb~08|Shkod\xebr~10|Tirana~11|Vlor\xeb~12"],["Algeria","DZ","Adrar~01|A\xefn Defla~44|A\xefn T\xe9mouchent~46|Algiers~16|Annaba~23|Batna~05|B\xe9char~08|B\xe9ja\xefa~06|Biskra~07|Blida~09|Bordj Bou Arr\xe9ridj~34|Bou\xefra~10|Boumerd\xe8s~35|Chlef~02|Constantine~25|Djelfa~17|El Bayadh~32|El Oued~39|El Tarf~36|Gharda\xefa~47|Guelma~24|Illizi~33|Jijel~18|Khenchela~40|Laghouat~03|Mascara~29|M\xe9d\xe9a~26|Mila~43|Mostaganem~27|Msila~28|Na\xe2ma~45|Oran~31|Ouargla~30|Oum el Bouaghi~04|Relizane~48|Sa\xefda~20|S\xe9tif~19|Sidi Bel Abb\xe8s~22|Skikda~21|Souk Ahras~41|Tamanghasset~11|T\xe9bessa~12|Tiaret~14|Tindouf~37|Tipaza~42|Tissemsilt~38|Tizi Ouzou~15|Tlemcen~13"],["American Samoa","AS","Tutuila~01|Aunu'u~02|Ta'ū~03|Ofu‑Olosega~04|Rose Atoll~21|Swains Island~22"],["Andorra","AD","Andorra la Vella~07|Canillo~02|Encamp~03|Escaldes-Engordany~08|La Massana~04|Ordino~05|Sant Juli\xe0 de L\xf2ria~06"],["Angola","AO","Bengo~BGO|Benguela~BGU|Bi\xe9~BIE|Cabinda~CAB|Cuando Cubango~CCU|Cuanza Norte~CNO|Cuanza Sul~CUS|Cunene~CNN|Huambo~HUA|Hu\xedla~HUI|Luanda~LUA|Lunda Norte~LNO|Lunda Sul~LSU|Malanje~MAL|Moxico~MOX|Namibe~NAM|U\xedge~UIG|Zaire~ZAI"],["Anguilla","AI","Anguilla~01|Anguillita Island~02|Blowing Rock~03|Cove Cay~04|Crocus Cay~05|Deadman's Cay~06|Dog Island~07|East Cay~08|Little Island~09|Little Scrub Island~10|Mid Cay~11|North Cay~12|Prickly Pear Cays~13|Rabbit Island~14|Sandy Island/Sand Island~15|Scilly Cay~16|Scrub Island~17|Seal Island~18|Sombrero/Hat Island~19|South Cay~20|South Wager Island~21|West Cay~22"],["Antarctica","AQ","Antarctica~AQ"],["Antigua and Barbuda","AG","Antigua Island~01|Barbuda Island~02|Bird Island~04|Bishop Island~05|Blake Island~06|Crump Island~09|Dulcina Island~10|Exchange Island~11|Five Islands~12|Great Bird Island~13|Green Island~14|Guiana Island~15|Hawes Island~17|Hells Gate Island~16|Henry Island~18|Johnson Island~19|Kid Island~20|Lobster Island~22|Maiden Island~24|Moor Island~25|Nanny Island~26|Pelican Island~27|Prickly Pear Island~28|Rabbit Island~29|Red Head Island~31|Redonda Island~03|Sandy Island~32|Smith Island~33|The Sisters~34|Vernon Island~35|Wicked Will Island~36|York Island~37"],["Argentina","AR","Buenos Aires~B|Capital Federal~C|Catamarca~K|Chaco~H|Chubut~U|C\xf3rdoba~X|Corrientes~W|Entre R\xedos~E|Formosa~P|Jujuy~Y|La Pampa~L|La Rioja~F|Mendoza~M|Misiones~N|Neuqu\xe9n~Q|R\xedo Negro~R|Salta~A|San Juan~J|San Luis~D|Santa Cruz~Z|Santa Fe~S|Santiago del Estero~G|Tierra del Fuego~V|Tucum\xe1n~T"],["Armenia","AM","Aragatsotn~AG|Ararat~AR|Armavir~AV|Gegharkunik~GR|Kotayk~KT|Lori~LO|Shirak~SH|Syunik~SU|Tavush~TV|Vayots Dzor~VD|Yerevan~ER"],["Aruba","AW","Aruba~AW"],["Australia","AU","Australian Capital Territory~ACT|New South Wales~NSW|Northern Territory~NT|Queensland~QLD|South Australia~SA|Tasmania~TAS|Victoria~VIC|Western Australia~WA"],["Austria","AT","Burgenland~1|K\xe4rnten~2|Nieder\xf6sterreich~3|Ober\xf6sterreich~4|Salzburg~5|Steiermark~6|Tirol~7|Vorarlberg~8|Wien~9"],["Azerbaijan","AZ","Abşeron~ABS|Ağcabədi~AGC|Ağdam~AGM|Ağdaş~AGS|Ağstafa~AGA|Ağsu~AGU|Astara~AST|Bakı~BAK|Babək~BAB|Balakən~BAL|Bərdə~BAR|Beyləqan~BEY|Biləsuvar~BIL|Cəbrayıl~CAB|Cəlilabad~CAL|Culfa~CUL|Daşkəsən~DAS|F\xfczuli~FUZ|Gədəbəy~GAD|Goranboy~GOR|G\xf6y\xe7ay~GOY|G\xf6yg\xf6l~GYG|Hacıqabul~HAC|İmişli~IMI|İsmayıllı~ISM|Kəlbəcər~KAL|Kǝngǝrli~KAN|K\xfcrdəmir~KUR|La\xe7ın~LAC|Lənkəran~LAN|Lerik~LER|Masallı~MAS|Neft\xe7ala~NEF|Oğuz~OGU|Ordubad~ORD|Qəbələ~QAB|Qax~QAX|Qazax~QAZ|Qobustan~QOB|Quba~QBA|Qubadli~QBI|Qusar~QUS|Saatlı~SAT|Sabirabad~SAB|Şabran~SBN|Sədərək~SAD|Şahbuz~SAH|Şəki~SAK|Salyan~SAL|Şamaxı~SMI|Şəmkir~SKR|Samux~SMX|Şərur~SAR|Siyəzən~SIY|Şuşa~SUS|Tərtər~TAR|Tovuz~TOV|Ucar~UCA|Xa\xe7maz~XAC|Xızı~XIZ|Xocalı~XCI|Xocavənd~XVD|Yardımlı~YAR|Yevlax~YEV|Zəngilan~ZAN|Zaqatala~ZAQ|Zərdab~ZAR"],["Bahamas","BS","Acklins Island~01|Berry Islands~22|Bimini~02|Black Point~23|Cat Island~03|Central Abaco~24|Crooked Island and Long Cay~28|East Grand Bahama~29|Exuma~04|Freeport~05|Fresh Creek~06|Governor's Harbour~07|Green Turtle Cay~08|Harbour Island~09|High Rock~10|Inagua~11|Kemps Bay~12|Long Island~13|Marsh Harbour~14|Mayaguana~15|Moore’s Island~40|New Providence~16|Nichollstown and Berry Islands~17|North Abaco~42|North Andros~41|North Eleuthera~33|Ragged Island~18|Rock Sound~19|San Salvador and Rum Cay~20|Sandy Point~21|South Abaco~35|South Andros~36|South Eleuthera~37|West Grand Bahama~39"],["Bahrain","BH","Al Janūbīyah~14|Al Manāmah~13|Al Muḩarraq~15|Al Wusţ\xe1~16|Ash Shamālīyah~17"],["Bangladesh","BD","Barisal~A|Chittagong~B|Dhaka~C|Khulna~D|Mymensingh~M|Rajshahi~E|Rangpur~F|Sylhet~G"],["Barbados","BB","Christ Church~01|Saint Andrew~02|Saint George~03|Saint James~04|Saint John~05|Saint Joseph~06|Saint Lucy~07|Saint Michael~08|Saint Peter~09|Saint Philip~10|Saint Thomas~11"],["Belarus","BY","Brest voblast~BR|Gorod Minsk~HM|Homiel voblast~HO|Hrodna voblast~HR|Mahilyow voblast~MA|Minsk voblast~MI|Vitsebsk voblast~VI"],["Belgium","BE","Brussels~BRU|Flanders~VLG|Wallonia~WAL"],["Belize","BZ","Belize District~BZ|Cayo District~CY|Corozal District~CZL|Orange Walk District~OW|Stann Creek District~SC|Toledo District~TOL"],["Benin","BJ","Alibori~AL|Atakora~AK|Atlantique~AQ|Borgou~BO|Collines Department~CO|Donga~DO|Kouffo~KO|Littoral Department~LI|Mono Department~MO|Ou\xe9m\xe9~OU|Plateau~PL|Zou~ZO"],["Bermuda","BM","City of Hamilton~03|Devonshire Parish~01|Hamilton Parish~02|Paget Parish~04|Pembroke Parish~05|Sandys Parish~08|Smith's Parish~09|Southampton Parish~10|St. George's Parish~07|Town of St. George~06|Warwick Parish~11"],["Bhutan","BT","Bumthang~33|Chhukha~12|Dagana~22|Gasa~GA|Haa~13|Lhuntse~44|Mongar~42|Paro~11|Pemagatshel~43|Punakha~23|Samdrup Jongkhar~45|Samtse~14|Sarpang~31|Thimphu~15|Trashigang~41|Trashiyangtse~TY|Trongsa~32|Tsirang~21|Wangdue Phodrang~24|Zhemgang~34"],["Bolivia","BO","Beni~BE|Chuquisaca~CH|Cochabamba~CB|La Paz~LP|Oruro~OR|Pando~PD|Potos\xed~PT|Santa Cruz~SC|Tarija~TJ"],["Bonaire, Sint Eustatius and Saba","BQ","Bonaire~BO|Saba Isand~SA|Sint Eustatius~SE"],["Bosnia and Herzegovina","BA","Brčko Distrikt~BRC|Federacija Bosne i Hercegovine~BIH|Republika Srpska~SRP"],["Botswana","BW","Central~CE|Ghanzi~GH|Kgalagadi~KG|Kgatleng~KL|Kweneng~KW|North West~NW|North-East~NE|South East~SE|Southern~SO"],["Bouvet Island","BV","Bouvet Island~BV"],["Brazil","BR","Acre~AC|Alagoas~AL|Amap\xe1~AP|Amazonas~AM|Bahia~BA|Cear\xe1~CE|Distrito Federal~DF|Esp\xedrito Santo~ES|Goi\xe1s~GO|Maranh\xe3o~MA|Mato Grosso~MT|Mato Grosso do Sul~MS|Minas Gerais~MG|Par\xe1~PA|Para\xedba~PB|Paran\xe1~PR|Pernambuco~PE|Piau\xed~PI|Rio de Janeiro~RJ|Rio Grande do Norte~RN|Rio Grande do Sul~RS|Rond\xf4nia~RO|Roraima~RR|Santa Catarina~SC|S\xe3o Paulo~SP|Sergipe~SE|Tocantins~TO"],["British Indian Ocean Territory","IO","British Indian Ocean Territory~IO"],["Brunei Darussalam","BN","Belait~BE|Brunei Muara~BM|Temburong~TE|Tutong~TU"],["Bulgaria","BG","Blagoevgrad~01|Burgas~02|Dobrich~08|Gabrovo~07|Jambol~28|Khaskovo~26|Kjustendil~10|Kurdzhali~09|Lovech~11|Montana~12|Pazardzhik~13|Pernik~14|Pleven~15|Plovdiv~16|Razgrad~17|Ruse~18|Shumen~27|Silistra~19|Sliven~20|Smoljan~21|Sofija~23|Sofija-Grad~22|Stara Zagora~24|Turgovishhe~25|Varna~03|Veliko Turnovo~04|Vidin~05|Vraca~06"],["Burkina Faso","BF","Bal\xe9~BAL|Bam/Lake Bam~BAM|Banwa Province~BAN|Baz\xe8ga~BAZ|Bougouriba~BGR|Boulgou Province~BLG|Boulkiemd\xe9~BLK|Como\xe9/Komoe~COM|Ganzourgou Province~GAN|Gnagna~GNA|Gourma Province~GOU|Houet~HOU|Ioba~IOB|Kadiogo~KAD|K\xe9n\xe9dougou~KEN|Komondjari~KMD|Kompienga~KMP|Kossi Province~KOS|Koulp\xe9logo~KOP|Kouritenga~KOT|Kourw\xe9ogo~KOW|L\xe9raba~LER|Loroum~LOR|Mouhoun~MOU|Namentenga~NAM|Naouri/Nahouri~NAO|Nayala~NAY|Noumbiel~NOU|Oubritenga~OUB|Oudalan~OUD|Passor\xe9~PAS|Poni~PON|Sangui\xe9~SNG|Sanmatenga~SMT|S\xe9no~SEN|Sissili~SIS|Soum~SOM|Sourou~SOR|Tapoa~TAP|Tui/Tuy~TUI|Yagha~YAG|Yatenga~YAT|Ziro~ZIR|Zondoma~ZON|Zoundw\xe9ogo~ZOU"],["Burundi","BI","Bubanza~BB|Bujumbura Mairie~BM|Bujumbura Rural~BL|Bururi~BR|Cankuzo~CA|Cibitoke~CI|Gitega~GI|Karuzi~KR|Kayanza~KY|Kirundo~KI|Makamba~MA|Muramvya~MU|Muyinga~MY|Mwaro~MW|Ngozi~NG|Rutana~RT|Ruyigi~RY"],["Cambodia","KH","Baat Dambang~2|Banteay Mean Chey~1|Kampong Chaam~3|Kampong Chhnang~4|Kampong Spueu~5|Kampong Thum~6|Kampot~7|Kandaal~8|Kaoh Kong~9|Kracheh~10|Krong Kaeb~23|Krong Pailin~24|Krong Preah Sihanouk~18|Mondol Kiri~11|Otdar Mean Chey~22|Phnom Penh~12|Pousaat~15|Preah Vihear~13|Prey Veaeng~14|Rotanah Kiri~16|Siem Reab~17|Stueng Treng~19|Svaay Rieng~20|Taakaev~21|Tbong Khmum~25"],["Cameroon","CM","Adamaoua~AD|Centre~CE|Est~ES|Extr\xeame-Nord~EN|Littoral~LT|Nord~NO|Nord-Ouest~NW|Ouest~OU|Sud~SU|Sud-Ouest~SW"],["Canada","CA","Alberta~AB|British Columbia~BC|Manitoba~MB|New Brunswick~NB|Newfoundland and Labrador~NL|Northwest Territories~NT|Nova Scotia~NS|Nunavut~NU|Ontario~ON|Prince Edward Island~PE|Quebec~QC|Saskatchewan~SK|Yukon~YT"],["Cape Verde","CV","Boa Vista~BV|Brava~BR|Calheta de S\xe3o Miguel~CS|Maio~MA|Mosteiros~MO|Pa\xfal~PA|Porto Novo~PN|Praia~PR|Ribeira Brava~RB|Ribeira Grande~RG|Sal~SL|Santa Catarina~CA|Santa Cruz~CR|S\xe3o Domingos~SD|S\xe3o Filipe~SF|S\xe3o Nicolau~SN|S\xe3o Vicente~SV|Tarrafal~TA|Tarrafal de S\xe3o Nicolau~TS"],["Cayman Islands","KY","Creek~undefined|Eastern~undefined|Midland~undefined|South Town~undefined|Spot Bay~undefined|Stake Bay~undefined|West End~undefined|Western~undefined"],["Central African Republic","CF","Bamingui-Bangoran~BB|Bangui~BGF|Basse-Kotto~BK|Haute-Kotto~HK|Haut-Mbomou~HM|K\xe9mo~KG|Lobaye~LB|Mamb\xe9r\xe9-Kad\xe9\xef~HS|Mbomou~MB|Nana-Grebizi~10|Nana-Mamb\xe9r\xe9~NM|Ombella-M'Poko~MP|Ouaka~UK|Ouham~AC|Ouham P\xe9nd\xe9~OP|Sangha-Mba\xe9r\xe9~SE|Vakaga~VK"],["Chad","TD","Bahr el Ghazal~BG|Batha~BA|Borkou~BO|Chari-Baguirmi~CB|Ennedi-Est~EE|Ennedi-Ouest~EO|Gu\xe9ra~GR|Hadjer Lamis~HL|Kanem~KA|Lac~LC|Logone Occidental~LO|Logone Oriental~LR|Mondoul~MA|Mayo-K\xe9bbi-Est~ME|Moyen-Chari~MC|Ouaddai~OD|Salamat~SA|Sila~SI|Tandjil\xe9~TA|Tibesti~TI|Ville de Ndjamena~ND|Wadi Fira~WF"],["Chile","CL","Ais\xe9n del General Carlos Ib\xe1\xf1ez del Campo~AI|Antofagasta~AN|Araucan\xeda~AR|Arica y Parinacota~AP|Atacama~AT|B\xedo-B\xedo~BI|Coquimbo~CO|Libertador General Bernardo O'Higgins~LI|Los Lagos~LL|Los R\xedos~LR|Magallanes y Antartica Chilena~MA|Marga-Marga~|Maule~ML|\xd1uble~NB|Regi\xf3n Metropolitana de Santiago~RM|Tarapac\xe1~TA|Valpara\xedso~VS"],["China","CN","Anhui~AH|Beijing~BJ|Chongqing~CQ|Fujian~FJ|Gansu~GS|Guangdong~GD|Guangxi~GX|Guizhou~GZ|Hainan~HI|Hebei~HE|Heilongjiang~HL|Henan~HA|Hong Kong~HK|Hubei~HB|Hunan~HN|Inner Mongolia~NM|Jiangsu~JS|Jiangxi~JX|Jilin~JL|Liaoning~LN|Macau~MO|Ningxia~NX|Qinghai~QH|Shaanxi~SN|Shandong~SD|Shanghai~SH|Shanxi~SX|Sichuan~SC|Tianjin~TJ|Tibet~XZ|Xinjiang~XJ|Yunnan~YN|Zhejiang~ZJ"],["Christmas Island","CX","Christmas Island~CX"],["Cocos (Keeling) Islands","CC","Direction Island~DI|Home Island~HM|Horsburgh Island~HR|North Keeling Island~NK|South Island~SI|West Island~WI"],["Colombia","CO","Amazonas~AMA|Antioquia~ANT|Arauca~ARA|Archipi\xe9lago de San Andr\xe9s~SAP|Atl\xe1ntico~ATL|Bogot\xe1 D.C.~DC|Bol\xedvar~BOL|Boyac\xe1~BOY|Caldas~CAL|Caquet\xe1~CAQ|Casanare~CAS|Cauca~CAU|Cesar~CES|Choc\xf3~CHO|C\xf3rdoba~COR|Cundinamarca~CUN|Guain\xeda~GUA|Guaviare~GUV|Huila~HUI|La Guajira~LAG|Magdalena~MAG|Meta~MET|Nari\xf1o~NAR|Norte de Santander~NSA|Putumayo~PUT|Quind\xedo~QUI|Risaralda~RIS|Santander~SAN|Sucre~SUC|Tolima~TOL|Valle del Cauca~VAC|Vaup\xe9s~VAU|Vichada~VID"],["Comoros","KM","Andjaz\xeedja~G|Andjou\xe2n~A|Mo\xfbh\xeel\xee~M"],["Congo, Republic of the (Brazzaville)","CG","Bouenza~11|Brazzaville~BZV|Cuvette~8|Cuvette-Ouest~15|Kouilou~5|L\xe9koumou~2|Likouala~7|Niari~9|Plateaux~14|Pointe-Noire~16|Pool~12|Sangha~13"],["Congo, the Democratic Republic of the (Kinshasa)","CD","Bandundu~BN|Bas-Congo~BC|\xc9quateur~EQ|Kasa\xef-Occidental~KE|Kasa\xef-Oriental~KW|Katanga~KA|Kinshasa~KN|Maniema~MA|Nord-Kivu~NK|Orientale~OR|Sud-Kivu~SK"],["Cook Islands","CK","Aitutaki~undefined|Atiu~undefined|Avarua~undefined|Mangaia~undefined|Manihiki~undefined|Ma'uke~undefined|Mitiaro~undefined|Nassau~undefined|Palmerston~undefined|Penrhyn~undefined|Pukapuka~undefined|Rakahanga~undefined"],["Costa Rica","CR","Alajuela~2|Cartago~3|Guanacaste~5|Heredia~4|Lim\xf3n~7|Puntarenas~6|San Jos\xe9~1"],["C\xf4te d'Ivoire, Republic of","CI","Agn\xe9by~16|Bafing~17|Bas-Sassandra~09|Dengu\xe9l\xe9~10|Dix-Huit Montagnes~06|Fromager~18|Haut-Sassandra~02|Lacs~07|Lagunes~01|Marahou\xe9~12|Moyen-Cavally~19|Moyen-Como\xe9~05|N'zi-Como\xe9~11|Savanes~03|Sud-Bandama~15|Sud-Como\xe9~13|Vall\xe9e du Bandama~04|Worodougou~14|Zanzan~08"],["Croatia","HR","Bjelovarsko-bilogorska županija~07|Brodsko-posavska županija~12|Dubrovačko-neretvanska županija~19|Grad Zagreb~21|Istarska županija~18|Karlovačka županija~04|Koprivničko-križevačka županija~06|Krapinsko-zagorska županija~02|Ličko-senjska županija~09|Međimurska županija~20|Osječko-baranjska županija~14|Požeško-slavonska županija~11|Primorsko-goranska županija~08|Sisačko-moslavačka županija~03|Splitsko-dalmatinska županija~17|Šibensko-kninska županija~15|Varaždinska županija~05|Virovitičko-podravska županija~10|Vukovarsko-srijemska županija~16|Zadarska županija~13|Zagrebačka županija~01"],["Cuba","CU","Artemisa~15|Camag\xfcey~09|Ciego de \xc1vila~08|Cienfuegos~06|Granma~12|Guant\xe1namo~14|Holgu\xedn~11|Isla de la Juventud~99|La Habana~03|Las Tunas~10|Matanzas~04|Mayabeque~16|Pinar del R\xedo~01|Sancti Sp\xedritus~07|Santiago de Cuba~13|Villa Clara~05"],["Cura\xe7ao","CW","Cura\xe7ao~CW"],["Cyprus","CY","Ammochostos~04|Keryneia~06|Larnaka~03|Lefkosia~01|Lemesos~02|Pafos~05"],["Czech Republic","CZ","Hlavn\xed město Praha~10|Jihočesk\xfd kraj~31|Jihomoravsk\xfd kraj~64|Karlovarsk\xfd kraj~41|Kr\xe1lov\xe9hradeck\xfd kraj~52|Libereck\xfd kraj~51|Moravskoslezsk\xfd kraj~80|Olomouck\xfd kraj~71|Pardubick\xfd kraj~53|Plzeňsk\xfd kraj~32|Středočesk\xfd kraj~20|\xdasteck\xfd kraj~42|Vysočina~63|Zl\xednsk\xfd kraj~72"],["Denmark","DK","Hovedstaden~DK-84|Midtjylland~DK-82|Nordjylland~DK-81|Sj\xe6lland~DK-85|Syddanmark~DK-83"],["Djibouti","DJ","Ali Sabieh~AS|Arta~AR|Dikhil~DI|Obock~OB|Tadjourah~TA"],["Dominica","DM","Saint Andrew Parish~02|Saint David Parish~03|Saint George Parish~04|Saint John Parish~05|Saint Joseph Parish~06|Saint Luke Parish~07|Saint Mark Parish~08|Saint Patrick Parish~09|Saint Paul Parish~10|Saint Peter Parish~11"],["Dominican Republic","DO","Cibao Central~02|Del Valle~37|Distrito Nacional~01|Enriquillo~38|Norcentral~04|Nordeste~33|Noroeste~34|Norte~35|Valdesia~42"],["Ecuador","EC","Azuay~A|Bol\xedvar~B|Ca\xf1ar~F|Carchi~C|Chimborazo~H|Cotopaxi~X|El Oro~O|Esmeraldas~E|Gal\xe1pagos~W|Guayas~G|Imbabura~I|Loja~L|Los R\xedos~R|Manab\xed~M|Morona-Santiago~S|Napo~N|Orellana~D|Pastaza~Y|Pichincha~P|Santa Elena~SE|Santo Domingo de los Ts\xe1chilas~SD|Sucumb\xedos~U|Tungurahua~T|Zamora-Chinchipe~Z"],["Egypt","EG","Alexandria~ALX|Aswan~ASN|Asyout~AST|Bani Sueif~BNS|Beheira~BH|Cairo~C|Daqahlia~DK|Dumiat~DT|El Bahr El Ahmar~BA|El Ismailia~IS|El Suez~SUZ|El Wadi El Gedeed~WAD|Fayoum~FYM|Gharbia~GH|Giza~GZ|Helwan~HU|Kafr El Sheikh~KFS|Luxor~LX|Matrouh~MT|Menia~MN|Menofia~MNF|North Sinai~SIN|Port Said~PTS|Qalubia~KB|Qena~KN|Sharqia~SHR|Sixth of October~SU|Sohag~SHG|South Sinai~JS"],["El Salvador","SV","Ahuachap\xe1n~AH|Caba\xf1as~CA|Cuscatl\xe1n~CU|Chalatenango~CH|La Libertad~LI|La Paz~PA|La Uni\xf3n~UN|Moraz\xe1n~MO|San Miguel~SM|San Salvador~SS|Santa Ana~SA|San Vicente~SV|Sonsonate~SO|Usulut\xe1n~US"],["Equatorial Guinea","GQ","Annob\xf3n~AN|Bioko Norte~BN|Bioko Sur~BS|Centro Sur~CS|Ki\xe9-Ntem~KN|Litoral~LI|Wele-Nzas~WN"],["Eritrea","ER","Anseba~AN|Debub~DU|Debub-Keih-Bahri~DK|Gash-Barka~GB|Maekel~MA|Semien-Keih-Bahri~SK"],["Estonia","EE","Harjumaa (Tallinn)~37|Hiiumaa (Kardla)~39|Ida-Virumaa (Johvi)~44|J\xe4rvamaa (Paide)~41|J\xf5gevamaa (Jogeva)~49|L\xe4\xe4nemaa~57|L\xe4\xe4ne-Virumaa (Rakvere)~59|P\xe4rnumaa (Parnu)~67|P\xf5lvamaa (Polva)~65|Raplamaa (Rapla)~70|Saaremaa (Kuessaare)~74|Tartumaa (Tartu)~78|Valgamaa (Valga)~82|Viljandimaa (Viljandi)~84|V\xf5rumaa (Voru)~86"],["Ethiopia","ET","Addis Ababa~AA|Afar~AF|Amhara~AM|Benshangul-Gumaz~BE|Dire Dawa~DD|Gambela~GA|Harari~HA|Oromia~OR|Somali~SO|Southern Nations Nationalities and People's Region~SN|Tigray~TI"],["Falkland Islands (Islas Malvinas)","FK","Falkland Islands (Islas Malvinas)~undefined"],["Faroe Islands","FO","Bordoy~undefined|Eysturoy~undefined|Mykines~undefined|Sandoy~undefined|Skuvoy~undefined|Streymoy~undefined|Suduroy~undefined|Tvoroyri~undefined|Vagar~undefined"],["Fiji","FJ","Ba~01|Bua~02|Cakaudrove~03|Kadavu~04|Lau~05|Lomaiviti~06|Macuata~07|Nadroga and Navosa~08|Naitasiri~09|Namosi~10|Ra~11|Rewa~12|Rotuma~R|Serua~13|Tailevu~14"],["Finland","FI","Ahvenanmaan maakunta~FI-01|Etel\xe4-Karjala~FI-02|Etel\xe4-Pohjanmaa~FI-03|Etel\xe4-Savo~FI-04|Kainuu~FI-05|Kanta-H\xe4me~FI-06|Keski-Pohjanmaa~FI-07|Keski-Suomi~FI-08|Kymenlaakso~FI-09|Lappi~FI-10|Pirkanmaa~FI-11|Pohjanmaa~FI-12|Pohjois-Karjala~FI-13|Pohjois-Pohjanmaa~FI-14|Pohjois-Savo~FI-15|P\xe4ij\xe4t-H\xe4me~FI-16|Satakunta~FI-17|Uusimaa~FI-18|Varsinais-Suomi~FI-19"],["France","FR","Auvergne-Rh\xf4ne-Alpes~ARA|Bourgogne-Franche-Comt\xe9~BFC|Bretagne~BRE|Centre-Val de Loire~CVL|Corse~COR|Grand Est~GES|Hauts-de-France~HDF|\xcele-de-France~IDF|Normandie~NOR|Nouvelle-Aquitaine~NAQ|Occitanie~OCC|Pays de la Loire~PDL|Provence-Alpes-Cote d'Azur~PAC|Clipperton~CP|Guadeloupe~GP|Guyane~GF|Martinique~MQ|Mayotte~YT|Nouvelle-Cal\xe9donie~NC|Polyn\xe9sie~PF|Saint-Pierre-et-Miquelon~PM|Saint Barth\xe9lemy~BL|Saint Martin~MF|R\xe9union~RE|Terres Australes Fran\xe7aises~TF|Wallis-et-Futuna~WF"],["French Guiana","GF","French Guiana~undefined"],["French Polynesia","PF","Archipel des Marquises~undefined|Archipel des Tuamotu~undefined|Archipel des Tubuai~undefined|Iles du Vent~undefined|Iles Sous-le-Vent~undefined"],["French Southern and Antarctic Lands","TF","Adelie Land~undefined|Ile Crozet~undefined|Iles Kerguelen~undefined|Iles Saint-Paul et Amsterdam~undefined"],["Gabon","GA","Estuaire~1|Haut-Ogoou\xe9~2|Moyen-Ogoou\xe9~3|Ngouni\xe9~4|Nyanga~5|Ogoou\xe9-Ivindo~6|Ogoou\xe9-Lolo~7|Ogoou\xe9-Maritime~8|Woleu-Ntem~9"],["Gambia, The","GM","Banjul~B|Central River~M|Lower River~L|North Bank~N|Upper River~U|Western~W"],["Georgia","GE","Abkhazia (Sokhumi)~AB|Ajaria (Bat'umi)~AJ|Guria~GU|Imereti~IM|K'akheti~KA|Kvemo Kartli~KK|Mtshkheta-Mtianeti~MM|Rach'a-Lexhkumi-KvemoSvaneti~RL|Samegrelo-Zemo Svaneti~SZ|Samtskhe-Javakheti~SJ|Shida Kartli~SK|Tbilisi~TB"],["Germany","DE","Baden-W\xfcrttemberg~BW|Bayern~BY|Berlin~BE|Brandenburg~BB|Bremen~HB|Hamburg~HH|Hessen~HE|Mecklenburg-Vorpommern~MV|Niedersachsen~NI|Nordrhein-Westfalen~NW|Rheinland-Pfalz~RP|Saarland~SL|Sachsen~SN|Sachsen-Anhalt~ST|Schleswig-Holstein~SH|Th\xfcringen~TH"],["Ghana","GH","Ahafo~undefined|Ashanti~AH|Bono~undefined|Bono East~undefined|Central~CP|Eastern~EP|Greater Accra~AA|Northern~NP|North East~undefined|Oti~undefined|Savannah~undefined|Upper East~UE|Upper West~UW|Volta~TV|Western~WP|Western North~undefined"],["Gibraltar","GI","Gibraltar~undefined"],["Greece","GR","Anatolik\xed Makedon\xeda kai Thr\xe1ki~A|Attikḯ~I|Dytik\xed Ell\xe1da~G|Dytik\xed Makedon\xeda~C|Ion\xeda N\xedsia~F|Kentrik\xed Makedon\xeda~B|Kr\xedt\xed~M|Not\xedo Aiga\xedo~L|Peloponn\xedsos~J|Stere\xe1 Ell\xe1da~H|Thessal\xeda~E|Vore\xedo Aiga\xedo~K|\xcdpeiros~D|\xc1gion \xd3ros~69"],["Greenland","GL","Kommune Kujalleq~KU|Kommuneqarfik Sermersooq~SM|Qaasuitsup Kommunia~QA|Qeqqata Kommunia~QE"],["Grenada","GD","Saint Andrew~01|Saint David~02|Saint George~03|Saint John~04|Saint Mark~05|Saint Patrick~06|Southern Grenadine Islands~10"],["Guadeloupe","GP","Guadeloupe~undefined"],["Guam","GU","Guam~undefined"],["Guatemala","GT","Alta Verapaz~AV|Baja Verapaz~BV|Chimaltenango~CM|Chiquimula~CQ|El Progreso~PR|Escuintla~ES|Guatemala~GU|Huehuetenango~HU|Izabal~IZ|Jalapa~JA|Jutiapa~JU|Pet\xe9n~PE|Quetzaltenango~QZ|Quich\xe9~QC|Retalhuleu~Re|Sacatep\xe9quez~SA|San Marcos~SM|Santa Rosa~SR|Solol\xe1~SO|Suchitep\xe9quez~SU|Totonicap\xe1n~TO|Zacapa~ZA"],["Guernsey","GG","Castel~undefined|Forest~undefined|St. Andrew~undefined|St. Martin~undefined|St. Peter Port~undefined|St. Pierre du Bois~undefined|St. Sampson~undefined|St. Saviour~undefined|Torteval~undefined|Vale~undefined"],["Guinea","GN","Bok\xe9~B|Conakry~C|Faranah~F|Kankan~K|Kindia~D|Lab\xe9~L|Mamou~M|Nz\xe9r\xe9kor\xe9~N"],["Guinea-Bissau","GW","Bafat\xe1~BA|Biombo~BM|Bissau~BS|Bolama-Bijagos~BL|Cacheu~CA|Gab\xfa~GA|Oio~OI|Quinara~QU|Tombali~TO"],["Guyana","GY","Barima-Waini~BA|Cuyuni-Mazaruni~CU|Demerara-Mahaica~DE|East Berbice-Corentyne~EB|Essequibo Islands-West Demerara~ES|Mahaica-Berbice~MA|Pomeroon-Supenaam~PM|Potaro-Siparuni~PT|Upper Demerara-Berbice~UD|Upper Takutu-Upper Essequibo~UT"],["Haiti","HT","Artibonite~AR|Centre~CE|Grand'Anse~GA|Nippes~NI|Nord~ND|Nord-Est~NE|Nord-Ouest~NO|Ouest~OU|Sud~SD|Sud-Est~SE"],["Heard Island and McDonald Islands","HM","Heard Island and McDonald Islands~undefined"],["Holy See (Vatican City)","VA","Holy See (Vatican City)~01"],["Honduras","HN","Atl\xe1ntida~AT|Choluteca~CH|Col\xf3n~CL|Comayagua~CM|Cop\xe1n~CP|Cort\xe9s~CR|El Para\xedso~EP|Francisco Moraz\xe1n~FM|Gracias a Dios~GD|Intibuc\xe1~IN|Islas de la Bah\xeda~IB|La Paz~LP|Lempira~LE|Ocotepeque~OC|Olancho~OL|Santa B\xe1rbara~SB|Valle~VA|Yoro~YO"],["Hong Kong","HK","Hong Kong~HK"],["Hungary","HU","B\xe1cs-Kiskun~BK|Baranya~BA|B\xe9k\xe9s~BE|B\xe9k\xe9scsaba~BC|Borsod-Abauj-Zemplen~BZ|Budapest~BU|Csongr\xe1d~CS|Debrecen~DE|Duna\xfajv\xe1ros~DU|Eger~EG|\xc9rd~ER|Fej\xe9r~FE|Győr~GY|Győr-Moson-Sopron~GS|Hajd\xfa-Bihar~HB|Heves~HE|H\xf3dmezőv\xe1s\xe1rhely~HV|J\xe1sz-Nagykun-Szolnok~N|Kaposv\xe1r~KV|Kecskem\xe9t~KM|Kom\xe1rom-Esztergom~KE|Miskolc~MI|Nagykanizsa~NK|N\xf3gr\xe1d~NO|Ny\xedregyh\xe1za~NY|P\xe9cs~PS|Pest~PE|Salg\xf3tarj\xe1n~ST|Somogy~SO|Sopron~SN|Szabolcs-\xe1-Bereg~SZ|Szeged~SD|Sz\xe9kesfeh\xe9rv\xe1r~SF|Szeksz\xe1rd~SS|Szolnok~SK|Szombathely~SH|Tatab\xe1nya~TB|Tolna~TO|Vas~VA|Veszpr\xe9m~VE|Veszpr\xe9m (City)~VM|Zala~ZA|Zalaegerszeg~ZE"],["Iceland","IS","Austurland~7|H\xf6fu\xf0borgarsv\xe6\xf0i~1|Nor\xf0urland eystra~6|Nor\xf0urland vestra~5|Su\xf0urland~8|Su\xf0urnes~2|Vestfir\xf0ir~4|Vesturland~3"],["India","IN","Andaman and Nicobar Islands~AN|Andhra Pradesh~AP|Arunachal Pradesh~AR|Assam~AS|Bihar~BR|Chandigarh~CH|Chhattisgarh~CT|Dadra and Nagar Haveli and Daman and Diu~DH|Delhi~DL|Goa~GA|Gujarat~GJ|Haryana~HR|Himachal Pradesh~HP|Jammu and Kashmir~JK|Jharkhand~JH|Karnataka~KA|Kerala~KL|Ladakh~LA|Lakshadweep~LD|Madhya Pradesh~MP|Maharashtra~MH|Manipur~MN|Meghalaya~ML|Mizoram~MZ|Nagaland~NL|Odisha~OR|Puducherry~PY|Punjab~PB|Rajasthan~RJ|Sikkim~SK|Tamil Nadu~TN|Telangana~TG|Tripura~TR|Uttarakhand~UT|Uttar Pradesh~UP|West Bengal~WB"],["Indonesia","ID","Aceh~AC|Bali~BA|Bangka Belitung~BB|Banten~BT|Bengkulu~BE|Gorontalo~GO|Jakarta Raya~JK|Jambi~JA|Jawa Barat~JB|Jawa Tengah~JT|Jawa Timur~JI|Kalimantan Barat~KB|Kalimantan Selatan~KS|Kalimantan Tengah~KT|Kalimantan Timur~KI|Kalimantan Utara~KU|Kepulauan Riau~KR|Lampung~LA|Maluku~MA|Maluku Utara~MU|Nusa Tenggara Barat~NB|Nusa Tenggara Timur~NT|Papua~PA|Papua Barat~PB|Riau~RI|Sulawesi Selatan~SR|Sulawesi Tengah~ST|Sulawesi Tenggara~SG|Sulawesi Utara~SA|Sumatera Barat~SB|Sumatera Selatan~SS|Sumatera Utara~SU|Yogyakarta~YO"],["Iran, Islamic Republic of","IR","Alborz~32|Ardabīl~03|Āz̄arbāyjān-e Gharbī~02|Āz̄arbāyjān-e Sharqī~01|Būshehr~06|Chahār Maḩāl va Bakhtīārī~08|Eşfahān~04|Fārs~14|Gīlān~19|Golestān~27|Hamadān~24|Hormozgān~23|Īlām~05|Kermān~15|Kermānshāh~17|Khorāsān-e Jonūbī~29|Khorāsān-e Raẕavī~30|Khorāsān-e Shomālī~61|Khūzestān~10|Kohgīlūyeh va Bowyer Aḩmad~18|Kordestān~16|Lorestān~20|Markazi~22|Māzandarān~21|Qazvīn~28|Qom~26|Semnān~12|Sīstān va Balūchestān~13|Tehrān~07|Yazd~25|Zanjān~11"],["Iraq","IQ","Al Anbār~AN|Al Başrah~BA|Al Muthann\xe1~MU|Al Qādisīyah~QA|An Najaf~NA|Arbīl~AR|As Sulaymānīyah~SU|Bābil~BB|Baghdād~BG|Dohuk~DA|Dhī Qār~DQ|Diyāl\xe1~DI|Karbalā'~KA|Kirkuk~KI|Maysān~MA|Nīnaw\xe1~NI|Şalāḩ ad Dīn~SD|Wāsiţ~WA"],["Ireland","IE","Carlow~CW|Cavan~CN|Clare~CE|Cork~CO|Donegal~DL|Dublin~D|Galway~G|Kerry~KY|Kildare~KE|Kilkenny~KK|Laois~LS|Leitrim~LM|Limerick~LK|Longford~LD|Louth~LH|Mayo~MO|Meath~MH|Monaghan~MN|Offaly~OY|Roscommon~RN|Sligo~SO|Tipperary~TA|Waterford~WD|Westmeath~WH|Wexford~WX|Wicklow~WW"],["Isle of Man","IM","Isle of Man~undefined"],["Israel","IL","HaDarom~D|HaMerkaz~M|HaTsafon~Z|H̱efa~HA|Tel-Aviv~TA|Yerushalayim~JM"],["Italy","IT","Abruzzo~65|Basilicata~77|Calabria~78|Campania~72|Emilia-Romagna~45|Friuli-Venezia Giulia~36|Lazio~62|Liguria~42|Lombardia~25|Marche~57|Molise~67|Piemonte~21|Puglia~75|Sardegna~88|Sicilia~82|Toscana~52|Trentino-Alto Adige~32|Umbria~55|Valle d'Aosta~23|Veneto~34"],["Jamaica","JM","Clarendon~13|Hanover~09|Kingston~01|Manchester~12|Portland~04|Saint Andrew~02|Saint Ann~06|Saint Catherine~14|Saint Elizabeth~11|Saint James~08|Saint Mary~05|Saint Thomas~03|Trelawny~07|Westmoreland~10"],["Japan","JP","Aichi~23|Akita~05|Aomori~02|Chiba~12|Ehime~38|Fukui~18|Fukuoka~40|Fukushima~07|Gifu~21|Gunma~10|Hiroshima~34|Hokkaido~01|Hyogo~28|Ibaraki~08|Ishikawa~17|Iwate~03|Kagawa~37|Kagoshima~46|Kanagawa~14|Kochi~39|Kumamoto~43|Kyoto~26|Mie~24|Miyagi~04|Miyazaki~45|Nagano~20|Nagasaki~42|Nara~29|Niigata~15|Oita~44|Okayama~33|Okinawa~47|Osaka~27|Saga~41|Saitama~11|Shiga~25|Shimane~32|Shizuoka~22|Tochigi~09|Tokushima~36|Tokyo~13|Tottori~31|Toyama~16|Wakayama~30|Yamagata~06|Yamaguchi~35|Yamanashi~19"],["Jersey","JE","Jersey~undefined"],["Jordan","JO","‘Ajlūn~AJ|Al 'Aqabah~AQ|Al Balqā’~BA|Al Karak~KA|Al Mafraq~MA|Al ‘A̅şimah~AM|Aţ Ţafīlah~AT|Az Zarqā’~AZ|Irbid~IR|Jarash~JA|Ma‘ān~MN|Mādabā~MD"],["Kazakhstan","KZ","Almaty~ALA|Aqmola~AKM|Aqtobe~AKT|Astana~AST|Atyrau~ATY|Batys Qazaqstan~ZAP|Bayqongyr~undefined|Mangghystau~MAN|Ongtustik Qazaqstan~YUZ|Pavlodar~PAV|Qaraghandy~KAR|Qostanay~KUS|Qyzylorda~KZY|Shyghys Qazaqstan~VOS|Soltustik Qazaqstan~SEV|Zhambyl~ZHA"],["Kenya","KE","Baringo~01|Bomet~02|Bungoma~03|Busia~04|Eleyo/Marakwet~05|Embu~06|Garissa~07|Homa Bay~08|Isiolo~09|Kajiado~10|Kakamega~11|Kericho~12|Kiambu~13|Kilifi~14|Kirinyaga~15|Kisii~16|Kisumu~17|Kitui~18|Kwale~19|Laikipia~20|Lamu~21|Machakos~22|Makueni~23|Mandera~24|Marsabit~25|Meru~26|Migori~27|Mombasa~28|Murang'a~29|Nairobi City~30|Nakuru~31|Nandi~32|Narok~33|Nyamira~34|Nyandarua~35|Nyeri~36|Samburu~37|Siaya~38|Taita/Taveta~39|Tana River~40|Tharaka-Nithi~41|Trans Nzoia~42|Turkana~43|Uasin Gishu~44|Vihiga~45|Wajir~46|West Pokot~47"],["Kiribati","KI","Abaiang~undefined|Abemama~undefined|Aranuka~undefined|Arorae~undefined|Banaba~undefined|Beru~undefined|Butaritari~undefined|Central Gilberts~undefined|Gilbert Islands~G|Kanton~undefined|Kiritimati~undefined|Kuria~undefined|Line Islands~L|Maiana~undefined|Makin~undefined|Marakei~undefined|Nikunau~undefined|Nonouti~undefined|Northern Gilberts~undefined|Onotoa~undefined|Phoenix Islands~P|Southern Gilberts~undefined|Tabiteuea~undefined|Tabuaeran~undefined|Tamana~undefined|Tarawa~undefined|Teraina~undefined"],["Korea, Democratic People's Republic of","KP","Chagang-do (Chagang Province)~04|Hamgyong-bukto (North Hamgyong Province)~09|Hamgyong-namdo (South Hamgyong Province)~08|Hwanghae-bukto (North Hwanghae Province)~06|Hwanghae-namdo (South Hwanghae Province)~05|Kangwon-do (Kangwon Province)~07|Nasŏn (Najin-Sŏnbong)~13|P'yongan-bukto (North P'yongan Province)~03|P'yongan-namdo (South P'yongan Province)~02|P'yongyang-si (P'yongyang City)~01|Yanggang-do (Yanggang Province)~10"],["Korea, Republic of","KR","Chungcheongbuk-do~43|Chungcheongnam-do~44|Jeju-teukbyeoljachido~49|Jeollabuk-do~45|Jeollanam-do~46|Incheon-gwangyeoksi~28|Gangwon-do~42|Gwangju-gwangyeoksi~29|Gyeonggi-do~41|Gyeongsangbuk-do~47|Gyeongsangnam-do~48|Busan-gwangyeoksi~26|Seoul-teukbyeolsi~11|Sejong-teukbyeoljachisi~50|Daegu-gwangyeoksi~27|Daejeon-gwangyeoksi~30|Ulsan-gwangyeoksi~31"],["Kosovo","XK","Farizaj~FZ|Gjakova~GK|Gjilan~GL|Mitrovica~MI|Peja/Peć~PE|Pristina~PR|Prizren~PZ"],["Kuwait","KW","Al Aḩmadi~AH|Al Farwānīyah~FA|Al Jahrā’~JA|Al ‘Āşimah~KU|Ḩawallī~HA|Mubārak al Kabir~MU"],["Kyrgyzstan","KG","Batken Oblasty~B|Bishkek Shaary~GB|Chuy Oblasty (Bishkek)~C|Jalal-Abad Oblasty~J|Naryn Oblasty~N|Osh Oblasty~O|Talas Oblasty~T|Ysyk-Kol Oblasty (Karakol)~Y"],["Laos","LA","Attapu~AT|Bok\xe8o~BK|Bolikhamxai~BL|Champasak~CH|Houaphan~HO|Khammouan~KH|Louang Namtha~LM|Louangphabang~LP|Oud\xf4mxai~OU|Ph\xf4ngsali~PH|Salavan~SL|Savannakh\xe9t~SV|Vientiane~VI|Xaignabouli~XA|X\xe9kong~XE|Xaisomboun~XS|Xiangkhouang~XI"],["Latvia","LV","Aglona~001|Aizkraukle~002|Aizpute~003|Aknīste~004|Aloja~005|Alsunga~06|Alūksne~007|Amata~008|Ape~009|Auce~010|Ādaži~011|Babīte~012|Baldone~013|Baltinava~014|Balvi~015|Bauska~016|Beverīna~017|Brocēni~018|Burtnieki~019|Carnikava~020|Cesvaine~021|Cēsis~022|Cibla~023|Dagda~024|Daugavpils~025|Daugavpils (City)~DGV|Dobele~026|Dundaga~027|Durbe~028|Engure~029|Ērgļi~030|Garkalne~031|Grobiņa~032|Gulbene~033|Iecava~034|Ikšķile~035|Ilūkste~036|Inčukalns~037|Jaunjelgava~038|Jaunpiebalga~039|Jaunpils~040|Jelgava~041|Jelgava (City)~JEL|Jēkabpils~042|Jēkabpils (City)~JKB|Jūrmala (City)~JUR|Kandava~043|Kārsava~044|Kocēni~045|Koknese~046|Krāslava~047|Krimulda~048|Krustpils~049|Kuldīga~050|Ķegums~051|Ķekava~052|Lielvārde~053|Liepāja~LPX|Limbaži~054|Līgatne~055|Līvāni~056|Lubāna~057|Ludza~058|Madona~059|Mazsalaca~060|Mālpils~061|Mārupe~062|Mērsrags~063|Naukšēni~064|Nereta~065|Nīca~066|Ogre~067|Olaine~068|Ozolnieki~069|Pārgauja~070|Pāvilosta~071|Pļaviņas~072|Preiļi~073|Priekule~074|Priekuļi~075|Rauna~076|Rēzekne~077|Rēzekne (City)~REZ|Riebiņi~078|Rīga~RIX|Roja~079|Ropaži~080|Rucava~081|Rugāji~082|Rundāle~083|Rūjiena~084|Sala~085|Salacgrīva~086|Salaspils~087|Saldus~088|Saulkrasti~089|Sēja~090|Sigulda~091|Skrīveri~092|Skrunda~093|Smiltene~094|Stopiņi~095|Strenči~096|Talsi~097|Tērvete~098|Tukums~099|Vaiņode~100|Valka~101|Valmiera~VMR|Varakļāni~102|Vārkava~103|Vecpiebalga~104|Vecumnieki~105|Ventspils~106|Ventspils (City)~VEN|Viesīte~107|Viļaka~108|Viļāni~109|Zilupe~110"],["Lebanon","LB","Aakk\xe2r~AK|Baalbelk-Hermel~BH|B\xe9qaa~BI|Beyrouth~BA|Liban-Nord~AS|Liban-Sud~JA|Mont-Liban~JL|Nabat\xeey\xe9~NA"],["Lesotho","LS","Berea~D|Butha-Buthe~B|Leribe~C|Mafeteng~E|Maseru~A|Mohales Hoek~F|Mokhotlong~J|Qacha's Nek~H|Quthing~G|Thaba-Tseka~K"],["Liberia","LR","Bomi~BM|Bong~BG|Gbarpolu~GP|Grand Bassa~GB|Grand Cape Mount~CM|Grand Gedeh~GG|Grand Kru~GK|Lofa~LO|Margibi~MG|Maryland~MY|Montserrado~MO|Nimba~NI|River Cess~RI|River Geee~RG|Sinoe~SI"],["Libya","LY","Al Buţnān~BU|Al Jabal al Akhḑar~JA|Al Jabal al Gharbī~JG|Al Jafārah~JI|Al Jufrah~JU|Al Kufrah~FK|Al Marj~MJ|Al Marquab~MB|Al Wāḩāt~WA|An Nuqaţ al Khams~NQ|Az Zāwiyah~ZA|Banghāzī~BA|Darnah~DR|Ghāt~GH|Mişrātah~MI|Murzuq~MQ|Nālūt~NL|Sabhā~SB|Surt~SR|Ţarābulus~TB|Yafran~WD|Wādī ash Shāţiʾ~WS"],["Liechtenstein","LI","Balzers~01|Eschen~02|Gamprin~03|Mauren~04|Planken~05|Ruggell~06|Schaan~07|Schellenberg~08|Triesen~09|Triesenberg~10|Vaduz~11"],["Lithuania","LT","Alytaus~AL|Kauno~KU|Klaipėdos~KL|Marijampolės~MR|Panevėžio~PN|Šiaulių~SA|Tauragės~TA|Telšių~TE|Utenos~UT|Vilniaus~VL"],["Luxembourg","LU","Capellen~CA|Clevaux~CL|Diekirch~DI|Echternach~EC|Esch-sur-Alzette~ES|Grevenmacher~GR|Luxembourg~LU|Mersch~ME|Redange~RD|Remich~RM|Vianden~VD|Wiltz~WI"],["Macao","MO","Macao~undefined"],["Macedonia, Republic of","MK","Aračinovo~02|Berovo~03|Bitola~04|Bogdanci~05|Bogovinje~06|Bosilovo~07|Brvenica~08|Centar Župa~78|Čaška~80|Češinovo-Obleševo~81|Čučer Sandevo~82|Debar~21|Debarca~22|Delčevo~23|Demir Hisar~25|Demir Kapija~24|Doran~26|Dolneni~27|Gevgelija~18|Gostivar~19|Gradsko~20|Ilinden~34|Jegunovce~35|Karbinci~37|Kavadarci~36|Kičevo~40|Kočani~42|Konče~41|Kratovo~43|Kriva Palanka~44|Krivogaštani~45|Kruševo~46|Kumanovo~47|Lipkovo~48|Lozovo~49|Makedonska Kamenica~51|Makedonski Brod~52|Mavrovo i Rostuša~50|Mogila~53|Negotino~54|Novaci~55|Novo Selo~56|Ohrid~58|Pehčevo~60|Petrovec~59|Plasnica~61|Prilep~62|Probištip~63|Radoviš~|Rankovce~65|Resen~66|Rosoman~67|Skopje~85|Sopište~70|Staro Nagoričane~71|Struga~72|Strumica~73|Studeničani~74|Sveti Nikole~69|Štip~83|Tearce~75|Tetovo~76|Valandovo~10|Vasilevo~11|Veles~13|Vevčani~12|Vinica~14|Vrapčište~16|Zelenikovo~32|Zrnovci~33|Želino~30"],["Madagascar","MG","Antananarivo~T|Antsiranana~D|Fianarantsoa~F|Mahajanga~M|Toamasina~A|Toliara~U"],["Malawi","MW","Balaka~BA|Blantyre~BL|Chikwawa~CK|Chiradzulu~CR|Chitipa~CT|Dedza~DE|Dowa~DO|Karonga~KR|Kasungu~KS|Likoma~LK|Lilongwe~LI|Machinga~MH|Mangochi~MG|Mchinji~MC|Mulanje~MU|Mwanza~MW|Mzimba~MZ|Nkhata Bay~NE|Nkhotakota~NB|Nsanje~NS|Ntcheu~NU|Ntchisi~NI|Phalombe~PH|Rumphi~RU|Salima~SA|Thyolo~TH|Zomba~ZO"],["Malaysia","MY","Johor~01|Kedah~02|Kelantan~03|Melaka~04|Negeri Sembilan~05|Pahang~06|Perak~08|Perlis~09|Pulau Pinang~07|Sabah~12|Sarawak~13|Selangor~10|Terengganu~11|Wilayah Persekutuan (Kuala Lumpur)~14|Wilayah Persekutuan (Labuan)~15|Wilayah Persekutuan (Putrajaya)~16"],["Maldives","MV","Alifu Alifu~02|Alifu Dhaalu~00|Baa~20|Dhaalu~17|Faafu~14|Gaafu Alifu~27|Gaafu Dhaalu~28|Gnaviyani~29|Haa Alifu~07|Haa Dhaalu~23|Kaafu~26|Laamu~05|Lhaviyani~03|Mal\xe9~MLE|Meemu~12|Noonu~25|Raa~13|Seenu~01|Shaviyani~24|Thaa~08|Vaavu~04"],["Mali","ML","Bamako~BKO|Gao~7|Kayes~1|Kidal~8|Koulikoro~2|Mopti~5|Segou~4|Sikasso~3|Tombouctou~6|Taoud\xe9nit~9|M\xe9naka~10"],["Malta","MT","Attard~01|Balzan~02|Birgu~03|Birkirkara~04|Birżebbuġa~05|Bormla~06|Dingli~07|Fgura~08|Floriana~09|Fontana~10|Guda~11|Gżira~12|Għajnsielem~13|Għarb~14|Għargħur~15|Għasri~16|Għaxaq~17|Ħamrun~18|Iklin~19|Isla~20|Kalkara~21|Kerċem~22|Kirkop~23|Lija~24|Luqa~25|Marsa~26|Marsaskala~27|Marsaxlokk~28|Mdina~29|Mellieħa~30|Mġarr~31|Mosta~32|Mqabba~33|Msida~34|Mtarfa~35|Munxar~36|Nadur~37|Naxxar~38|Paola~39|Pembroke~40|Piet\xe0~41|Qala~42|Qormi~43|Qrendi~44|Rabat Għawdex~45|Rabat Malta~46|Safi~47|San Ġiljan~48|San Ġwann~49|San Lawrenz~50|San Pawl il-Baħar~51|Sannat~52|Santa Luċija~53|Santa Venera~54|Siġġiewi~55|Sliema~56|Swieqi~57|Tai Xbiex~58|Tarzien~59|Valletta~60|Xagħra~61|Xewkija~62|Xgħajra~63|Żabbar~64|Żebbuġ Għawde~65|Żebbuġ Malta~66|Żejtun~67|Żurrieq~68"],["Marshall Islands","MH","Ailinglaplap~ALL|Ailuk~ALK|Arno~ARN|Aur~AUR|Bikini and Kili~KIL|Ebon~EBO|Jabat~JAB|Jaluit~JAL|Kwajalein~KWA|Lae~LAE|Lib~LIB|Likiep~LIK|Majuro~MAJ|Maloelap~MAL|Mejit~MEJ|Namdrik~NMK|Namu~NMU|Rongelap~RON|Ujae~UJA|Utrik~UTI|Wotho~WTH|Wotje~WTJ"],["Martinique","MQ","Martinique~undefined"],["Mauritania","MR","Adrar~07|Assaba~03|Brakna~05|Dakhlet Nouadhibou~08|Gorgol~04|Guidimaka~10|Hodh Ech Chargui~01|Hodh El Gharbi~02|Inchiri~12|Nouakchott Nord~14|Nouakchott Ouest~13|Nouakchott Sud~15|Tagant~09|Tiris Zemmour~11|Trarza~06"],["Mauritius","MU","Agalega Islands~AG|Beau Bassin-Rose Hill~BR|Black River~BL|Cargados Carajos Shoals~CC|Curepipe~CU|Flacq~FL|Grand Port~GP|Moka~MO|Pamplemousses~PA|Plaines Wilhems~PW|Port Louis (City)~PU|Port Louis~PL|Riviere du Rempart~RR|Rodrigues Island~RO|Savanne~SA|Vacoas-Phoenix~CP"],["Mayotte","YT","Dzaoudzi~01|Pamandzi~02|Mamoudzou~03|Dembeni~04|Bandr\xe9l\xe9~05|Kani-K\xe9li~06|Bou\xe9ni~07|Chirongui~08|Sada~09|Ouangani~10|Chiconi~11|Tsingoni~12|M'Tsangamouji~13|Acoua~14|Mtsamboro~15|Bandraboua~16|Koungou~17"],["Mexico","MX","Aguascalientes~AGU|Baja California~BCN|Baja California Sur~BCS|Campeche~CAM|Ciudad de M\xe9xico~CMX|Chiapas~CHP|Chihuahua~CHH|Coahuila de Zaragoza~COA|Colima~COL|Durango~DUR|Estado de M\xe9xico~MEX|Guanajuato~GUA|Guerrero~GRO|Hidalgo~HID|Jalisco~JAL|Michoac\xe1n de Ocampo~MIC|Morelos~MOR|Nayarit~NAY|Nuevo Le\xf3n~NLE|Oaxaca~OAX|Puebla~PUE|Quer\xe9taro de Arteaga~QUE|Quintana Roo~ROO|San Luis Potos\xed~SLP|Sinaloa~SIN|Sonora~SON|Tabasco~TAB|Tamaulipas~TAM|Tlaxcala~TLA|Veracruz~VER|Yucat\xe1n~YUC|Zacatecas~ZAC"],["Micronesia, Federated States of","FM","Chuuk (Truk)~TRK|Kosrae~KSA|Pohnpei~PNI|Yap~YAP"],["Moldova","MD","Aenii Noi~AN|Basarabeasca~BS|Bălți~BA|Bender~BD|Briceni~BR|Cahul~CA|Cantemir~CT|Călărași~CL|Căușeni~CS|Chișinău~CU|Cimișlia~CM|Criuleni~CR|Dondușeni~DO|Drochia~DR|Dubăsari~DU|Edineț~ED|Fălești~FA|Florești~FL|Găgăuzia~GA|Glodeni~GL|H\xeencești~HI|Ialoveni~IA|Leova~LE|Nisporeni~NI|Ocnița~OC|Orhei~OR|Rezina~RE|R\xeeșcani~RI|S\xeengerei~SI|Soroca~SO|St\xe2nga Nistrului~SN|Strășeni~ST|Șoldănești~SD|Ștefan Vodă~SV|Taraclia~TA|Telenești~TE|Ungheni~UN"],["Monaco","MC","Colle~CL|Condamine~CO|Fontvieille~FO|Gare~GA|Jardin Exotique~JE|Larvotto~LA|Malbousquet~MA|Monaco-Ville~MO|Moneghetti~MG|Monte-Carlo~MC|Moulins~MU|Port-Hercule~PH|Saint-Roman~SR|Sainte-D\xe9vote~SD|Source~SO|Sp\xe9lugues~SP|Vallon de la Rousse~VR"],["Mongolia","MN","Arhangay~073|Bayan-Olgiy~071|Bayanhongor~069|Bulgan~067|Darhan~037|Dornod~061|Dornogovi~063|Dundgovi~059|Dzavhan~057|Govi-Altay~065|Govi-Sumber~064|Hovd~043|Hovsgol~041|Omnogovi~053|Ovorhangay~055|Selenge~049|Suhbaatar~051|Tov~047|Ulaanbaatar~1|Uvs~046|Erdenet~074"],["Montenegro","ME","Andrijevica~01|Bar~02|Berane~03|Bijelo Polje~04|Budva~05|Cetinje~06|Danilovgrad~07|Gusinje~22|Herceg Novi~08|Kolašin~09|Kotor~10|Mojkovac~11|Nikšić~12|Petnica~23|Plav~13|Plužine~14|Pljevlja~15|Podgorica~16|Rožaje~17|Šavnik~18|Tivat~19|Ulcinj~20|Žabljak~21"],["Montserrat","MS","Saint Anthony~undefined|Saint Georges~undefined|Saint Peter's~undefined"],["Morocco","MA","Tanger-T\xe9touan-Al Hoce\xefma~MA-01|L'Oriental~MA-02|F\xe8s-Mekn\xe8s~MA-03|Rabat-Sal\xe9-K\xe9nitra~MA-04|B\xe9ni Mellal-Kh\xe9nifra~MA-05|Casablanca-Settat~MA-06|Marrakech-Safi~MA-07|Dr\xe2a-Tafilalet~MA-08|Souss-Massa~MA-09|Guelmim-Oued Noun~MA-10|La\xe2youne-Sakia El Hamra~MA-11|Dakhla-Oued Ed-Dahab~MA-12"],["Mozambique","MZ","Cabo Delgado~P|Gaza~G|Inhambane~I|Manica~B|Maputo~L|Maputo (City)~MPM|Nampula~N|Niassa~A|Sofala~S|Tete~T|Zambezia~Q"],["Myanmar","MM","Ayeyarwady~07|Bago~02|Chin~14|Kachin~11|Kayah~12|Kayin~13|Magway~03|Mandalay~04|Mon~15|Nay Pyi Taw~18|Rakhine~16|Sagaing~01|Shan~17|Tanintharyi~05|Yangon~06"],["Namibia","NA","Erongo~ER|Hardap~HA|Kavango East~KE|Kavango West~KW|Karas~KA|Khomas~KH|Kunene~KU|Ohangwena~OW|Omaheke~OH|Omusati~OS|Oshana~ON|Oshikoto~OT|Otjozondjupa~OD|Zambezi~CA"],["Nauru","NR","Aiwo~01|Anabar~02|Anetan~03|Anibare~04|Baiti~05|Boe~06|Buada~07|Denigomodu~08|Ewa~09|Ijuw~10|Meneng~11|Nibok~12|Uaboe~13|Yaren~14"],["Nepal","NP","Province No. 1~1|Madhesh Province~2|Bagmati Province~3|Gandaki Province~4|Lumbini Province~5|Karnali Province~6|Sudurpashchim Province~7"],["Netherlands","NL","Drenthe~DR|Flevoland~FL|Friesland~FR|Gelderland~GE|Groningen~GR|Limburg~LI|Noord-Brabant~NB|Noord-Holland~NH|Overijssel~OV|Utrecht~UT|Zeeland~ZE|Zuid-Holland~ZH"],["New Caledonia","NC","Iles Loyaute~undefined|Nord~undefined|Sud~undefined"],["New Zealand","NZ","Auckland~AUK|Bay of Plenty~BOP|Canterbury~CAN|Gisborne~GIS|Hawke's Bay~HKB|Marlborough~MBH|Manawatu-Wanganui~MWT|Northland~NTL|Nelson~NSN|Otago~OTA|Southland~STL|Taranaki~TKI|Tasman~TAS|Waikato~WKO|Wellington~WGN|West Coast~WTC|Chatham Islands Territory~CIT"],["Nicaragua","NI","Boaco~BO|Carazo~CA|Chinandega~CI|Chontales~CO|Estel\xed~ES|Granada~GR|Jinotega~JI|Le\xf3n~LE|Madriz~MD|Managua~MN|Masaya~MS|Matagalpa~MT|Nueva Segovia~NS|R\xedo San Juan~SJ|Rivas~RI|Atl\xe1ntico Norte~AN|Atl\xe1ntico Sur~AS"],["Niger","NE","Agadez~1|Diffa~2|Dosso~3|Maradi~4|Niamey~8|Tahoua~5|Tillab\xe9ri~6|Zinder~7"],["Nigeria","NG","Abia~AB|Abuja Federal Capital Territory~FC|Adamawa~AD|Akwa Ibom~AK|Anambra~AN|Bauchi~BA|Bayelsa~BY|Benue~BE|Borno~BO|Cross River~CR|Delta~DE|Ebonyi~EB|Edo~ED|Ekiti~EK|Enugu~EN|Gombe~GO|Imo~IM|Jigawa~JI|Kaduna~KD|Kano~KN|Katsina~KT|Kebbi~KE|Kogi~KO|Kwara~KW|Lagos~LA|Nassarawa~NA|Niger~NI|Ogun~OG|Ondo~ON|Osun~OS|Oyo~OY|Plateau~PL|Rivers~RI|Sokoto~SO|Taraba~TA|Yobe~YO|Zamfara~ZA"],["Niue","NU","Niue~undefined"],["Norfolk Island","NF","Norfolk Island~undefined"],["Northern Mariana Islands","MP","Northern Islands~undefined|Rota~undefined|Saipan~undefined|Tinian~undefined"],["Norway","NO","Akershus~02|Aust-Agder~09|Buskerud~06|Finnmark~20|Hedmark~04|Hordaland~12|M\xf8re og Romsdal~15|Nordland~18|Nord-Tr\xf8ndelag~17|Oppland~05|Oslo~03|Rogaland~11|Sogn og Fjordane~14|S\xf8r-Tr\xf8ndelag~16|Telemark~08|Troms~19|Vest-Agder~10|Vestfold~07|\xd8stfold~01|Jan Mayen~22|Svalbard~21"],["Oman","OM","Ad Dakhiliyah~DA|Al Buraymi~BU|Al Wusta~WU|Az Zahirah~ZA|Janub al Batinah~BS|Janub ash Sharqiyah~SS|Masqat~MA|Musandam~MU|Shamal al Batinah~BJ|Shamal ash Sharqiyah~SJ|Zufar~ZU"],["Pakistan","PK","Āzād Kashmīr~JK|Balōchistān~BA|Gilgit-Baltistān~GB|Islāmābād~IS|Khaībar Pakhtūnkhwās~KP|Punjāb~PB|Sindh~SD|Federally Administered Tribal Areas~TA"],["Palau","PW","Aimeliik~002|Airai~004|Angaur~010|Hatobohei~050|Kayangel~100|Koror~150|Melekeok~212|Ngaraard~214|Ngarchelong~218|Ngardmau~222|Ngatpang~224|Ngchesar~226|Ngeremlengui~227|Ngiwal~228|Peleliu~350|Sonsoral~370"],["Palestine, State of","PS","Ak Khalīl~HBN|Al Quds~JEM|Arīḩā wal Aghwār~JRH|Bayt Laḩm~BTH|Dayr al Balaḩ~DEB|Ghazzah~GZA|Janīn~JEN|Khān Yūnis~KYS|Nāblus~NBS|Qalqīyah~QQA|Rafaḩ~RFH|Rām Allāh wal Bīrah~RBH|Salfīt~SLT|Shamāl Ghazzah~NGZ|Ţūbās~TBS|Ţūlkarm~TKM"],["Panama","PA","Bocas del Toro~1|Chiriqu\xed~4|Cocl\xe9~2|Col\xf3n~3|Dari\xe9n~5|Ember\xe1~EM|Herrera~6|Kuna Yala~KY|Los Santos~7|Ng\xe4be-Bugl\xe9~NB|Panam\xe1~8|Panam\xe1 Oeste~10|Veraguas~9"],["Papua New Guinea","PG","Bougainville~NSB|Central~CPM|Chimbu~CPK|East New Britain~EBR|East Sepik~ESW|Eastern Highlands~EHG|Enga~EPW|Gulf~GPK|Hela~HLA|Jiwaka~JWK|Madang~MOM|Manus~MRL|Milne Bay~MBA|Morobe~MPL|Port Moresby~NCD|New Ireland~NIK|Northern~NPP|Southern Highlands~SHM|West New Britain~WBK|West Sepik~SAN|Western~WPD|Western Highlands~WHM"],["Paraguay","PY","Alto Paraguay~16|Alto Parana~10|Amambay~13|Asuncion~ASU|Caaguazu~5|Caazapa~6|Canindeyu~14|Central~11|Concepcion~1|Cordillera~3|Boqueron~17|Guaira~4|Itapua~7|Misiones~8|Neembucu~12|Paraguari~9|Presidente Hayes~15|San Pedro~2"],["Peru","PE","Amazonas~AMA|Ancash~ANC|Apurimac~APU|Arequipa~ARE|Ayacucho~AYA|Cajamarca~CAJ|Callao~CAL|Cusco~CUS|Huancavelica~HUV|Huanuco~HUC|Ica~ICA|Junin~JUN|La Libertad~LAL|Lambayeque~LAM|Lima~LIM|Loreto~LOR|Madre de Dios~MDD|Moquegua~MOQ|Municipalidad Metropolitana de Lima~LMA|Pasco~PAS|Piura~PIU|Puno~PUN|San Martin~SAM|Tacna~TAC|Tumbes~TUM|Ucayali~UCA"],["Philippines","PH","Abra~ABR|Agusan del Norte~AGN|Agusan del Sur~AGS|Aklan~AKL|Albay~ALB|Antique~ANT|Apayao~APA|Aurora~AUR|Basilan~BAS|Bataan~BAN|Batanes~BTN|Batangas~BTG|Benguet~BEN|Biliran~BIL|Bohol~BOH|Bukidnon~BUK|Bulacan~BUL|Cagayan~CAG|Camarines Norte~CAN|Camarines Sur~CAS|Camiguin~CAM|Capiz~CAP|Catanduanes~CAT|Cavite~CAV|Cebu~CEB|Cotabato~NCO|Davao del Norte~DAV|Davao del Sur~DAS|Davao Occidental~DVO|Davao Oriental~DAO|Davao de Oro~COM|Dinagat Islands~DIN|Eastern Samar~EAS|Guimaras~GUI|Ifugao~IFU|Ilocos Norte~ILN|Ilocos Sur~ILS|Iloilo~ILI|Isabela~ISA|Kalinga~KAL|La Union~LUN|Laguna~LAG|Lanao del Norte~LAN|Lanao del Sur~LAS|Leyte~LEY|Maguindanao~MAG|Marinduque~MAD|Masbate~MAS|Metro Manila~00|Mindoro Occidental~MDC|Mindoro Oriental~MDR|Misamis Occidental~MSC|Misamis Oriental~MSR|Mountain Province~MOU|Negros Occidental~NEC|Negros Oriental~NER|Northern Samar~NSA|Nueva Ecija~NUE|Nueva Vizcaya~NUV|Palawan~PLW|Pampanga~PAM|Pangasinan~PAN|Quezon~QUE|Quirino~QUI|Rizal~RIZ|Romblon~ROM|Samar~WSA|Sarangani~SAR|Siquijor~SIG|Sorsogon~SOR|South Cotabato~SCO|Southern Leyte~SLE|Sultan Kudarat~AUK|Sulu~SLU|Surigao del Norte~SUN|Surigao del Sur~SUR|Tarlac~TAR|Tawi-Tawi~TAW|Zambales~ZMB|Zamboanga del Norte~ZAN|Zamboanga del Sur~ZAS|Zamboanga Sibugay~ZSI"],["Pitcairn","PN","Pitcairn Islands~undefined"],["Poland","PL","Dolnośląskie~02|Kujawsko-pomorskie~04|Ł\xf3dzkie~10|Lubelskie~06|Lubuskie~08|Małopolskie~12|Mazowieckie~14|Opolskie~16|Podkarpackie~18|Podlaskie~20|Pomorskie~22|Śląskie~24|Świętokrzyskie~26|Warmińsko-mazurskie~28|Wielkopolskie~30|Zachodniopomorskie~32"],["Portugal","PT","A\xe7ores~20|Aveiro~01|Beja~02|Braga~03|Bragan\xe7a~04|Castelo Branco~05|Coimbra~06|\xc9vora~07|Faro~08|Guarda~09|Leiria~10|Lisboa~11|Madeira~30|Portalegre~12|Porto~13|Santar\xe9m~14|Set\xfabal~15|Viana do Castelo~16|Vila Real~17|Viseu~18"],["Puerto Rico","PR","Adjuntas~undefined|Aguada~undefined|Aguadilla~undefined|Aguas Buenas~undefined|Aibonito~undefined|Anasco~undefined|Arecibo~undefined|Arroyo~undefined|Barceloneta~undefined|Barranquitas~undefined|Bayamon~undefined|Cabo Rojo~undefined|Caguas~undefined|Camuy~undefined|Canovanas~undefined|Carolina~undefined|Cat~undefined|Ceiba~undefined|Ciales~undefined|Cidra~undefined|Coamo~undefined|Comerio~undefined|Corozal~undefined|Culebra~undefined|Dorado~undefined|Fajardo~undefined|Florida~undefined|Guanica~undefined|Guayama~undefined|Guayanilla~undefined|Guaynabo~undefined|Gurabo~undefined|Hatillo~undefined|Hormigueros~undefined|Humacao~undefined|Isabe~undefined|Juana Diaz~undefined|Juncos~undefined|Lajas~undefined|Lares~undefined|Las Marias~undefined|Las oiza~undefined|Luquillo~undefined|Manati~undefined|Maricao~undefined|Maunabo~undefined|Mayaguez~undefined|Moca~undefined|Morovis~undefined|Naguabo~undefined|Naranjito~undefined|Orocovis~undefined|Patillas~undefined|Penuelas~undefined|Ponce~undefined|Quebradillas~undefined|Rincon~undefined|Rio Grande~undefined|Sabana linas~undefined|San German~undefined|San Juan~undefined|San Lorenzo~undefined|San Sebastian~undefined|Santa Isabel~undefined|Toa Alta~undefined|Toa Baja~undefined|Trujillo Alto~undefined|Utuado~undefined|Vega Alta~undefined|Vega ues~undefined|Villalba~undefined|Yabucoa~undefined|Yauco~undefined"],["Qatar","QA","Ad Dawḩah~DA|Al Khawr wa adh Dhakhīrah~KH|Al Wakrah~WA|Ar Rayyān~RA|Ash Shamāl~MS|Az̧ Za̧`āyin~ZA|Umm Şalāl~US"],["R\xe9union","RE","R\xe9union~undefined"],["Romania","RO","Alba~AB|Arad~AR|Arges~AG|Bacau~BC|Bihor~BH|Bistrita-Nasaud~BN|Botosani~BT|Braila~BR|Brasov~BV|Iifov~B|Buzau~BZ|Calarasi~CL|Caras-Severin~CS|Cluj~CJ|Constanta~CT|Covasna~CV|Dambovita~DB|Dolj~DJ|Galati~GL|Giurgiu~GR|Gorj~GJ|Harghita~HR|Hunedoara~HD|Ialomita~IL|Iasi~IS|Maramures~MM|Mehedinti~MH|Mures~MS|Neamt~NT|Olt~OT|Prahova~PH|Salaj~SJ|Satu Mare~SM|Sibiu~SB|Suceava~SV|Teleorman~TR|Timis~TM|Tulcea~TL|Valcea~VL|Vaslui~VS|Vrancea~VN"],["Russian Federation","RU","Republic of Adygea~AD|Republic of Altai (Gorno-Altaysk)~AL|Altai Krai~ALT|Amur Oblast~AMU|Arkhangelsk Oblast~ARK|Astrakhan Oblast~AST|Republic of Bashkortostan~BA|Belgorod Oblast~BEL|Bryansk Oblast~BRY|Republic of Buryatia~BU|Chechen Republic~CE|Chelyabinsk Oblast~CHE|Chukotka Autonomous Okrug~CHU|Chuvash Republic~CU|Republic of Dagestan~DA|Republic of Ingushetia~IN|Irkutsk Oblast~IRK|Ivanovo Oblast~IVA|Jewish Autonomous Oblast~JEW|Kabardino-Balkar Republic~KB|Kaliningrad Oblast~KLN|Republic of Kalmykia~KL|Kaluga Oblast~KLU|Kamchatka Krai~KAM|Karachay-Cherkess Republic~KC|Republic of Karelia~KR|Khabarovsk Krai~KHA|Republic of Khakassia~KK|Khanty-Mansi Autonomous Okrug - Yugra~KHM|Kemerovo Oblast~KEM|Kirov Oblast~KIR|Komi Republic~KO|Kostroma Oblast~KOS|Krasnodar Krai~KDA|Krasnoyarsk Krai~KYA|Kurgan Oblast~KGN|Kursk Oblast~KRS|Leningrad Oblast~LEN|Lipetsk Oblast~LIP|Magadan Oblast~MAG|Mari El Republic~ME|Republic of Mordovia~MO|Moscow Oblast~MOS|Moscow~MOW|Murmansk Oblast~MU|Nenets Autonomous Okrug~NEN|Nizhny Novgorod Oblast~NIZ|Novgorod Oblast~NGR|Novosibirsk Oblast~NVS|Omsk Oblast~OMS|Orenburg Oblast~ORE|Oryol Oblast~ORL|Penza Oblast~PNZ|Perm Krai~PER|Primorsky Krai~PRI|Pskov Oblast~PSK|Rostov Oblast~ROS|Ryazan Oblast~RYA|Saint Petersburg~SPE|Sakha (Yakutia) Republic~SA|Sakhalin Oblast~SAK|Samara Oblast~SAM|Saratov Oblast~SAR|Republic of North Ossetia-Alania~NOA|Smolensk Oblast~SMO|Stavropol Krai~STA|Sverdlovsk Oblast~SVE|Tambov Oblast~TAM|Republic of Tatarstan~TA|Tomsk Oblast~TOM|Tuva Republic~TU|Tula Oblast~TUL|Tver Oblast~TVE|Tyumen Oblast~TYU|Udmurt Republic~UD|Ulyanovsk Oblast~ULY|Vladimir Oblast~VLA|Volgograd Oblast~VGG|Vologda Oblast~VLG|Voronezh Oblast~VOR|Yamalo-Nenets Autonomous Okrug~YAN|Yaroslavl Oblast~YAR|Zabaykalsky Krai~ZAB"],["Rwanda","RW","Kigali~01|Eastern~02|Northern~03|Western~04|Southern~05"],["Saint Barth\xe9lemy","BL","Au Vent~02|Sous le Vent~01"],["Saint Helena, Ascension and Tristan da Cunha","SH","Ascension~AC|Saint Helena~HL|Tristan da Cunha~TA"],["Saint Kitts and Nevis","KN","Saint Kitts~K|Nevis~N"],["Saint Lucia","LC","Anse-la-Raye~01|Canaries~12|Castries~02|Choiseul~03|Dennery~05|Gros Islet~06|Laborie~07|Micoud~08|Soufriere~10|Vieux Fort~11"],["Saint Martin","MF","Saint Martin~undefined"],["Saint Pierre and Miquelon","PM","Miquelon~undefined|Saint Pierre~undefined"],["Saint Vincent and the Grenadines","VC","Charlotte~01|Grenadines~06|Saint Andrew~02|Saint David~03|Saint George~04|Saint Patrick~05"],["Samoa","WS","A'ana~AA|Aiga-i-le-Tai~AL|Atua~AT|Fa'asaleleaga~FA|Gaga'emauga~GE|Gagaifomauga~GI|Palauli~PA|Satupa'itea~SA|Tuamasaga~TU|Va'a-o-Fonoti~VF|Vaisigano~VS"],["San Marino","SM","Acquaviva~01|Borgo Maggiore~06|Chiesanuova~02|Domagnano~03|Faetano~04|Fiorentino~05|Montegiardino~08|San Marino~07|Serravalle~09"],["Sao Tome and Principe","ST","Principe~P|Sao Tome~S"],["Saudi Arabia","SA","'Asir~14|Al Bahah~11|Al Hudud ash Shamaliyah~08|Al Jawf~12|Al Madinah al Munawwarah~03|Al Qasim~05|Ar Riyad~01|Ash Sharqiyah~04|Ha'il~06|Jazan~09|Makkah al Mukarramah~02|Najran~10|Tabuk~07"],["Senegal","SN","Dakar~DK|Diourbel~DB|Fatick~FK|Kaffrine~KA|Kaolack~KL|Kedougou~KE|Kolda~KD|Louga~LG|Matam~MT|Saint-Louis~SL|Sedhiou~SE|Tambacounda~TC|Thies~TH|Ziguinchor~ZG"],["Serbia","RS","Beograd (Belgrade)~00|Borski~14|Braničevski~11|Jablanički~23|Južnobački~06|Južnobanatski~04|Kolubarski~09|Kosovski~25|Kosovsko-Mitrovački~28|Kosovsko-Pomoravski~29|Mačvanski~08|Moravički~17|Nišavski~20|Pčinjski~24|Pećki~26|Pirotski~22|Podunavski~10|Pomoravski~13|Prizrenski~27|Rasinski~19|Raški~18|Severnobački~01|Severnobanatski~03|Srednjebanatski~02|Sremski~07|Šumadijski~12|Toplički~21|Zaječarski~15|Zapadnobački~05|Zlatiborski~16"],["Seychelles","SC","Anse aux Pins~01|Anse Boileau~02|Anse Etoile~03|Anse Royale~05|Anu Cap~04|Baie Lazare~06|Baie Sainte Anne~07|Beau Vallon~08|Bel Air~09|Bel Ombre~10|Cascade~11|Glacis~12|Grand'Anse Mahe~13|Grand'Anse Praslin~14|La Digue~15|La Riviere Anglaise~16|Les Mamelles~24|Mont Buxton~17|Mont Fleuri~18|Plaisance~19|Pointe La Rue~20|Port Glaud~21|Roche Caiman~25|Saint Louis~22|Takamaka~23"],["Sierra Leone","SL","Eastern~E|Northern~N|Southern~S|Western~W"],["Singapore","SG","Central Singapore~01|North East~02|North West~03|South East~04|South West~05"],["Sint Maarten (Dutch part)","SX","Sint Maarten~undefined"],["Slovakia","SK","Banskobystricky~BC|Bratislavsky~BL|Kosicky~KI|Nitriansky~NI|Presovsky~PV|Trenciansky~TC|Trnavsky~TA|Zilinsky~ZI"],["Slovenia","SI","Ajdovscina~001|Apace~195|Beltinci~002|Benedikt~148|Bistrica ob Sotli~149|Bled~003|Bloke~150|Bohinj~004|Borovnica~005|Bovec~006|Braslovce~151|Brda~007|Brezice~009|Brezovica~008|Cankova~152|Celje~011|Cerklje na Gorenjskem~012|Cerknica~013|Cerkno~014|Cerkvenjak~153|Cirkulane~196|Crensovci~015|Crna na Koroskem~016|Crnomelj~017|Destrnik~018|Divaca~019|Dobje~154|Dobrepolje~020|Dobrna~155|Dobrova-Polhov Gradec~021|Dobrovnik~156|Dol pri Ljubljani~022|Dolenjske Toplice~157|Domzale~023|Dornava~024|Dravograd~025|Duplek~026|Gorenja Vas-Poljane~027|Gorisnica~028|Gorje~207|Gornja Radgona~029|Gornji Grad~030|Gornji Petrovci~031|Grad~158|Grosuplje~032|Hajdina~159|Hoce-Slivnica~160|Hodos~161|Horjul~162|Hrastnik~034|Hrpelje-Kozina~035|Idrija~036|Ig~037|Ilirska Bistrica~038|Ivancna Gorica~039|Izola~040|Jesenice~041|Jursinci~042|Kamnik~043|Kanal~044|Kidricevo~045|Kobarid~046|Kobilje~047|Kocevje~048|Komen~049|Komenda~164|Koper~050|Kodanjevica na Krki~197|Kostel~165|Kozje~051|Kranj~052|Kranjska Gora~053|Krizevci~166|Krsko~054|Kungota~055|Kuzma~056|Lasko~057|Lenart~058|Lendava~059|Litija~060|Ljubljana~061|Ljubno~062|Ljutomer~063|Log-Dragomer~208|Logatec~064|Loska Dolina~065|Loski Potok~066|Lovrenc na Pohorju~167|Lukovica~068|Luce~067|Majsperk~069|Makole~198|Maribor~070|Markovci~168|Medvode~071|Menges~072|Metlika~073|Mezica~074|Miklavz na Dravskem Polju~169|Miren-Kostanjevica~075|Mirna~212|Mirna Pec~170|Mislinja~076|Mokronog-Trebelno~199|Moravce~077|Moravske Toplice~078|Mozirje~079|Murska Sobota~080|Naklo~082|Nazarje~083|Nova Gorica~084|Novo Mesto~085|Odranci~086|Ormoz~087|Osilnica~088|Pesnica~089|Piran~090|Pivka~091|Podcetrtek~092|Podlehnik~172|Podvelka~093|Poljcane~200|Postojna~094|Prebold~174|Preddvor~095|Prevalje~175|Ptuj~096|Race-Fram~098|Radece~099|Radenci~100|Radlje ob Dravi~101|Radovljica~102|Ravne na Koroskem~103|Razkrizje~176|Recica ob Savinji~209|Rence-Vogrsko~201|Ribnica~104|Ribnica na Poboriu~177|Rogaska Slatina~106|Rogasovci~105|Rogatec~107|Ruse~108|Salovci~033|Selnica ob Dravi~178|Semic~109|Sempeter-Vrtojba~183|Sencur~117|Sentilj~118|Sentjernej~119|Sentjur~120|Sentrupert~211|Sevnica~110|Sezana~111|Skocjan~121|Skofja Loka~122|Skofljica~123|Slovenj Gradec~112|Slovenska Bistrica~113|Slovenske Konjice~114|Smarje pri elsah~124|Smarjeske Toplice~206|Smartno ob Paki~125|Smartno pri Litiji~194|Sodrazica~179|Solcava~180|Sostanj~126|Sredisce ob Dravi~202|Starse~115|Store~127|Straza~203|Sveta Ana~181|Sveta Trojica v Slovenskih Goricah~204|Sveta Andraz v Slovenskih Goricah~182|Sveti Jurij~116|Sveti Jurij v Slovenskih Goricah~210|Sveti Tomaz~205|Tabor~184|Tisina~010|Tolmin~128|Trbovlje~129|Trebnje~130|Trnovska Vas~185|Trzin~186|Trzic~131|Turnisce~132|Velenje~133|Velika Polana~187|Velike Lasce~134|Verzej~188|Videm~135|Vipava~136|Vitanje~137|Vodice~138|Vojnik~139|Vransko~189|Vrhnika~140|Vuzenica~141|Zagorje ob Savi~142|Zavrc~143|Zrece~144|Zalec~190|Zelezniki~146|Zetale~191|Ziri~147|Zirovnica~192|Zuzemberk~193"],["Solomon Islands","SB","Central~CE|Choiseul~CH|Guadalcanal~GU|Honiara~CT|Isabel~IS|Makira-Ulawa~MK|Malaita~ML|Rennell and Bellona~RB|Temotu~TE|Western~WE"],["Somalia","SO","Awdal~AW|Bakool~BK|Banaadir~BN|Bari~BR|Bay~BY|Galguduud~GA|Gedo~GE|Hiiraan~HI|Jubbada Dhexe~JD|Jubbada Hoose~JH|Mudug~MU|Nugaal~NU|Sanaag~SA|Shabeellaha Dhexe~SD|Shabeellaha Hoose~SH|Sool~SO|Togdheer~TO|Woqooyi Galbeed~WO"],["South Africa","ZA","Eastern Cape~EC|Free State~FS|Gauteng~GT|KwaZulu-Natal~NL|Limpopo~LP|Mpumalanga~MP|Northern Cape~NC|North West~NW|Western Cape~WC"],["South Georgia and South Sandwich Islands","GS","Bird Island~undefined|Bristol Island~undefined|Clerke Rocks~undefined|Montagu Island~undefined|Saunders Island~undefined|South Georgia~undefined|Southern Thule~undefined|Traversay Islands~undefined"],["South Sudan","SS","Central Equatoria~CE|Eastern Equatoria~EE|Jonglei~JG|Lakes~LK|Northern Bahr el Ghazal~BN|Unity~UY|Upper Nile~NU|Warrap~WR|Western Bahr el Ghazal~BW|Western Equatoria~EW"],["Spain","ES","Albacete~AB|Alicante~A|Almer\xeda~AN|Araba/\xc1lava~VI|Asturias~O|\xc1vila~AV|Badajoz~BA|Barcelona~B|Bizkaia~BI|Burgos~BU|C\xe1ceres~CC|C\xe1diz~CA|Cantabria~S|Castell\xf3n/Castell\xf3~CS|Ceuta~CE|Ciudad Real~CR|C\xf3rdoba~CO|A Coru\xf1a~C|Cuenca~CU|Gipuzkoa~SS|Girona~GI|Granada~GR|Guadalajara~GU|Huelva~H|Huesca~HU|Illes Balears~PM|Ja\xe9n~J|Le\xf3n~LE|Lleida~L|Lugo~LU|Madrid~M|M\xe1laga~MA|Melilla~ML|Murcia~MU|Navarra/Nafarroa~NA|Ourense~OR|Palencia~P|Las Palmas~GC|Pontevedra~PO|La Rioja~LO|Salamanca~SA|Santa Cruz de Tenerife~TF|Segovia~SG|Sevilla~SE|Soria~SO|Tarragona~T|Teruel~TE|Toledo~TO|Valencia/Val\xe8ncia~V|Valladolid~VA|Zamora~ZA|Zaragoza~Z"],["Sri Lanka","LK","Basnahira~1|Dakunu~3|Madhyama~2|Naegenahira~5|Sabaragamuwa~9|Uturu~4|Uturumaeda~7|Vayamba~6|Uva~8"],["Sudan","SD","Al Bahr al Ahmar~RS|Al Jazirah~GZ|Al Khartum~KH|Al Qadarif~GD|An Nil al Abyad~NW|An Nil al Azraq~NB|Ash Shamaliyah~NO|Gharb Darfur~DW|Gharb Kurdufan~GK|Janub Darfur~DS|Janub Kurdufan~KS|Kassala~KA|Nahr an Nil~NR|Shamal Darfur~DN|Sharq Darfur~DE|Shiamal Kurdufan~KN|Sinnar~SI|Wasat Darfur Zalinjay~DC"],["Suriname","SR","Brokopondo~BR|Commewijne~CM|Coronie~CR|Marowijne~MA|Nickerie~NI|Para~PR|Paramaribo~PM|Saramacca~SA|Sipaliwini~SI|Wanica~WA"],["Eswatini","SZ","Hhohho~HH|Lubombo~LU|Manzini~MA|Shiselweni~SH"],["Sweden","SE","Blekinge~K|Dalarna~W|G\xe4vleborg~X|Gotland~I|Halland~N|J\xe4mtland~Z|J\xf6nk\xf6ping~F|Kalmar~H|Kronoberg~G|Norrbotten~BD|\xd6rebro~T|\xd6sterg\xf6tland~E|Sk\xe5ne~M|S\xf6dermanland~D|Stockholm~AB|Uppsala~C|V\xe4rmland~S|V\xe4sterbotten~AC|V\xe4sternorrland~Y|V\xe4stmanland~U|V\xe4stra G\xf6taland~O"],["Switzerland","CH","Aargau~AG|Appenzell Ausserrhoden~AR|Appenzell Innerhoden~AI|Basel-Landschaft~BL|Basel-Stadt~BS|Bern~BE|Fribourg~FR|Gen\xe8ve~GE|Glarus~GL|Graub\xfcnden~GR|Jura~JU|Luzern~LU|Neuch\xe2tel~NE|Nidwalden~NW|Obwalden~OW|Sankt Gallen~SG|Schaffhausen~SH|Schwyz~SZ|Solothurn~SO|Thurgau~TG|Ticino~TI|Uri~UR|Valais~VS|Vaud~VD|Zug~ZG|Z\xfcrich~ZH"],["Syrian Arab Republic","SY","Al Hasakah~HA|Al Ladhiqiyah~LA|Al Qunaytirah~QU|Ar Raqqah~RA|As Suwayda'~SU|Dar'a~DR|Dayr az Zawr~DY|Dimashq~DI|Halab~HL|Hamah~HM|Hims~HI|Idlib~ID|Rif Dimashq~RD|Tartus~TA"],["Taiwan","TW","Changhua~CHA|Chiayi~CYQ|Hsinchu~HSQ|Hualien~HUA|Kaohsiung~KHH|Keelung~KEE|Kinmen~KIN|Lienchiang~LIE|Miaoli~MIA|Nantou~NAN|Penghu~PEN|New Taipei~NWT|Pingtung~PIF|Taichung~TXG|Tainan~TNN|Taipei~TPE|Taitung~TTT|Taoyuan~TAO|Yilan~ILA|Yunlin~YUN"],["Tajikistan","TJ","Dushanbe~DU|Kŭhistoni Badakhshon~GB|Khatlon~KT|Sughd~SU"],["Tanzania, United Republic of","TZ","Arusha~01|Coast~19|Dar es Salaam~02|Dodoma~03|Iringa~04|Kagera~05|Kigoma~08|Kilimanjaro~09|Lindi~12|Manyara~26|Mara~13|Mbeya~14|Morogoro~16|Mtwara~17|Mwanza~18|Pemba North~06|Pemba South~10|Rukwa~20|Ruvuma~21|Shinyanga~22|Singida~23|Tabora~24|Tanga~25|Zanzibar North~07|Zanzibar Central/South~11|Zanzibar Urban/West~15"],["Thailand","TH","Amnat Charoen~37|Ang Thong~15|Bueng Kan~38|Buri Ram~31|Chachoengsao~24|Chai Nat~18|Chaiyaphum~36|Chanthaburi~22|Chiang Mai~50|Chiang Rai~57|Chon Buri~20|Chumphon~86|Kalasin~46|Kamphaeng Phet~62|Kanchanaburi~71|Khon Kaen~40|Krabi~81|Krung Thep Mahanakhon (Bangkok)~10|Lampang~52|Lamphun~51|Loei~42|Lop Buri~16|Mae Hong Son~58|Maha Sarakham~44|Mukdahan~49|Nakhon Nayok~26|Nakhon Phathom~73|Nakhon Phanom~48|Nakhon Ratchasima~30|Nakhon Sawan~60|Nakhon Si Thammarat~80|Nan~55|Narathiwat~96|Nong Bua Lam Phu~39|Nong Khai~43|Nonthaburi~12|Pathum Thani~13|Pattani~94|Phangnga~82|Phatthalung~93|Phayao~56|Phetchabun~67|Phetchaburi~76|Phichit~66|Phitsanulok~65|Phra Nakhon Si Ayutthaya~14|Phrae~54|Phuket~83|Prachin Buri~25|Prachuap Khiri Khan~77|Ranong~85|Ratchaburi~70|Rayong~21|Roi Et~45|Sa Kaeo~27|Sakon Nakhon~47|Samut Prakan~11|Samut Sakhon~74|Samut Songkhram~75|Saraburi~19|Satun~91|Sing Buri~17|Si Sa ket~33|Songkhla~90|Sukhothai~64|Suphan Buri~72|Surat Thani~84|Surin~32|Tak~63|Trang~92|Trat~23|Ubon Ratchathani~34|Udon Thani~41|Uthai Thani~61|Uttaradit~53|Yala~95|Yasothon~35"],["Timor-Leste","TL","Aileu~AL|Ainaro~AN|Baucau~BA|Bobonaro~BO|Cova Lima~CO|Dili~DI|Ermera~ER|Lautem~LA|Liquica~LI|Manatuto~MT|Manufahi~MF|Oecussi~OE|Viqueque~VI"],["Togo","TG","Centre~C|Kara~K|Maritime~M|Plateaux~P|Savannes~S"],["Tokelau","TK","Atafu~undefined|Fakaofo~undefined|Nukunonu~undefined"],["Tonga","TO","'Eua~01|Ha'apai~02|Niuas~03|Tongatapu~04|Vava'u~05"],["Trinidad and Tobago","TT","Arima~ARI|Chaguanas~CHA|Couva-Tabaquite-Talparo~CTT|Diefo Martin~DMN|Mayaro-Rio Claro~MRC|Penal-Debe~PED|Point Fortin~PTF|Port-of-Spain~POS|Princes Town~PRT|San Fernando~SFO|San Juan-Laventille~SJL|Sangre Grande~SGE|Siparia~SIP|Tobago~TOB|Tunapuna-Piarco~TUP"],["Tunisia","TN","Ariana~12|Beja~31|Ben Arous~13|Bizerte~23|Gabes~81|Gafsa~71|Jendouba~32|Kairouan~41|Kasserine~42|Kebili~73|Kef~33|Mahdia~53|Medenine~82|Monastir~52|Nabeul~21|Sfax~61|Sidi Bouzid~43|Siliana~34|Sousse~51|Tataouine~83|Tozeur~72|Tunis~11|Zaghouan~22"],["Turkey","TR","Adana~01|Adiyaman~02|Afyonkarahisar~03|Agri~04|Aksaray~68|Amasya~05|Ankara~06|Antalya~07|Ardahan~75|Artvin~08|Aydin~09|Balikesir~10|Bartin~74|Batman~72|Bayburt~69|Bilecik~11|Bingol~12|Bitlis~13|Bolu~14|Burdur~15|Bursa~16|Canakkale~17|Cankiri~18|Corum~19|Denizli~20|Diyarbakir~21|Duzce~81|Edirne~22|Elazig~23|Erzincan~24|Erzurum~25|Eskisehir~26|Gaziantep~27|Giresun~28|Gumushane~29|Hakkari~30|Hatay~31|Igdir~76|Isparta~32|Istanbul~34|Izmir~35|Kahramanmaras~46|Karabuk~78|Karaman~70|Kars~36|Kastamonu~37|Kayseri~38|Kilis~79|Kirikkale~71|Kirklareli~39|Kirsehir~40|Kocaeli~41|Konya~42|Kutahya~43|Malatya~44|Manisa~45|Mardin~47|Mersin~33|Mugla~48|Mus~49|Nevsehir~50|Nigde~51|Ordu~52|Osmaniye~80|Rize~53|Sakarya~54|Samsun~55|Sanliurfa~63|Siirt~56|Sinop~57|Sirnak~73|Sivas~58|Tekirdag~59|Tokat~60|Trabzon~61|Tunceli~62|Usak~64|Van~65|Yalova~77|Yozgat~66|Zonguldak~67"],["Turkmenistan","TM","Ahal~A|Asgabat~S|Balkan~B|Dashoguz~D|Lebap~L|Mary~M"],["Turks and Caicos Islands","TC","Turks and Caicos Islands~undefined"],["Tuvalu","TV","Funafuti~FUN|Nanumanga~NMG|Nanumea~NMA|Niutao~NIT|Nui~NUI|Nukufetau~NKF|Nukulaelae~NKL|Vaitupu~VAU"],["Uganda","UG","Abim~317|Adjumani~301|Amolatar~314|Amuria~216|Amuru~319|Apac~302|Arua~303|Budaka~217|Bududa~223|Bugiri~201|Bukedea~224|Bukwa~218|Buliisa~419|Bundibugyo~401|Bushenyi~402|Busia~202|Butaleja~219|Dokolo~318|Gulu~304|Hoima~403|Ibanda~416|Iganga~203|Isingiro~417|Jinja~204|Kaabong~315|Kabale~404|Kabarole~405|Kaberamaido~213|Kalangala~101|Kaliro~220|Kampala~102|Kamuli~205|Kamwenge~413|Kanungu~414|Kapchorwa~206|Kasese~406|Katakwi~207|Kayunga~112|Kibaale~407|Kiboga~103|Kiruhura~418|Kisoro~408|Kitgum~305|Koboko~316|Kotido~306|Kumi~208|Kyenjojo~415|Lira~307|Luwero~104|Lyantonde~116|Manafwa~221|Maracha~320|Masaka~105|Masindi~409|Mayuge~214|Mbale~209|Mbarara~410|Mityana~114|Moroto~308|Moyo~309|Mpigi~106|Mubende~107|Mukono~108|Nakapiripirit~311|Nakaseke~115|Nakasongola~109|Namutumba~222|Nebbi~310|Ntungamo~411|Oyam~321|Pader~312|Pallisa~210|Rakai~110|Rukungiri~412|Sembabule~111|Sironko~215|Soroti~211|Tororo~212|Wakiso~113|Yumbe~313"],["Ukraine","UA","Cherkaska oblast~71|Chernihivska oblast~74|Chernivetska oblast~77|Dnipropetrovska oblast~12|Donetska oblast~14|Ivano-Frankivska oblast~26|Kharkivska oblast~63|Khersonska oblast~65|Khmelnytska oblast~68|Kyivska oblast~32|Kirovohradska oblast~35|Luhanska oblast~09|Lvivska oblast~46|Mykolaivska oblast~48|Odeska oblast~51|Poltavska oblast~53|Rivnenska oblast~56|Sumska oblast~59|Ternopilska oblast~61|Vinnytska oblast~05|Volynska oblast~07|Zakarpatska oblast~21|Zaporizka oblast~23|Zhytomyrska oblast~18|Avtonomna Respublika Krym~43|Kyiv~30|Sevastopol~40"],["United Arab Emirates","AE","Abu Dhabi~AZ|Ajman~AJ|Dubai~DU|Fujairah~FU|Ras al Khaimah~RK|Sharjah~SH|Umm Al Quwain~UQ"],["United Kingdom","GB","Aberdeen City~ABE|Aberdeenshire~ABD|Angus~ANS|Antrim and Newtownabbey~ANN|Ards and North Down~AND|Argyll and Bute~AGB|Armagh City, Banbridge and Craigavon~ABC|Barking and Dagenham~BDG|Barnet~BNE|Barnsley~BNS|Bath and North East Somerset~BAS|Bedford~BDF|Belfast City~BFS|Berkshire~BRK|Bexley~BEX|Birmingham~BIR|Blackburn with Darwen~BBD|Blackpool~BPL|Blaenau Gwent~BGW|Bolton~BOL|Bournemouth, Christchurch and Poole~BCP|Bracknell Forest~BRC|Bradford~BRD|Brent~BEN|Bridgend~BGE|Brighton and Hove~BNH|Bristol, City of~BST|Bromley~BRY|Buckinghamshire~BKM|Bury~BUR|Caerphilly~CAY|Calderdale~CLD|Cambridgeshire~CAM|Camden~CMD|Cardiff~CRF|Carmarthenshire~CMN|Causeway Coast and Glens~CCG|Central Bedfordshire~CBF|Ceredigion~CGN|Cheshire East~CHE|Cheshire West and Chester~CHW|Clackmannanshire~CLK|Conwy~CWY|Cornwall~CON|Coventry~COV|Croydon~CRY|Cumbria~CMA|Darlington~DAL|Denbighshire~DEN|Derby~DER|Derbyshire~DBY|Derry and Strabane~DRS|Devon~DEV|Doncaster~DNC|Dorset~DOR|Dudley~DUD|Dumfries and Galloway~DGY|Dundee City~DND|Durham, County~DUR|Ealing~EAL|East Ayrshire~EAY|East Dunbartonshire~EDU|East Lothian~ELN|East Renfrewshire~ERW|East Riding of Yorkshire~ERY|East Sussex~ESX|Edinburgh, City of~EDH|Eilean Siar~ELS|Enfield~ENF|Essex~ESS|Falkirk~FAL|Fermanagh and Omagh~FMO|Fife~FIF|Flintshire~FLN|Gateshead~GAT|Glasgow City~GLG|Gloucestershire~GLS|Greenwich~GRE|Gwynedd~GWN|Hackney~HCK|Halton~HAL|Hammersmith and Fulham~HMF|Hampshire~HAM|Haringey~HRY|Harrow~HRW|Hartlepool~HPL|Havering~HAV|Herefordshire~HEF|Hertfordshire~HRT|Highland~HLD|Hillingdon~HIL|Hounslow~HNS|Inverclyde~IVC|Isle of Anglesey~AGY|Isle of Wight~IOW|Isles of Scilly~IOS|Islington~ISL|Kensington and Chelsea~KEC|Kent~KEN|Kingston upon Hull~KHL|Kingston upon Thames~KTT|Kirklees~KIR|Knowsley~KWL|Lambeth~LBH|Lancashire~LAN|Leeds~LDS|Leicester~LCE|Leicestershire~LEC|Lewisham~LEW|Lincolnshire~LIN|Lisburn and Castlereagh~LBC|Liverpool~LIV|London, City of~LND|Luton~LUT|Manchester~MAN|Medway~MDW|Merthyr Tydfil~MTY|Merton~MRT|Mid and East Antrim~MEA|Mid-Ulster~MUL|Middlesbrough~MDB|Midlothian~MLN|Milton Keynes~MIK|Monmouthshire~MON|Moray~MRY|Neath Port Talbot~NTL|Newcastle upon Tyne~NET|Newham~NWM|Newport~NWP|Newry, Mourne and Down~NMD|Norfolk~NFK|North Ayrshire~NAY|North East Lincolnshire~NEL|North Lanarkshire~NLK|North Lincolnshire~NLN|North Somerset~NSM|North Tyneside~NTY|North Yorkshire~NYK|Northamptonshire~NTH|Northumberland~NBL|Nottingham~NGM|Nottinghamshire~NTT|Oldham~OLD|Orkney Islands~ORK|Oxfordshire~OXF|Pembrokeshire~PEM|Perth and Kinross~PKN|Peterborough~PTE|Plymouth~PLY|Portsmouth~POR|Powys~POW|Reading~RDG|Redbridge~RDB|Redcar and Cleveland~RCC|Renfrewshire~RFW|Rhondda Cynon Taff~RCT|Richmond upon Thames~RIC|Rochdale~RCH|Rotherham~ROT|Rutland~RUT|Salford~SLF|Sandwell~SAW|Scottish Borders~SCB|Sefton~SFT|Sheffield~SHF|Shetland Islands~ZET|Shropshire~SHR|Slough~SLG|Solihull~SOL|Somerset~SOM|South Ayrshire~SAY|South Gloucestershire~SGC|South Lanarkshire~SLK|South Tyneside~STY|Southampton~STH|Southend-on-Sea~SOS|Southwark~SWK|St. Helens~SHN|Staffordshire~STS|Stirling~STG|Stockport~SKP|Stockton-on-Tees~STT|Stoke-on-Trent~STE|Suffolk~SFK|Sunderland~SND|Surrey~SRY|Sutton~STN|Swansea~SWA|Swindon~SWD|Tameside~TAM|Telford and Wrekin~TFW|Thurrock~THR|Torbay~TOB|Torfaen~TOF|Tower Hamlets~TWH|Trafford~TRF|Vale of Glamorgan, The~VGL|Wakefield~WKF|Walsall~WLL|Waltham Forest~WFT|Wandsworth~WND|Warrington~WRT|Warwickshire~WAR|West Berkshire~WBK|West Dunbartonshire~WDU|West Lothian~WLN|West Sussex~WSX|Westminster~WSM|Wigan~WGN|Wiltshire~WIL|Windsor and Maidenhead~WNM|Wirral~WRL|Wokingham~WOK|Wolverhampton~WLV|Worcestershire~WOR|Wrexham~WRX|York~YOR"],["United States","US","Alabama~AL|Alaska~AK|American Samoa~AS|Arizona~AZ|Arkansas~AR|California~CA|Colorado~CO|Connecticut~CT|Delaware~DE|District of Columbia~DC|Micronesia~FM|Florida~FL|Georgia~GA|Guam~GU|Hawaii~HI|Idaho~ID|Illinois~IL|Indiana~IN|Iowa~IA|Kansas~KS|Kentucky~KY|Louisiana~LA|Maine~ME|Marshall Islands~MH|Maryland~MD|Massachusetts~MA|Michigan~MI|Minnesota~MN|Mississippi~MS|Missouri~MO|Montana~MT|Nebraska~NE|Nevada~NV|New Hampshire~NH|New Jersey~NJ|New Mexico~NM|New York~NY|North Carolina~NC|North Dakota~ND|Northern Mariana Islands~MP|Ohio~OH|Oklahoma~OK|Oregon~OR|Palau~PW|Pennsylvania~PA|Puerto Rico~PR|Rhode Island~RI|South Carolina~SC|South Dakota~SD|Tennessee~TN|Texas~TX|Utah~UT|Vermont~VT|Virgin Islands~VI|Virginia~VA|Washington~WA|West Virginia~WV|Wisconsin~WI|Wyoming~WY|Armed Forces Americas~AA|Armed Forces Europe, Canada, Africa and Middle East~AE|Armed Forces Pacific~AP"],["United States Minor Outlying Islands","UM","Baker Island~81|Howland Island~84|Jarvis Island~86|Johnston Atoll~67|Kingman Reef~89|Midway Islands~71|Navassa Island~76|Palmyra Atoll~95|Wake Island~79|Bajo Nuevo Bank~BN|Serranilla Bank~SB"],["Uruguay","UY","Artigas~AR|Canelones~CA|Cerro Largo~CL|Colonia~CO|Durazno~DU|Flores~FS|Florida~FD|Lavalleja~LA|Maldonado~MA|Montevideo~MO|Paysand\xfa~PA|R\xedo Negro~RN|Rivera~RV|Rocha~RO|Salto~SA|San Jos\xe9~SJ|Soriano~SO|Tacuaremb\xf3~TA|Treinta y Tres~TT"],["Uzbekistan","UZ","Toshkent shahri~TK|Andijon~AN|Buxoro~BU|Farg‘ona~FA|Jizzax~JI|Namangan~NG|Navoiy~NW|Qashqadaryo (Qarshi)~QA|Samarqand~SA|Sirdaryo (Guliston)~SI|Surxondaryo (Termiz)~SU|Toshkent wiloyati~TO|Xorazm (Urganch)~XO|Qoraqalpog‘iston Respublikasi (Nukus)~QR"],["Vanuatu","VU","Malampa~MAP|P\xe9nama~PAM|Sanma~SAM|Sh\xe9fa~SEE|Taf\xe9a~TAE|Torba~TOB"],["Venezuela, Bolivarian Republic of","VE","Dependencias Federales~W|Distrito Federal~A|Amazonas~Z|Anzo\xe1tegui~B|Apure~C|Aragua~D|Barinas~E|Bol\xedvar~F|Carabobo~G|Cojedes~H|Delta Amacuro~Y|Falc\xf3n~I|Gu\xe1rico~J|Lara~K|M\xe9rida~L|Miranda~M|Monagas~N|Nueva Esparta~O|Portuguesa~P|Sucre~R|T\xe1chira~S|Trujillo~T|Vargas~X|Yaracuy~U|Zulia~V"],["Vietnam","VN","An Giang~44|B\xe0 Rịa - Vũng T\xe0u~43|B\xecnh Dương~57|B\xecnh Phước~58|B\xecnh Định~31|B\xecnh Thuận~40|Bạc Li\xeau~55|Bắc Giang~54|Bắc Kạn~53|Bắc Ninh~56|Bến Tre~50|Cao Bằng~04|C\xe0 Mau~59|Đắk Lắk~33|Đắk N\xf4ng~72|Điện Bi\xean~71|Đồng Nai~39|Đồng Th\xe1p~45|Gia Lai~30|H\xe0 Giang~03|H\xe0 Nam~63|H\xe0 T\xe2y~15|H\xe0 Tĩnh~23|Hải Dương~61|Hậu Giang~73|H\xf2a B\xecnh~14|Hưng Y\xean~66|Kh\xe1nh H\xf2a~34|Ki\xean Giang~47|Kon Tum~28|Lai Ch\xe2u~01|L\xe2m Đồng~35|Lạng Sơn~09|L\xe0o Cai~02|Long An~41|Nam Định~67|Nghệ An~22|Ninh B\xecnh~18|Ninh Thuận~36|Ph\xfa Thọ~68|Ph\xfa Y\xean~32|Quảng B\xecnh~24|Quảng Nam~27|Quảng Ng\xe3i~29|Quảng Ninh~13|Quảng Trị~25|S\xf3c Trăng~52|Sơn La~05|T\xe2y Ninh~37|Th\xe1i B\xecnh~20|Th\xe1i Nguy\xean~69|Thanh H\xf3a~21|Thừa Thi\xean–Huế~26|Tiền Giang~46|Tr\xe0 Vinh~51|Tuy\xean Quang~07|Vĩnh Long~49|Vĩnh Ph\xfac~70|Y\xean B\xe1i~06|Cần Thơ~CT|Đ\xe0 Nẵng~DN|H\xe0 Nội~HN|Hải Ph\xf2ng~HP|Hồ Ch\xed Minh (S\xe0i G\xf2n)~SG"],["Virgin Islands, British","VG","Anegada~ANG|Jost Van Dyke~JVD|Tortola~TTA|Virgin Gorda~VGD"],["Virgin Islands, U.S.","VI","St. Thomas~STH|St. John~SJO|St. Croix~SCR"],["Wallis and Futuna","WF","Alo~ALO|Sigave~SIG|Wallis~WAL"],["Western Sahara","EH","Es Smara~ESM|Boujdour~BOD|La\xe2youne~LAA|Aousserd~AOU|Oued ed Dahab~OUD"],["Yemen","YE","Abyān~AB|'Adan~AD|Aḑ Ḑāli'~DA|Al Bayḑā'~BA|Al Ḩudaydah~HU|Al Jawf~JA|Al Mahrah~MR|Al Maḩwīt~MW|'Amrān~AM|Dhamār~DH|Ḩaḑramawt~HD|Ḩajjah~HJ|Ibb~IB|Laḩij~LA|Ma'rib~MA|Raymah~RA|Şā‘dah~SD|Şan‘ā'~SN|Shabwah~SH|Tā‘izz~TA"],["Zambia","ZM","Central~02|Copperbelt~08|Eastern~03|Luapula~04|Lusaka~09|Northern~05|North-Western~06|Southern~07|Western~01"],["Zimbabwe","ZW","Bulawayo~BU|Harare~HA|Manicaland~MA|Mashonaland Central~MC|Mashonaland East~ME|Mashonaland West~MW|Masvingo~MV|Matabeleland North~MN|Matabeleland South~MS|Midlands~MI"]],u={DISPLAY_TYPE_FULL:"full",DISPLAY_TYPE_SHORT:"short",REGION_LIST_DELIMITER:"|",SINGLE_REGION_DELIMITER:"~"},s=function(a,e){if(!(a instanceof e))throw TypeError("Cannot call a class as a function")},l=function(){function a(a,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(a,r.key,r)}}return function(e,n,r){return n&&a(e.prototype,n),r&&a(e,r),e}}(),d=Object.assign||function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(a[r]=n[r])}return a},c=function(a,e){if("function"!=typeof e&&null!==e)throw TypeError("Super expression must either be null or a function, not "+typeof e);a.prototype=Object.create(e&&e.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(a,e):a.__proto__=e)},h=function(a,e){var n={};for(var r in a)!(e.indexOf(r)>=0)&&Object.prototype.hasOwnProperty.call(a,r)&&(n[r]=a[r]);return n},f=function(a,e){if(!a)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return e&&("object"==typeof e||"function"==typeof e)?e:a},m=function(a,e){if(Array.isArray(a))return a;if(Symbol.iterator in Object(a))return function(a,e){var n=[],r=!0,t=!1,i=void 0;try{for(var o,u=a[Symbol.iterator]();!(r=(o=u.next()).done)&&(n.push(o.value),!e||n.length!==e);r=!0);}catch(s){t=!0,i=s}finally{try{!r&&u.return&&u.return()}finally{if(t)throw i}}return n}(a,e);throw TypeError("Invalid attempt to destructure non-iterable instance")},g=function(a){if(!Array.isArray(a))return Array.from(a);for(var e=0,n=Array(a.length);e<a.length;e++)n[e]=a[e];return n},p=function(a,e,n,r){var t=[],i=a;return n.length>0?i=a.filter(function(a){var e=m(a,2)[1];return n.indexOf(e)>-1}):r.length>0&&(i=a.filter(function(a){var e=m(a,2)[1];return -1===r.indexOf(e)})),e.length>0&&(e.forEach(function(a){var e=i.find(function(e){return m(e,2)[1]===a});e&&t.push(e)}),i=i.filter(function(a){var n=m(a,2)[1];return -1===e.indexOf(n)})),t.length?[].concat(t,g(i)):i},S=function(a,e,n){var r=m(a,3),t=r[0],i=r[1],o=r[2],u=e.hasOwnProperty(i)?e[i]:[],s=n.hasOwnProperty(i)?n[i]:[],l=o.split("|");return u.length>0&&l.length>0?l=l.filter(function(a){for(var e=0,n=u.length;e<n;e++)if(a.indexOf(u[e])>-1)return!0;return!1}):s.length>0&&l.length>0&&(l=l.filter(function(a){for(var e=0,n=s.length;e<n;e++)if(a.indexOf(s[e])>-1)return!1;return!0})),[t,i,l.join("|")]},b=function(a){function e(a){s(this,e);var n=f(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,a));return n.state={countries:p(o,a.priorityOptions,a.whitelist,a.blacklist)},n}return c(e,a),l(e,[{key:"getCountries",value:function(){var a=this.props,e=a.valueType,n=a.labelType;return this.state.countries.map(function(a){var t=m(a,2),i=t[0],o=t[1];return r.createElement("option",{value:e===u.DISPLAY_TYPE_SHORT?o:i,key:o},n===u.DISPLAY_TYPE_SHORT?o:i)})}},{key:"getDefaultOption",value:function(){var a=this.props,e=a.showDefaultOption,n=a.defaultOptionLabel;return e?r.createElement("option",{value:"",key:"default"},n):null}},{key:"render",value:function(){var a=this.props,e=a.name,n=a.id,t=a.classes,i=a.value,o=a.onChange,u=a.onBlur,s=a.disabled,l=d({},(a.showDefaultOption,a.defaultOptionLabel,a.labelType,a.valueType,a.whitelist,a.blacklist,a.customOptions,a.priorityOptions,h(a,["name","id","classes","value","onChange","onBlur","disabled","showDefaultOption","defaultOptionLabel","labelType","valueType","whitelist","blacklist","customOptions","priorityOptions"])),{name:e,value:i,onChange:function(a){return o(a.target.value,a)},onBlur:function(a){return u(a.target.value,a)},disabled:s});return n&&(l.id=n),t&&(l.className=t),r.createElement("select",l,this.getDefaultOption(),this.getCountries())}}]),e}(r.Component);b.propTypes={value:i().oneOfType([i().string,i().number]),name:i().string,id:i().string,classes:i().string,showDefaultOption:i().bool,defaultOptionLabel:i().oneOfType([i().string,i().number]),priorityOptions:i().array,onChange:i().func,onBlur:i().func,labelType:i().oneOf([u.DISPLAY_TYPE_FULL,u.DISPLAY_TYPE_SHORT]),valueType:i().oneOf([u.DISPLAY_TYPE_FULL,u.DISPLAY_TYPE_SHORT]),whitelist:i().array,blacklist:i().array,disabled:i().bool},b.defaultProps={value:"",name:"rcrs-country",id:"",classes:"",showDefaultOption:!0,defaultOptionLabel:"Select Country",priorityOptions:[],onChange:function(){},onBlur:function(){},labelType:u.DISPLAY_TYPE_FULL,valueType:u.DISPLAY_TYPE_FULL,whitelist:[],blacklist:[],disabled:!1};var y=function(a){function e(a){s(this,e);var n=f(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,a));return n.state={regions:n.getRegions(a.country)},n.getRegions=n.getRegions.bind(n),n}return c(e,a),l(e,[{key:"componentDidUpdate",value:function(a){var e=this.props.country;if(e!==a.country){var n=this.getRegions(e);this.setState({regions:[].concat(g(n),g(this.getCustomOptions(n)))})}}},{key:"getCustomOptions",value:function(a){var e=this.props.customOptions,n=this.getDuplicates(a);return n.length?(console.error("Error: Duplicate regions present: "+n.toString()+".\nThe above item(s) is/are already getting added to the region dropdown by the library."),[]):e.map(function(a){if(a)return{regionName:a,regionShortCode:a}})}},{key:"getDuplicates",value:function(a){var e=this.props,n=e.customOptions,r=e.valueType===u.DISPLAY_TYPE_FULL?"regionName":"regionShortCode";return a.filter(function(a){return -1!==n.indexOf(a[r])}).map(function(a){return a[r]})}},{key:"getRegions",value:function(a){if(!a)return[];var e=this.props,n=e.countryValueType,r=e.whitelist,t=e.blacklist,i=n===u.DISPLAY_TYPE_FULL?0:1,s=[];return(o.forEach(function(e){e[i]===a&&(s=e)}),s&&0!==s.length)?S(s,r,t)[2].split(u.REGION_LIST_DELIMITER).map(function(a){var e=m(a.split(u.SINGLE_REGION_DELIMITER),2),n=e[0],r=e[1];return{regionName:n,regionShortCode:void 0===r?null:r}}):(console.error("Error. Unknown country passed: "+a+'. If you\'re passing a country shortcode, be sure to include countryValueType="short" on the RegionDropdown'),[])}},{key:"getRegionList",value:function(){var a=this.props,e=a.labelType,n=a.valueType;return this.state.regions.map(function(a){var t=a.regionName,i=a.regionShortCode,o=e===u.DISPLAY_TYPE_FULL?t:i,s=n===u.DISPLAY_TYPE_FULL?t:i;return r.createElement("option",{value:s,key:t},o)})}},{key:"getDefaultOption",value:function(){var a=this.props,e=a.blankOptionLabel,n=a.showDefaultOption,t=a.defaultOptionLabel;return a.country?n?r.createElement("option",{value:""},t):null:r.createElement("option",{value:""},e)}},{key:"render",value:function(){var a=this.props,e=a.value,n=a.country,t=a.onChange,i=a.onBlur,o=a.id,u=a.name,s=a.classes,l=a.disabled,c=(a.blankOptionLabel,a.showDefaultOption,a.defaultOptionLabel,a.labelType,a.valueType,a.countryValueType,a.disableWhenEmpty),f=d({},(a.customOptions,h(a,["value","country","onChange","onBlur","id","name","classes","disabled","blankOptionLabel","showDefaultOption","defaultOptionLabel","labelType","valueType","countryValueType","disableWhenEmpty","customOptions"])),{name:u,value:e,onChange:function(a){return t(a.target.value,a)},onBlur:function(a){return i(a.target.value,a)},disabled:l||c&&""===n});return o&&(f.id=o),s&&(f.className=s),r.createElement("select",f,this.getDefaultOption(),this.getRegionList())}}]),e}(r.PureComponent);y.propTypes={country:i().string,countryValueType:i().oneOf([u.DISPLAY_TYPE_FULL,u.DISPLAY_TYPE_SHORT]),value:i().oneOfType([i().string,i().number]),name:i().string,id:i().string,classes:i().string,blankOptionLabel:i().string,showDefaultOption:i().bool,defaultOptionLabel:i().string,onChange:i().func,onBlur:i().func,labelType:i().string,valueType:i().string,whitelist:i().object,blacklist:i().object,disabled:i().bool,disableWhenEmpty:i().bool,customOptions:i().array},y.defaultProps={country:"",value:"",name:"rcrs-region",id:"",classes:"",blankOptionLabel:"-",showDefaultOption:!0,defaultOptionLabel:"Select Region",onChange:function(){},onBlur:function(){},countryValueType:u.DISPLAY_TYPE_FULL,labelType:u.DISPLAY_TYPE_FULL,valueType:u.DISPLAY_TYPE_FULL,whitelist:{},blacklist:{},disabled:!1,disableWhenEmpty:!1,customOptions:[]}},7555:function(a,e,n){a.exports=function(a){var e={};function n(r){if(e[r])return e[r].exports;var t=e[r]={i:r,l:!1,exports:{}};return a[r].call(t.exports,t,t.exports,n),t.l=!0,t.exports}return n.m=a,n.c=e,n.d=function(a,e,r){n.o(a,e)||Object.defineProperty(a,e,{enumerable:!0,get:r})},n.r=function(a){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})},n.t=function(a,e){if(1&e&&(a=n(a)),8&e||4&e&&"object"==typeof a&&a&&a.__esModule)return a;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:a}),2&e&&"string"!=typeof a)for(var t in a)n.d(r,t,(function(e){return a[e]}).bind(null,t));return r},n.n=function(a){var e=a&&a.__esModule?function(){return a.default}:function(){return a};return n.d(e,"a",e),e},n.o=function(a,e){return Object.prototype.hasOwnProperty.call(a,e)},n.p="",n(n.s=9)}([function(a,e){a.exports=n(7294)},function(a,e,n){var r;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/ !function(){"use strict";var n={}.hasOwnProperty;function t(){for(var a=[],e=0;e<arguments.length;e++){var r=arguments[e];if(r){var i=typeof r;if("string"===i||"number"===i)a.push(r);else if(Array.isArray(r)&&r.length){var o=t.apply(null,r);o&&a.push(o)}else if("object"===i)for(var u in r)n.call(r,u)&&r[u]&&a.push(u)}}return a.join(" ")}a.exports?(t.default=t,a.exports=t):void 0===(r=(function(){return t}).apply(e,[]))||(a.exports=r)}()},function(a,e,n){(function(e){var n=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,t=/^0b[01]+$/i,i=/^0o[0-7]+$/i,o=parseInt,u="object"==typeof e&&e&&e.Object===Object&&e,s="object"==typeof self&&self&&self.Object===Object&&self,l=u||s||Function("return this")(),d=Object.prototype.toString,c=l.Symbol,h=c?c.prototype:void 0,f=h?h.toString:void 0;function m(a){if("string"==typeof a)return a;if(p(a))return f?f.call(a):"";var e=a+"";return"0"==e&&1/a==-1/0?"-0":e}function g(a){var e=typeof a;return!!a&&("object"==e||"function"==e)}function p(a){return"symbol"==typeof a||!!a&&"object"==typeof a&&"[object Symbol]"==d.call(a)}a.exports=function(a,e,u){var s,l,d,c,h,f;return a=null==(s=a)?"":m(s),f=(h=(c=u)?(c=function(a){if("number"==typeof a)return a;if(p(a))return NaN;if(g(a)){var e="function"==typeof a.valueOf?a.valueOf():a;a=g(e)?e+"":e}if("string"!=typeof a)return 0===a?a:+a;a=a.replace(n,"");var u=t.test(a);return u||i.test(a)?o(a.slice(2),u?2:8):r.test(a)?NaN:+a}(c))===1/0||c===-1/0?17976931348623157e292*(c<0?-1:1):c==c?c:0:0===c?c:0)%1,l=h==h?f?h-f:h:0,d=a.length,l==l&&(void 0!==d&&(l=l<=d?l:d),l=l>=0?l:0),u=l,e=m(e),a.slice(u,u+e.length)==e}}).call(this,n(3))},function(a,e){var n;n=function(){return this}();try{n=n||Function("return this")()}catch(r){"object"==typeof window&&(n=window)}a.exports=n},function(a,e,n){(function(e){var n,r=/^\[object .+?Constructor\]$/,t="object"==typeof e&&e&&e.Object===Object&&e,i="object"==typeof self&&self&&self.Object===Object&&self,o=t||i||Function("return this")(),u=Array.prototype,s=Function.prototype,l=Object.prototype,d=o["__core-js_shared__"],c=(n=/[^.]+$/.exec(d&&d.keys&&d.keys.IE_PROTO||""))?"Symbol(src)_1."+n:"",h=s.toString,f=l.hasOwnProperty,m=l.toString,g=RegExp("^"+h.call(f).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),p=u.splice,S=M(o,"Map"),b=M(Object,"create");function y(a){var e=-1,n=a?a.length:0;for(this.clear();++e<n;){var r=a[e];this.set(r[0],r[1])}}function A(a){var e=-1,n=a?a.length:0;for(this.clear();++e<n;){var r=a[e];this.set(r[0],r[1])}}function C(a){var e=-1,n=a?a.length:0;for(this.clear();++e<n;){var r=a[e];this.set(r[0],r[1])}}function v(a,e){for(var n,r=a.length;r--;)if((n=a[r][0])===e||n!=n&&e!=e)return r;return -1}function k(a,e){var n,r=a.__data__;return("string"==(n=typeof e)||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e)?r["string"==typeof e?"string":"hash"]:r.map}function M(a,e){var n,t,i=null==a?void 0:a[e];return!(!N(n=i)||c&&c in n)&&("[object Function]"==(t=N(n)?m.call(n):"")||"[object GeneratorFunction]"==t||function(a){var e=!1;if(null!=a&&"function"!=typeof a.toString)try{e=!!(a+"")}catch(n){}return e}(n)?g:r).test(function(a){if(null!=a){try{return h.call(a)}catch(e){}try{return a+""}catch(n){}}return""}(n))?i:void 0}function B(a,e){if("function"!=typeof a||e&&"function"!=typeof e)throw TypeError("Expected a function");var n=function(){var r=arguments,t=e?e.apply(this,r):r[0],i=n.cache;if(i.has(t))return i.get(t);var o=a.apply(this,r);return n.cache=i.set(t,o),o};return n.cache=new(B.Cache||C),n}function N(a){var e=typeof a;return!!a&&("object"==e||"function"==e)}y.prototype.clear=function(){this.__data__=b?b(null):{}},y.prototype.delete=function(a){return this.has(a)&&delete this.__data__[a]},y.prototype.get=function(a){var e=this.__data__;if(b){var n=e[a];return"__lodash_hash_undefined__"===n?void 0:n}return f.call(e,a)?e[a]:void 0},y.prototype.has=function(a){var e=this.__data__;return b?void 0!==e[a]:f.call(e,a)},y.prototype.set=function(a,e){return this.__data__[a]=b&&void 0===e?"__lodash_hash_undefined__":e,this},A.prototype.clear=function(){this.__data__=[]},A.prototype.delete=function(a){var e=this.__data__,n=v(e,a);return!(n<0)&&(n==e.length-1?e.pop():p.call(e,n,1),!0)},A.prototype.get=function(a){var e=this.__data__,n=v(e,a);return n<0?void 0:e[n][1]},A.prototype.has=function(a){return v(this.__data__,a)>-1},A.prototype.set=function(a,e){var n=this.__data__,r=v(n,a);return r<0?n.push([a,e]):n[r][1]=e,this},C.prototype.clear=function(){this.__data__={hash:new y,map:new(S||A),string:new y}},C.prototype.delete=function(a){return k(this,a).delete(a)},C.prototype.get=function(a){return k(this,a).get(a)},C.prototype.has=function(a){return k(this,a).has(a)},C.prototype.set=function(a,e){return k(this,a).set(a,e),this},B.Cache=C,a.exports=B}).call(this,n(3))},function(a,e,n){(function(e){var n=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,t=/^0b[01]+$/i,i=/^0o[0-7]+$/i,o=parseInt,u="object"==typeof e&&e&&e.Object===Object&&e,s="object"==typeof self&&self&&self.Object===Object&&self,l=u||s||Function("return this")(),d=Object.prototype.toString,c=Math.max,h=Math.min,f=function(){return l.Date.now()};function m(a){var e=typeof a;return!!a&&("object"==e||"function"==e)}function g(a){if("number"==typeof a)return a;if("symbol"==typeof(e=a)||(u=e)&&"object"==typeof u&&"[object Symbol]"==d.call(e))return NaN;if(m(a)){var e,u,s="function"==typeof a.valueOf?a.valueOf():a;a=m(s)?s+"":s}if("string"!=typeof a)return 0===a?a:+a;a=a.replace(n,"");var l=t.test(a);return l||i.test(a)?o(a.slice(2),l?2:8):r.test(a)?NaN:+a}a.exports=function(a,e,n){var r,t,i,o,u,s,l=0,d=!1,p=!1,S=!0;if("function"!=typeof a)throw TypeError("Expected a function");function b(e){var n=r,i=t;return r=t=void 0,l=e,o=a.apply(i,n)}function y(a){var n=a-s;return void 0===s||n>=e||n<0||p&&a-l>=i}function A(){var a,n=f();if(y(n))return C(n);u=setTimeout(A,(a=e-(n-s),p?h(a,i-(n-l)):a))}function C(a){return u=void 0,S&&r?b(a):(r=t=void 0,o)}function v(){var a,n=f(),i=y(n);if(r=arguments,t=this,s=n,i){if(void 0===u)return l=a=s,u=setTimeout(A,e),d?b(a):o;if(p)return u=setTimeout(A,e),b(s)}return void 0===u&&(u=setTimeout(A,e)),o}return e=g(e)||0,m(n)&&(d=!!n.leading,i=(p="maxWait"in n)?c(g(n.maxWait)||0,e):i,S="trailing"in n?!!n.trailing:S),v.cancel=function(){void 0!==u&&clearTimeout(u),l=0,r=s=t=u=void 0},v.flush=function(){return void 0===u?o:C(f())},v}}).call(this,n(3))},function(a,e,n){(function(a,n){var r="[object Arguments]",t="[object Map]",i="[object Object]",o="[object Set]",u=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,s=/^\w*$/,l=/^\./,d=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,c=/\\(\\)?/g,h=/^\[object .+?Constructor\]$/,f=/^(?:0|[1-9]\d*)$/,m={};m["[object Float32Array]"]=m["[object Float64Array]"]=m["[object Int8Array]"]=m["[object Int16Array]"]=m["[object Int32Array]"]=m["[object Uint8Array]"]=m["[object Uint8ClampedArray]"]=m["[object Uint16Array]"]=m["[object Uint32Array]"]=!0,m[r]=m["[object Array]"]=m["[object ArrayBuffer]"]=m["[object Boolean]"]=m["[object DataView]"]=m["[object Date]"]=m["[object Error]"]=m["[object Function]"]=m[t]=m["[object Number]"]=m[i]=m["[object RegExp]"]=m[o]=m["[object String]"]=m["[object WeakMap]"]=!1;var g="object"==typeof a&&a&&a.Object===Object&&a,p="object"==typeof self&&self&&self.Object===Object&&self,S=g||p||Function("return this")(),b=e&&!e.nodeType&&e,y=b&&"object"==typeof n&&n&&!n.nodeType&&n,A=y&&y.exports===b&&g.process,C=function(){try{return A&&A.binding("util")}catch(a){}}(),v=C&&C.isTypedArray;function k(a,e,n,r){var t=-1,i=a?a.length:0;for(r&&i&&(n=a[++t]);++t<i;)n=e(n,a[t],t,a);return n}function M(a,e,n,r,t){return t(a,function(a,t,i){n=r?(r=!1,a):e(n,a,t,i)}),n}function B(a){var e=!1;if(null!=a&&"function"!=typeof a.toString)try{e=!!(a+"")}catch(n){}return e}function N(a){var e=-1,n=Array(a.size);return a.forEach(function(a,r){n[++e]=[r,a]}),n}function T(a){var e=-1,n=Array(a.size);return a.forEach(function(a){n[++e]=a}),n}var x,L,P,K=Array.prototype,O=Function.prototype,D=Object.prototype,R=S["__core-js_shared__"],I=(x=/[^.]+$/.exec(R&&R.keys&&R.keys.IE_PROTO||""))?"Symbol(src)_1."+x:"",E=O.toString,G=D.hasOwnProperty,w=D.toString,j=RegExp("^"+E.call(G).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),H=S.Symbol,V=S.Uint8Array,_=D.propertyIsEnumerable,F=K.splice,U=(L=Object.keys,P=Object,function(a){return L(P(a))}),z=ay(S,"DataView"),W=ay(S,"Map"),J=ay(S,"Promise"),Y=ay(S,"Set"),Z=ay(S,"WeakMap"),q=ay(Object,"create"),Q=aN(z),X=aN(W),$=aN(J),aa=aN(Y),ae=aN(Z),an=H?H.prototype:void 0,ar=an?an.valueOf:void 0,at=an?an.toString:void 0;function ai(a){var e=-1,n=a?a.length:0;for(this.clear();++e<n;){var r=a[e];this.set(r[0],r[1])}}function ao(a){var e=-1,n=a?a.length:0;for(this.clear();++e<n;){var r=a[e];this.set(r[0],r[1])}}function au(a){var e=-1,n=a?a.length:0;for(this.clear();++e<n;){var r=a[e];this.set(r[0],r[1])}}function as(a){var e=-1,n=a?a.length:0;for(this.__data__=new au;++e<n;)this.add(a[e])}function al(a){this.__data__=new ao(a)}function ad(a,e){for(var n=a.length;n--;)if(ax(a[n][0],e))return n;return -1}ai.prototype.clear=function(){this.__data__=q?q(null):{}},ai.prototype.delete=function(a){return this.has(a)&&delete this.__data__[a]},ai.prototype.get=function(a){var e=this.__data__;if(q){var n=e[a];return"__lodash_hash_undefined__"===n?void 0:n}return G.call(e,a)?e[a]:void 0},ai.prototype.has=function(a){var e=this.__data__;return q?void 0!==e[a]:G.call(e,a)},ai.prototype.set=function(a,e){return this.__data__[a]=q&&void 0===e?"__lodash_hash_undefined__":e,this},ao.prototype.clear=function(){this.__data__=[]},ao.prototype.delete=function(a){var e=this.__data__,n=ad(e,a);return!(n<0)&&(n==e.length-1?e.pop():F.call(e,n,1),!0)},ao.prototype.get=function(a){var e=this.__data__,n=ad(e,a);return n<0?void 0:e[n][1]},ao.prototype.has=function(a){return ad(this.__data__,a)>-1},ao.prototype.set=function(a,e){var n=this.__data__,r=ad(n,a);return r<0?n.push([a,e]):n[r][1]=e,this},au.prototype.clear=function(){this.__data__={hash:new ai,map:new(W||ao),string:new ai}},au.prototype.delete=function(a){return ab(this,a).delete(a)},au.prototype.get=function(a){return ab(this,a).get(a)},au.prototype.has=function(a){return ab(this,a).has(a)},au.prototype.set=function(a,e){return ab(this,a).set(a,e),this},as.prototype.add=as.prototype.push=function(a){return this.__data__.set(a,"__lodash_hash_undefined__"),this},as.prototype.has=function(a){return this.__data__.has(a)},al.prototype.clear=function(){this.__data__=new ao},al.prototype.delete=function(a){return this.__data__.delete(a)},al.prototype.get=function(a){return this.__data__.get(a)},al.prototype.has=function(a){return this.__data__.has(a)},al.prototype.set=function(a,e){var n=this.__data__;if(n instanceof ao){var r=n.__data__;if(!W||r.length<199)return r.push([a,e]),this;n=this.__data__=new au(r)}return n.set(a,e),this};var ac,ah=function(a,e){if(null==a)return a;if(!aK(a))return a&&af(a,e,aw);for(var n=a.length,r=ac?n:-1,t=Object(a);(ac?r--:++r<n)&&!1!==e(t[r],r,t););return a},af=function(a,e,n){for(var r=-1,t=Object(a),i=n(a),o=i.length;o--;){var u=i[++r];if(!1===e(t[u],u,t))break}return a};function am(a,e){for(var n,r=0,t=(e=av(e,a)?[e]:aP(n=e)?n:aM(n)).length;null!=a&&r<t;)a=a[aB(e[r++])];return r&&r==t?a:void 0}function ag(a,e){return null!=a&&e in Object(a)}function ap(a,e,n,u,s){return a===e||(null!=a&&null!=e&&(aR(a)||aI(e))?function(a,e,n,u,s,l){var d=aP(a),c=aP(e),h="[object Array]",f="[object Array]";d||(h=(h=aA(a))==r?i:h),c||(f=(f=aA(e))==r?i:f);var m=h==i&&!B(a),g=f==i&&!B(e),p=h==f;if(p&&!m)return l||(l=new al),d||aG(a)?aS(a,e,n,u,s,l):function(a,e,n,r,i,u,s){switch(n){case"[object DataView]":if(a.byteLength!=e.byteLength||a.byteOffset!=e.byteOffset)break;a=a.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(a.byteLength!=e.byteLength||!r(new V(a),new V(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return ax(+a,+e);case"[object Error]":return a.name==e.name&&a.message==e.message;case"[object RegExp]":case"[object String]":return a==e+"";case t:var l=N;case o:var d=2&u;if(l||(l=T),a.size!=e.size&&!d)break;var c=s.get(a);if(c)return c==e;u|=1,s.set(a,e);var h=aS(l(a),l(e),r,i,u,s);return s.delete(a),h;case"[object Symbol]":if(ar)return ar.call(a)==ar.call(e)}return!1}(a,e,h,n,u,s,l);if(!(2&s)){var S=m&&G.call(a,"__wrapped__"),b=g&&G.call(e,"__wrapped__");if(S||b){var y=S?a.value():a,A=b?e.value():e;return l||(l=new al),n(y,A,u,s,l)}}return!!p&&(l||(l=new al),function(a,e,n,r,t,i){var o=2&t,u=aw(a),s=u.length;if(s!=aw(e).length&&!o)return!1;for(var l=s;l--;){var d=u[l];if(!(o?d in e:G.call(e,d)))return!1}var c=i.get(a);if(c&&i.get(e))return c==e;var h=!0;i.set(a,e),i.set(e,a);for(var f=o;++l<s;){var m=a[d=u[l]],g=e[d];if(r)var p=o?r(g,m,d,e,a,i):r(m,g,d,a,e,i);if(!(void 0===p?m===g||n(m,g,r,t,i):p)){h=!1;break}f||(f="constructor"==d)}if(h&&!f){var S=a.constructor,b=e.constructor;S==b||!("constructor"in a)||!("constructor"in e)||"function"==typeof S&&S instanceof S&&"function"==typeof b&&b instanceof b||(h=!1)}return i.delete(a),i.delete(e),h}(a,e,n,u,s,l))}(a,e,ap,n,u,s):a!=a&&e!=e)}function aS(a,e,n,r,t,i){var o=2&t,u=a.length,s=e.length;if(u!=s&&!(o&&s>u))return!1;var l=i.get(a);if(l&&i.get(e))return l==e;var d=-1,c=!0,h=1&t?new as:void 0;for(i.set(a,e),i.set(e,a);++d<u;){var f=a[d],m=e[d];if(r)var g=o?r(m,f,d,e,a,i):r(f,m,d,a,e,i);if(void 0!==g){if(g)continue;c=!1;break}if(h){if(!function(a,e){for(var n=-1,r=a?a.length:0;++n<r;)if(e(a[n],n,a))return!0;return!1}(e,function(a,e){if(!h.has(e)&&(f===a||n(f,a,r,t,i)))return h.add(e)})){c=!1;break}}else if(f!==m&&!n(f,m,r,t,i)){c=!1;break}}return i.delete(a),i.delete(e),c}function ab(a,e){var n,r=a.__data__;return("string"==(n=typeof e)||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e)?r["string"==typeof e?"string":"hash"]:r.map}function ay(a,e){var n=null==a?void 0:a[e];return!(!aR(n)||I&&I in n)&&(aO(n)||B(n)?j:h).test(aN(n))?n:void 0}var aA=function(a){return w.call(a)};function aC(a,e){return!!(e=null==e?9007199254740991:e)&&("number"==typeof a||f.test(a))&&a>-1&&a%1==0&&a<e}function av(a,e){if(aP(a))return!1;var n=typeof a;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=a&&!aE(a))||s.test(a)||!u.test(a)||null!=e&&a in Object(e)}function ak(a,e){return function(n){return null!=n&&n[a]===e&&(void 0!==e||a in Object(n))}}(z&&"[object DataView]"!=aA(new z(new ArrayBuffer(1)))||W&&aA(new W)!=t||J&&"[object Promise]"!=aA(J.resolve())||Y&&aA(new Y)!=o||Z&&"[object WeakMap]"!=aA(new Z))&&(aA=function(a){var e=w.call(a),n=e==i?a.constructor:void 0,r=n?aN(n):void 0;if(r)switch(r){case Q:return"[object DataView]";case X:return t;case $:return"[object Promise]";case aa:return o;case ae:return"[object WeakMap]"}return e});var aM=aT(function(a){a=null==(e=a)?"":function(a){if("string"==typeof a)return a;if(aE(a))return at?at.call(a):"";var e=a+"";return"0"==e&&1/a==-1/0?"-0":e}(e);var e,n=[];return l.test(a)&&n.push(""),a.replace(d,function(a,e,r,t){n.push(r?t.replace(c,"$1"):e||a)}),n});function aB(a){if("string"==typeof a||aE(a))return a;var e=a+"";return"0"==e&&1/a==-1/0?"-0":e}function aN(a){if(null!=a){try{return E.call(a)}catch(e){}try{return a+""}catch(n){}}return""}function aT(a,e){if("function"!=typeof a||e&&"function"!=typeof e)throw TypeError("Expected a function");var n=function(){var r=arguments,t=e?e.apply(this,r):r[0],i=n.cache;if(i.has(t))return i.get(t);var o=a.apply(this,r);return n.cache=i.set(t,o),o};return n.cache=new(aT.Cache||au),n}function ax(a,e){return a===e||a!=a&&e!=e}function aL(a){return aI(a)&&aK(a)&&G.call(a,"callee")&&(!_.call(a,"callee")||w.call(a)==r)}aT.Cache=au;var aP=Array.isArray;function aK(a){return null!=a&&aD(a.length)&&!aO(a)}function aO(a){var e=aR(a)?w.call(a):"";return"[object Function]"==e||"[object GeneratorFunction]"==e}function aD(a){return"number"==typeof a&&a>-1&&a%1==0&&a<=9007199254740991}function aR(a){var e=typeof a;return!!a&&("object"==e||"function"==e)}function aI(a){return!!a&&"object"==typeof a}function aE(a){return"symbol"==typeof a||aI(a)&&"[object Symbol]"==w.call(a)}var aG=v?function(a){return v(a)}:function(a){return aI(a)&&aD(a.length)&&!!m[w.call(a)]};function aw(a){return aK(a)?function(a,e){var n=aP(a)||aL(a)?function(a,e){for(var n=-1,r=Array(a);++n<a;)r[n]=e(n);return r}(a.length,String):[],r=n.length,t=!!r;for(var i in a)!G.call(a,i)||t&&("length"==i||aC(i,r))||n.push(i);return n}(a):function(a){if(n="function"==typeof(e=a&&a.constructor)&&e.prototype||D,a!==n)return U(a);var e,n,r=[];for(var t in Object(a))G.call(a,t)&&"constructor"!=t&&r.push(t);return r}(a)}function aj(a){return a}n.exports=function(a,e,n){var r,t,i,o,u,s=aP(a)?k:M,l=arguments.length<3;return s(a,"function"==typeof e?e:null==e?aj:"object"==typeof e?aP(e)?(i=e[0],o=e[1],av(i)&&(r=o)==r&&!aR(r)?ak(aB(i),o):function(a){var e,n=void 0===(e=null==a?void 0:am(a,i))?void 0:e;return void 0===n&&n===o?null!=a&&function(a,e,n){var r;e=av(e,a)?[e]:aP(r=e)?r:aM(r);for(var t,i=-1,o=e.length;++i<o;){var u=aB(e[i]);if(!(t=null!=a&&n(a,u)))break;a=a[u]}return t||!!(o=a?a.length:0)&&aD(o)&&aC(u,o)&&(aP(a)||aL(a))}(a,i,ag):ap(o,n,void 0,3)}):1==(u=function(a){for(var e=aw(a),n=e.length;n--;){var r=e[n],t=a[r];e[n]=[r,t,t==t&&!aR(t)]}return e}(e)).length&&u[0][2]?ak(u[0][0],u[0][1]):function(a){return a===e||function(a,e,n,r){var t=n.length,i=t,o=!r;if(null==a)return!i;for(a=Object(a);t--;){var u=n[t];if(o&&u[2]?u[1]!==a[u[0]]:!(u[0]in a))return!1}for(;++t<i;){var s=(u=n[t])[0],l=a[s],d=u[1];if(o&&u[2]){if(void 0===l&&!(s in a))return!1}else{var c=new al;if(r)var h=r(l,d,s,a,e,c);if(!(void 0===h?ap(d,l,r,3,c):h))return!1}}return!0}(a,e,u)}:av(e)?(t=aB(e),function(a){return null==a?void 0:a[t]}):function(a){return am(a,e)},n,l,ah)}}).call(this,n(3),n(7)(a))},function(a,e){a.exports=function(a){return a.webpackPolyfill||(a.deprecate=function(){},a.paths=[],a.children||(a.children=[]),Object.defineProperty(a,"loaded",{enumerable:!0,get:function(){return a.l}}),Object.defineProperty(a,"id",{enumerable:!0,get:function(){return a.i}}),a.webpackPolyfill=1),a}},function(a,e){String.prototype.padEnd||(String.prototype.padEnd=function(a,e){return a>>=0,e=String(void 0!==e?e:" "),this.length>a?String(this):((a-=this.length)>e.length&&(e+=e.repeat(a/e.length)),String(this)+e.slice(0,a))})},function(a,e,n){"use strict";function r(a,e,n){return e in a?Object.defineProperty(a,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):a[e]=n,a}function t(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function i(a){return function(a){if(Array.isArray(a)){for(var e=0,n=Array(a.length);e<a.length;e++)n[e]=a[e];return n}}(a)||t(a)||function(){throw TypeError("Invalid attempt to spread non-iterable instance")}()}function o(a){if(Array.isArray(a))return a}function u(){throw TypeError("Invalid attempt to destructure non-iterable instance")}function s(a,e){if(!(a instanceof e))throw TypeError("Cannot call a class as a function")}function l(a,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(a,r.key,r)}}function d(a){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a})(a)}function c(a){return(c="function"==typeof Symbol&&"symbol"===d(Symbol.iterator)?function(a){return d(a)}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":d(a)})(a)}function h(a){if(void 0===a)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function f(a){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(a){return a.__proto__||Object.getPrototypeOf(a)})(a)}function m(a,e){return(m=Object.setPrototypeOf||function(a,e){return a.__proto__=e,a})(a,e)}n.r(e);var g=n(0),p=n.n(g),S=n(5),b=n.n(S),y=n(4),A=n.n(y),C=n(6),v=n.n(C),k=n(2),M=n.n(k),B=n(1),N=n.n(B);function T(a,e){return o(a)||function(a,e){var n=[],r=!0,t=!1,i=void 0;try{for(var o,u=a[Symbol.iterator]();!(r=(o=u.next()).done)&&(n.push(o.value),!e||n.length!==e);r=!0);}catch(s){t=!0,i=s}finally{try{r||null==u.return||u.return()}finally{if(t)throw i}}return n}(a,e)||u()}n(8);var x=[["Afghanistan",["asia"],"af","93"],["Albania",["europe"],"al","355"],["Algeria",["africa","north-africa"],"dz","213"],["Andorra",["europe"],"ad","376"],["Angola",["africa"],"ao","244"],["Antigua and Barbuda",["america","carribean"],"ag","1268"],["Argentina",["america","south-america"],"ar","54","(..) ........",0,["11","221","223","261","264","2652","280","2905","291","2920","2966","299","341","342","343","351","376","379","381","3833","385","387","388"]],["Armenia",["asia","ex-ussr"],"am","374",".. ......"],["Aruba",["america","carribean"],"aw","297"],["Australia",["oceania"],"au","61","(..) .... ....",0,["2","3","4","7","8","02","03","04","07","08"]],["Austria",["europe","eu-union"],"at","43"],["Azerbaijan",["asia","ex-ussr"],"az","994","(..) ... .. .."],["Bahamas",["america","carribean"],"bs","1242"],["Bahrain",["middle-east"],"bh","973"],["Bangladesh",["asia"],"bd","880"],["Barbados",["america","carribean"],"bb","1246"],["Belarus",["europe","ex-ussr"],"by","375","(..) ... .. .."],["Belgium",["europe","eu-union"],"be","32","... .. .. .."],["Belize",["america","central-america"],"bz","501"],["Benin",["africa"],"bj","229"],["Bhutan",["asia"],"bt","975"],["Bolivia",["america","south-america"],"bo","591"],["Bosnia and Herzegovina",["europe","ex-yugos"],"ba","387"],["Botswana",["africa"],"bw","267"],["Brazil",["america","south-america"],"br","55","(..) ........."],["British Indian Ocean Territory",["asia"],"io","246"],["Brunei",["asia"],"bn","673"],["Bulgaria",["europe","eu-union"],"bg","359"],["Burkina Faso",["africa"],"bf","226"],["Burundi",["africa"],"bi","257"],["Cambodia",["asia"],"kh","855"],["Cameroon",["africa"],"cm","237"],["Canada",["america","north-america"],"ca","1","(...) ...-....",1,["204","226","236","249","250","289","306","343","365","387","403","416","418","431","437","438","450","506","514","519","548","579","581","587","604","613","639","647","672","705","709","742","778","780","782","807","819","825","867","873","902","905"]],["Cape Verde",["africa"],"cv","238"],["Caribbean Netherlands",["america","carribean"],"bq","599","",1],["Central African Republic",["africa"],"cf","236"],["Chad",["africa"],"td","235"],["Chile",["america","south-america"],"cl","56"],["China",["asia"],"cn","86","..-........."],["Colombia",["america","south-america"],"co","57","... ... ...."],["Comoros",["africa"],"km","269"],["Congo",["africa"],"cd","243"],["Congo",["africa"],"cg","242"],["Costa Rica",["america","central-america"],"cr","506","....-...."],["C\xf4te d’Ivoire",["africa"],"ci","225",".. .. .. .."],["Croatia",["europe","eu-union","ex-yugos"],"hr","385"],["Cuba",["america","carribean"],"cu","53"],["Cura\xe7ao",["america","carribean"],"cw","599","",0],["Cyprus",["europe","eu-union"],"cy","357",".. ......"],["Czech Republic",["europe","eu-union"],"cz","420","... ... ..."],["Denmark",["europe","eu-union","baltic"],"dk","45",".. .. .. .."],["Djibouti",["africa"],"dj","253"],["Dominica",["america","carribean"],"dm","1767"],["Dominican Republic",["america","carribean"],"do","1","",2,["809","829","849"]],["Ecuador",["america","south-america"],"ec","593"],["Egypt",["africa","north-africa"],"eg","20"],["El Salvador",["america","central-america"],"sv","503","....-...."],["Equatorial Guinea",["africa"],"gq","240"],["Eritrea",["africa"],"er","291"],["Estonia",["europe","eu-union","ex-ussr","baltic"],"ee","372",".... ......"],["Ethiopia",["africa"],"et","251"],["Fiji",["oceania"],"fj","679"],["Finland",["europe","eu-union","baltic"],"fi","358",".. ... .. .."],["France",["europe","eu-union"],"fr","33",". .. .. .. .."],["French Guiana",["america","south-america"],"gf","594"],["French Polynesia",["oceania"],"pf","689"],["Gabon",["africa"],"ga","241"],["Gambia",["africa"],"gm","220"],["Georgia",["asia","ex-ussr"],"ge","995"],["Germany",["europe","eu-union","baltic"],"de","49",".... ........"],["Ghana",["africa"],"gh","233"],["Greece",["europe","eu-union"],"gr","30"],["Grenada",["america","carribean"],"gd","1473"],["Guadeloupe",["america","carribean"],"gp","590","",0],["Guam",["oceania"],"gu","1671"],["Guatemala",["america","central-america"],"gt","502","....-...."],["Guinea",["africa"],"gn","224"],["Guinea-Bissau",["africa"],"gw","245"],["Guyana",["america","south-america"],"gy","592"],["Haiti",["america","carribean"],"ht","509","....-...."],["Honduras",["america","central-america"],"hn","504"],["Hong Kong",["asia"],"hk","852",".... ...."],["Hungary",["europe","eu-union"],"hu","36"],["Iceland",["europe"],"is","354","... ...."],["India",["asia"],"in","91",".....-....."],["Indonesia",["asia"],"id","62"],["Iran",["middle-east"],"ir","98","... ... ...."],["Iraq",["middle-east"],"iq","964"],["Ireland",["europe","eu-union"],"ie","353",".. ......."],["Israel",["middle-east"],"il","972","... ... ...."],["Italy",["europe","eu-union"],"it","39","... .......",0],["Jamaica",["america","carribean"],"jm","1876"],["Japan",["asia"],"jp","81",".. .... ...."],["Jordan",["middle-east"],"jo","962"],["Kazakhstan",["asia","ex-ussr"],"kz","7","... ...-..-..",1,["310","311","312","313","315","318","321","324","325","326","327","336","7172","73622"]],["Kenya",["africa"],"ke","254"],["Kiribati",["oceania"],"ki","686"],["Kosovo",["europe","ex-yugos"],"xk","383"],["Kuwait",["middle-east"],"kw","965"],["Kyrgyzstan",["asia","ex-ussr"],"kg","996","... ... ..."],["Laos",["asia"],"la","856"],["Latvia",["europe","eu-union","ex-ussr","baltic"],"lv","371",".. ... ..."],["Lebanon",["middle-east"],"lb","961"],["Lesotho",["africa"],"ls","266"],["Liberia",["africa"],"lr","231"],["Libya",["africa","north-africa"],"ly","218"],["Liechtenstein",["europe"],"li","423"],["Lithuania",["europe","eu-union","ex-ussr","baltic"],"lt","370"],["Luxembourg",["europe","eu-union"],"lu","352"],["Macau",["asia"],"mo","853"],["Macedonia",["europe","ex-yugos"],"mk","389"],["Madagascar",["africa"],"mg","261"],["Malawi",["africa"],"mw","265"],["Malaysia",["asia"],"my","60","..-....-...."],["Maldives",["asia"],"mv","960"],["Mali",["africa"],"ml","223"],["Malta",["europe","eu-union"],"mt","356"],["Marshall Islands",["oceania"],"mh","692"],["Martinique",["america","carribean"],"mq","596"],["Mauritania",["africa"],"mr","222"],["Mauritius",["africa"],"mu","230"],["Mexico",["america","central-america"],"mx","52","... ... ....",0,["55","81","33","656","664","998","774","229"]],["Micronesia",["oceania"],"fm","691"],["Moldova",["europe"],"md","373","(..) ..-..-.."],["Monaco",["europe"],"mc","377"],["Mongolia",["asia"],"mn","976"],["Montenegro",["europe","ex-yugos"],"me","382"],["Morocco",["africa","north-africa"],"ma","212"],["Mozambique",["africa"],"mz","258"],["Myanmar",["asia"],"mm","95"],["Namibia",["africa"],"na","264"],["Nauru",["africa"],"nr","674"],["Nepal",["asia"],"np","977"],["Netherlands",["europe","eu-union"],"nl","31",".. ........"],["New Caledonia",["oceania"],"nc","687"],["New Zealand",["oceania"],"nz","64","...-...-...."],["Nicaragua",["america","central-america"],"ni","505"],["Niger",["africa"],"ne","227"],["Nigeria",["africa"],"ng","234"],["North Korea",["asia"],"kp","850"],["Norway",["europe","baltic"],"no","47","... .. ..."],["Oman",["middle-east"],"om","968"],["Pakistan",["asia"],"pk","92","...-......."],["Palau",["oceania"],"pw","680"],["Palestine",["middle-east"],"ps","970"],["Panama",["america","central-america"],"pa","507"],["Papua New Guinea",["oceania"],"pg","675"],["Paraguay",["america","south-america"],"py","595"],["Peru",["america","south-america"],"pe","51"],["Philippines",["asia"],"ph","63",".... ......."],["Poland",["europe","eu-union","baltic"],"pl","48","...-...-..."],["Portugal",["europe","eu-union"],"pt","351"],["Puerto Rico",["america","carribean"],"pr","1","",3,["787","939"]],["Qatar",["middle-east"],"qa","974"],["R\xe9union",["africa"],"re","262"],["Romania",["europe","eu-union"],"ro","40"],["Russia",["europe","asia","ex-ussr","baltic"],"ru","7","(...) ...-..-..",0],["Rwanda",["africa"],"rw","250"],["Saint Kitts and Nevis",["america","carribean"],"kn","1869"],["Saint Lucia",["america","carribean"],"lc","1758"],["Saint Vincent and the Grenadines",["america","carribean"],"vc","1784"],["Samoa",["oceania"],"ws","685"],["San Marino",["europe"],"sm","378"],["S\xe3o Tom\xe9 and Pr\xedncipe",["africa"],"st","239"],["Saudi Arabia",["middle-east"],"sa","966"],["Senegal",["africa"],"sn","221"],["Serbia",["europe","ex-yugos"],"rs","381"],["Seychelles",["africa"],"sc","248"],["Sierra Leone",["africa"],"sl","232"],["Singapore",["asia"],"sg","65","....-...."],["Slovakia",["europe","eu-union"],"sk","421"],["Slovenia",["europe","eu-union","ex-yugos"],"si","386"],["Solomon Islands",["oceania"],"sb","677"],["Somalia",["africa"],"so","252"],["South Africa",["africa"],"za","27"],["South Korea",["asia"],"kr","82","... .... ...."],["South Sudan",["africa","north-africa"],"ss","211"],["Spain",["europe","eu-union"],"es","34","... ... ..."],["Sri Lanka",["asia"],"lk","94"],["Sudan",["africa"],"sd","249"],["Suriname",["america","south-america"],"sr","597"],["Swaziland",["africa"],"sz","268"],["Sweden",["europe","eu-union","baltic"],"se","46","(...) ...-..."],["Switzerland",["europe"],"ch","41",".. ... .. .."],["Syria",["middle-east"],"sy","963"],["Taiwan",["asia"],"tw","886"],["Tajikistan",["asia","ex-ussr"],"tj","992"],["Tanzania",["africa"],"tz","255"],["Thailand",["asia"],"th","66"],["Timor-Leste",["asia"],"tl","670"],["Togo",["africa"],"tg","228"],["Tonga",["oceania"],"to","676"],["Trinidad and Tobago",["america","carribean"],"tt","1868"],["Tunisia",["africa","north-africa"],"tn","216"],["Turkey",["europe"],"tr","90","... ... .. .."],["Turkmenistan",["asia","ex-ussr"],"tm","993"],["Tuvalu",["asia"],"tv","688"],["Uganda",["africa"],"ug","256"],["Ukraine",["europe","ex-ussr"],"ua","380","(..) ... .. .."],["United Arab Emirates",["middle-east"],"ae","971"],["United Kingdom",["europe","eu-union"],"gb","44",".... ......"],["United States",["america","north-america"],"us","1","(...) ...-....",0,["907","205","251","256","334","479","501","870","480","520","602","623","928","209","213","310","323","408","415","510","530","559","562","619","626","650","661","707","714","760","805","818","831","858","909","916","925","949","951","303","719","970","203","860","202","302","239","305","321","352","386","407","561","727","772","813","850","863","904","941","954","229","404","478","706","770","912","808","319","515","563","641","712","208","217","309","312","618","630","708","773","815","847","219","260","317","574","765","812","316","620","785","913","270","502","606","859","225","318","337","504","985","413","508","617","781","978","301","410","207","231","248","269","313","517","586","616","734","810","906","989","218","320","507","612","651","763","952","314","417","573","636","660","816","228","601","662","406","252","336","704","828","910","919","701","308","402","603","201","609","732","856","908","973","505","575","702","775","212","315","516","518","585","607","631","716","718","845","914","216","330","419","440","513","614","740","937","405","580","918","503","541","215","412","570","610","717","724","814","401","803","843","864","605","423","615","731","865","901","931","210","214","254","281","325","361","409","432","512","713","806","817","830","903","915","936","940","956","972","979","435","801","276","434","540","703","757","804","802","206","253","360","425","509","262","414","608","715","920","304","307"]],["Uruguay",["america","south-america"],"uy","598"],["Uzbekistan",["asia","ex-ussr"],"uz","998",".. ... .. .."],["Vanuatu",["oceania"],"vu","678"],["Vatican City",["europe"],"va","39",".. .... ....",1],["Venezuela",["america","south-america"],"ve","58"],["Vietnam",["asia"],"vn","84"],["Yemen",["middle-east"],"ye","967"],["Zambia",["africa"],"zm","260"],["Zimbabwe",["africa"],"zw","263"]],L=[["American Samoa",["oceania"],"as","1684"],["Anguilla",["america","carribean"],"ai","1264"],["Bermuda",["america","north-america"],"bm","1441"],["British Virgin Islands",["america","carribean"],"vg","1284"],["Cayman Islands",["america","carribean"],"ky","1345"],["Cook Islands",["oceania"],"ck","682"],["Falkland Islands",["america","south-america"],"fk","500"],["Faroe Islands",["europe"],"fo","298"],["Gibraltar",["europe"],"gi","350"],["Greenland",["america"],"gl","299"],["Jersey",["europe","eu-union"],"je","44",".... ......"],["Montserrat",["america","carribean"],"ms","1664"],["Niue",["asia"],"nu","683"],["Norfolk Island",["oceania"],"nf","672"],["Northern Mariana Islands",["oceania"],"mp","1670"],["Saint Barth\xe9lemy",["america","carribean"],"bl","590","",1],["Saint Helena",["africa"],"sh","290"],["Saint Martin",["america","carribean"],"mf","590","",2],["Saint Pierre and Miquelon",["america","north-america"],"pm","508"],["Sint Maarten",["america","carribean"],"sx","1721"],["Tokelau",["oceania"],"tk","690"],["Turks and Caicos Islands",["america","carribean"],"tc","1649"],["U.S. Virgin Islands",["america","carribean"],"vi","1340"],["Wallis and Futuna",["oceania"],"wf","681"]];function P(a,e,n,t,o){var u,s,l=[];return s=!0===e,[(u=[]).concat.apply(u,i(a.map(function(a){var i,u,d={name:a[0],regions:a[1],iso2:a[2],countryCode:a[3],dialCode:a[3],format:(i=a[3],(u=a[4])&&!o?n+"".padEnd(i.length,".")+" "+u:n+"".padEnd(i.length,".")+" "+t),priority:a[5]||0},c=[];return a[6]&&a[6].map(function(e){var n=function(a){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},t=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(n).filter(function(a){return Object.getOwnPropertyDescriptor(n,a).enumerable}))),t.forEach(function(e){r(a,e,n[e])})}return a}({},d);n.dialCode=a[3]+e,n.isAreaCode=!0,n.areaCodeLength=e.length,c.push(n)}),c.length>0?(d.mainCode=!0,s||"Array"===e.constructor.name&&e.includes(a[2])?(d.hasAreaCodes=!0,[d].concat(c)):(l=l.concat(c),[d])):[d]}))),l]}function K(a,e,n,r){if(null!==n){var t=Object.keys(n),i=Object.values(n);t.forEach(function(n,t){if(r)return a.push([n,i[t]]);var o=a.findIndex(function(a){return a[0]===n});if(-1===o){var u=[n];u[e]=i[t],a.push(u)}else a[o][e]=i[t]})}}function O(a,e){return 0===e.length?a:a.map(function(a){var n=e.findIndex(function(e){return e[0]===a[2]});if(-1===n)return a;var r=e[n];return r[1]&&(a[4]=r[1]),r[3]&&(a[5]=r[3]),r[2]&&(a[6]=r[2]),a})}var D=function a(e,n,r,t,o,u,l,d,c,h,f,m,g,p){s(this,a),this.filterRegions=function(a,e){return"string"==typeof a?e.filter(function(e){return e.regions.some(function(e){return e===a})}):e.filter(function(e){return a.map(function(a){return e.regions.some(function(e){return e===a})}).some(function(a){return a})})},this.sortTerritories=function(a,e){var n=[].concat(i(a),i(e));return n.sort(function(a,e){return a.name<e.name?-1:a.name>e.name?1:0}),n},this.getFilteredCountryList=function(a,e,n){return 0===a.length?e:n?a.map(function(a){var n=e.find(function(e){return e.iso2===a});if(n)return n}).filter(function(a){return a}):e.filter(function(e){return a.some(function(a){return a===e.iso2})})},this.localizeCountries=function(a,e,n){for(var r=0;r<a.length;r++)void 0!==e[a[r].iso2]?a[r].localName=e[a[r].iso2]:void 0!==e[a[r].name]&&(a[r].localName=e[a[r].name]);return n||a.sort(function(a,e){return a.localName<e.localName?-1:a.localName>e.localName?1:0}),a},this.getCustomAreas=function(a,e){for(var n=[],r=0;r<e.length;r++){var t=JSON.parse(JSON.stringify(a));t.dialCode+=e[r],n.push(t)}return n},this.excludeCountries=function(a,e){return 0===e.length?a:a.filter(function(a){return!e.includes(a.iso2)})};var S,b=(K(S=[],1,d,!0),K(S,3,c),K(S,2,h),S),y=O(JSON.parse(JSON.stringify(x)),b),A=O(JSON.parse(JSON.stringify(L)),b),C=T(P(y,e,m,g,p),2),v=C[0],k=C[1];if(n){var M=T(P(A,e,m,g,p),2),B=M[0];M[1],v=this.sortTerritories(B,v)}r&&(v=this.filterRegions(r,v)),this.onlyCountries=this.localizeCountries(this.excludeCountries(this.getFilteredCountryList(t,v,l.includes("onlyCountries")),u),f,l.includes("onlyCountries")),this.preferredCountries=0===o.length?[]:this.localizeCountries(this.getFilteredCountryList(o,v,l.includes("preferredCountries")),f,l.includes("preferredCountries")),this.hiddenAreaCodes=this.excludeCountries(this.getFilteredCountryList(t,k),u)},R=function(a){var e,n;function d(a){s(this,d),(n=(e=f(d).call(this,a))&&("object"===c(e)||"function"==typeof e)?e:h(this)).getProbableCandidate=A()(function(a){return a&&0!==a.length?n.state.onlyCountries.filter(function(e){return M()(e.name.toLowerCase(),a.toLowerCase())},h(h(n)))[0]:null}),n.guessSelectedCountry=A()(function(a,e,r,t){if(!1===n.props.enableAreaCodes&&(t.some(function(e){if(M()(a,e.dialCode))return r.some(function(a){if(e.iso2===a.iso2&&a.mainCode)return i=a,!0}),!0}),i))return i;var i,o=r.find(function(a){return a.iso2==e});if(""===a.trim())return o;var u=r.reduce(function(e,n){return M()(a,n.dialCode)&&(n.dialCode.length>e.dialCode.length||n.dialCode.length===e.dialCode.length&&n.priority<e.priority)?n:e},{dialCode:"",priority:10001},h(h(n)));return u.name?u:o}),n.updateCountry=function(a){var e,r=n.state.onlyCountries;(e=a.indexOf(0)>="0"&&"9">=a.indexOf(0)?r.find(function(e){return e.dialCode==+a}):r.find(function(e){return e.iso2==a}))&&e.dialCode&&n.setState({selectedCountry:e,formattedNumber:n.props.disableCountryCode?"":n.formatNumber(e.dialCode,e)})},n.scrollTo=function(a,e){if(a){var r=n.dropdownRef;if(r&&document.body){var t=r.offsetHeight,i=r.getBoundingClientRect().top+document.body.scrollTop,o=a.getBoundingClientRect(),u=a.offsetHeight,s=o.top+document.body.scrollTop,l=s-i+r.scrollTop,d=t/2-u/2;(n.props.enableSearch?s<i+32:s<i)?(e&&(l-=d),r.scrollTop=l):s+u>i+t&&(e&&(l+=d),r.scrollTop=l-(t-u))}}},n.scrollToTop=function(){var a=n.dropdownRef;a&&document.body&&(a.scrollTop=0)},n.formatNumber=function(a,e){if(!e)return a;var r,i=e.format,s=n.props,l=s.disableCountryCode,d=s.enableAreaCodeStretch,c=s.enableLongNumbers,h=s.autoFormat;if(l?((r=i.split(" ")).shift(),r=r.join(" ")):d&&e.isAreaCode?((r=i.split(" "))[1]=r[1].replace(/\.+/,"".padEnd(e.areaCodeLength,".")),r=r.join(" ")):r=i,!a||0===a.length)return l?"":n.props.prefix;if(a&&a.length<2||!r||!h)return l?a:n.props.prefix+a;var f,m=v()(r,function(a,e){if(0===a.remainingText.length)return a;if("."!==e)return{formattedText:a.formattedText+e,remainingText:a.remainingText};var n,r=o(n=a.remainingText)||t(n)||u(),i=r[0],s=r.slice(1);return{formattedText:a.formattedText+i,remainingText:s}},{formattedText:"",remainingText:a.split("")});return(f=c?m.formattedText+m.remainingText.join(""):m.formattedText).includes("(")&&!f.includes(")")&&(f+=")"),f},n.cursorToEnd=function(){var a=n.numberInputRef;if(document.activeElement===a){a.focus();var e=a.value.length;")"===a.value.charAt(e-1)&&(e-=1),a.setSelectionRange(e,e)}},n.getElement=function(a){return n["flag_no_".concat(a)]},n.getCountryData=function(){return n.state.selectedCountry?{name:n.state.selectedCountry.name||"",dialCode:n.state.selectedCountry.dialCode||"",countryCode:n.state.selectedCountry.iso2||"",format:n.state.selectedCountry.format||""}:{}},n.handleFlagDropdownClick=function(a){if(a.preventDefault(),n.state.showDropdown||!n.props.disabled){var e=n.state,r=e.preferredCountries,t=e.onlyCountries,i=e.selectedCountry,o=n.concatPreferredCountries(r,t).findIndex(function(a){return a.dialCode===i.dialCode&&a.iso2===i.iso2});n.setState({showDropdown:!n.state.showDropdown,highlightCountryIndex:o},function(){n.state.showDropdown&&n.scrollTo(n.getElement(n.state.highlightCountryIndex))})}},n.handleInput=function(a){var e=a.target.value,r=n.props,t=r.prefix,i=r.onChange,o=n.props.disableCountryCode?"":t,u=n.state.selectedCountry,s=n.state.freezeSelection;if(!n.props.countryCodeEditable){var l=t+(u.hasAreaCodes?n.state.onlyCountries.find(function(a){return a.iso2===u.iso2&&a.mainCode}).dialCode:u.dialCode);if(e.slice(0,l.length)!==l)return}if(e===t)return i&&i("",n.getCountryData(),a,""),n.setState({formattedNumber:""});if((!(e.replace(/\D/g,"").length>15)||!1!==n.props.enableLongNumbers&&("number"!=typeof n.props.enableLongNumbers||!(e.replace(/\D/g,"").length>n.props.enableLongNumbers)))&&e!==n.state.formattedNumber){a.preventDefault?a.preventDefault():a.returnValue=!1;var d=n.props.country,c=n.state,h=c.onlyCountries,f=c.selectedCountry,m=c.hiddenAreaCodes;if(i&&a.persist(),e.length>0){var g=e.replace(/\D/g,"");(!n.state.freezeSelection||f&&f.dialCode.length>g.length)&&(u=n.props.disableCountryGuess?f:n.guessSelectedCountry(g.substring(0,6),d,h,m)||f,s=!1),o=n.formatNumber(g,u),u=u.dialCode?u:f}var p=a.target.selectionStart,S=a.target.selectionStart,b=n.state.formattedNumber,y=o.length-b.length;n.setState({formattedNumber:o,freezeSelection:s,selectedCountry:u},function(){y>0&&(S-=y),")"==o.charAt(o.length-1)?n.numberInputRef.setSelectionRange(o.length-1,o.length-1):S>0&&b.length>=o.length?n.numberInputRef.setSelectionRange(S,S):p<b.length&&n.numberInputRef.setSelectionRange(p,p),i&&i(o.replace(/[^0-9]+/g,""),n.getCountryData(),a,o)})}},n.handleInputClick=function(a){n.setState({showDropdown:!1}),n.props.onClick&&n.props.onClick(a,n.getCountryData())},n.handleDoubleClick=function(a){var e=a.target.value.length;a.target.setSelectionRange(0,e)},n.handleFlagItemClick=function(a,e){var r=n.state.selectedCountry,t=n.state.onlyCountries.find(function(e){return e==a});if(t){var i=n.state.formattedNumber.replace(" ","").replace("(","").replace(")","").replace("-",""),o=i.length>1?i.replace(r.dialCode,t.dialCode):t.dialCode,u=n.formatNumber(o.replace(/\D/g,""),t);n.setState({showDropdown:!1,selectedCountry:t,freezeSelection:!0,formattedNumber:u,searchValue:""},function(){n.cursorToEnd(),n.props.onChange&&n.props.onChange(u.replace(/[^0-9]+/g,""),n.getCountryData(),e,u)})}},n.handleInputFocus=function(a){n.numberInputRef&&n.numberInputRef.value===n.props.prefix&&n.state.selectedCountry&&!n.props.disableCountryCode&&n.setState({formattedNumber:n.props.prefix+n.state.selectedCountry.dialCode},function(){n.props.jumpCursorToEnd&&setTimeout(n.cursorToEnd,0)}),n.setState({placeholder:""}),n.props.onFocus&&n.props.onFocus(a,n.getCountryData()),n.props.jumpCursorToEnd&&setTimeout(n.cursorToEnd,0)},n.handleInputBlur=function(a){a.target.value||n.setState({placeholder:n.props.placeholder}),n.props.onBlur&&n.props.onBlur(a,n.getCountryData())},n.handleInputCopy=function(a){if(n.props.copyNumbersOnly){var e=window.getSelection().toString().replace(/[^0-9]+/g,"");a.clipboardData.setData("text/plain",e),a.preventDefault()}},n.getHighlightCountryIndex=function(a){var e=n.state.highlightCountryIndex+a;return e<0||e>=n.state.onlyCountries.length+n.state.preferredCountries.length?e-a:n.props.enableSearch&&e>n.getSearchFilteredCountries().length?0:e},n.searchCountry=function(){var a=n.getProbableCandidate(n.state.queryString)||n.state.onlyCountries[0],e=n.state.onlyCountries.findIndex(function(e){return e==a})+n.state.preferredCountries.length;n.scrollTo(n.getElement(e),!0),n.setState({queryString:"",highlightCountryIndex:e})},n.handleKeydown=function(a){var e=n.props.keys,r=a.target.className;if(r.includes("selected-flag")&&a.which===e.ENTER&&!n.state.showDropdown)return n.handleFlagDropdownClick(a);if(r.includes("form-control")&&(a.which===e.ENTER||a.which===e.ESC))return a.target.blur();if(n.state.showDropdown&&!n.props.disabled&&(!r.includes("search-box")||a.which===e.UP||a.which===e.DOWN||a.which===e.ENTER||a.which===e.ESC&&""===a.target.value)){a.preventDefault?a.preventDefault():a.returnValue=!1;var t=function(a){n.setState({highlightCountryIndex:n.getHighlightCountryIndex(a)},function(){n.scrollTo(n.getElement(n.state.highlightCountryIndex),!0)})};switch(a.which){case e.DOWN:t(1);break;case e.UP:t(-1);break;case e.ENTER:n.props.enableSearch?n.handleFlagItemClick(n.getSearchFilteredCountries()[n.state.highlightCountryIndex]||n.getSearchFilteredCountries()[0],a):n.handleFlagItemClick([].concat(i(n.state.preferredCountries),i(n.state.onlyCountries))[n.state.highlightCountryIndex],a);break;case e.ESC:case e.TAB:n.setState({showDropdown:!1},n.cursorToEnd);break;default:(a.which>=e.A&&a.which<=e.Z||a.which===e.SPACE)&&n.setState({queryString:n.state.queryString+String.fromCharCode(a.which)},n.state.debouncedQueryStingSearcher)}}},n.handleInputKeyDown=function(a){var e=n.props,r=e.keys,t=e.onEnterKeyPress,i=e.onKeyDown;a.which===r.ENTER&&t&&t(a),i&&i(a)},n.handleClickOutside=function(a){n.dropdownRef&&!n.dropdownContainerRef.contains(a.target)&&n.state.showDropdown&&n.setState({showDropdown:!1})},n.handleSearchChange=function(a){var e=a.currentTarget.value,r=n.state,t=r.preferredCountries,i=r.selectedCountry,o=0;if(""===e&&i){var u=n.state.onlyCountries;o=n.concatPreferredCountries(t,u).findIndex(function(a){return a==i}),setTimeout(function(){return n.scrollTo(n.getElement(o))},100)}n.setState({searchValue:e,highlightCountryIndex:o})},n.concatPreferredCountries=function(a,e){return a.length>0?i(new Set(a.concat(e))):e},n.getDropdownCountryName=function(a){return a.localName||a.name},n.getSearchFilteredCountries=function(){var a=n.state,e=a.preferredCountries,r=a.onlyCountries,t=a.searchValue,o=n.props.enableSearch,u=n.concatPreferredCountries(e,r),s=t.trim().toLowerCase().replace("+","");if(o&&s){if(/^\d+$/.test(s))return u.filter(function(a){var e=a.dialCode;return["".concat(e)].some(function(a){return a.toLowerCase().includes(s)})});var l=u.filter(function(a){var e=a.iso2;return["".concat(e)].some(function(a){return a.toLowerCase().includes(s)})}),d=u.filter(function(a){var e=a.name,n=a.localName;return a.iso2,["".concat(e),"".concat(n||"")].some(function(a){return a.toLowerCase().includes(s)})});return n.scrollToTop(),i(new Set([].concat(l,d)))}return u},n.getCountryDropdownList=function(){var a=n.state,e=a.preferredCountries,t=a.highlightCountryIndex,i=a.showDropdown,o=a.searchValue,u=n.props,s=u.disableDropdown,l=u.prefix,d=n.props,c=d.enableSearch,h=d.searchNotFound,f=d.disableSearchIcon,m=d.searchClass,g=d.searchStyle,S=d.searchPlaceholder,b=d.autocompleteSearch,y=n.getSearchFilteredCountries().map(function(a,e){var r=t===e,i=N()({country:!0,preferred:"us"===a.iso2||"gb"===a.iso2,active:"us"===a.iso2,highlight:r}),o="flag ".concat(a.iso2);return p.a.createElement("li",Object.assign({ref:function(a){return n["flag_no_".concat(e)]=a},key:"flag_no_".concat(e),"data-flag-key":"flag_no_".concat(e),className:i,"data-dial-code":"1",tabIndex:s?"-1":"0","data-country-code":a.iso2,onClick:function(e){return n.handleFlagItemClick(a,e)},role:"option"},r?{"aria-selected":!0}:{}),p.a.createElement("div",{className:o}),p.a.createElement("span",{className:"country-name"},n.getDropdownCountryName(a)),p.a.createElement("span",{className:"dial-code"},a.format?n.formatNumber(a.dialCode,a):l+a.dialCode))}),A=p.a.createElement("li",{key:"dashes",className:"divider"});e.length>0&&(!c||c&&!o.trim())&&y.splice(e.length,0,A);var C=N()(r({"country-list":!0,hide:!i},n.props.dropdownClass,!0));return p.a.createElement("ul",{ref:function(a){return!c&&a&&a.focus(),n.dropdownRef=a},className:C,style:n.props.dropdownStyle,role:"listbox",tabIndex:"0"},c&&p.a.createElement("li",{className:N()(r({search:!0},m,m))},!f&&p.a.createElement("span",{className:N()(r({"search-emoji":!0},"".concat(m,"-emoji"),m)),role:"img","aria-label":"Magnifying glass"},"\uD83D\uDD0E"),p.a.createElement("input",{className:N()(r({"search-box":!0},"".concat(m,"-box"),m)),style:g,type:"search",placeholder:S,autoFocus:!0,autoComplete:b?"on":"off",value:o,onChange:n.handleSearchChange})),y.length>0?y:p.a.createElement("li",{className:"no-entries-message"},p.a.createElement("span",null,h)))};var e,n,l,m=new D(a.enableAreaCodes,a.enableTerritories,a.regions,a.onlyCountries,a.preferredCountries,a.excludeCountries,a.preserveOrder,a.masks,a.priority,a.areaCodes,a.localization,a.prefix,a.defaultMask,a.alwaysDefaultMask),g=m.onlyCountries,S=m.preferredCountries,y=m.hiddenAreaCodes,C=a.value?a.value.replace(/\D/g,""):"";l=a.disableInitialCountryGuess?0:C.length>1?n.guessSelectedCountry(C.substring(0,6),a.country,g,y)||0:a.country&&g.find(function(e){return e.iso2==a.country})||0;var k,B=C.length<2&&l&&!M()(C,l.dialCode)?l.dialCode:"";k=""===C&&0===l?"":n.formatNumber((a.disableCountryCode?"":B)+C,l.name?l:void 0);var T=g.findIndex(function(a){return a==l});return n.state={showDropdown:a.showDropdown,formattedNumber:k,onlyCountries:g,preferredCountries:S,hiddenAreaCodes:y,selectedCountry:l,highlightCountryIndex:T,queryString:"",freezeSelection:!1,debouncedQueryStingSearcher:b()(n.searchCountry,250),searchValue:""},n}return function(a,e){if("function"!=typeof e&&null!==e)throw TypeError("Super expression must either be null or a function");a.prototype=Object.create(e&&e.prototype,{constructor:{value:a,writable:!0,configurable:!0}}),e&&m(a,e)}(d,a),e=[{key:"componentDidMount",value:function(){document.addEventListener&&this.props.enableClickOutside&&document.addEventListener("mousedown",this.handleClickOutside),this.props.onMount&&this.props.onMount(this.state.formattedNumber.replace(/[^0-9]+/g,""),this.getCountryData(),this.state.formattedNumber)}},{key:"componentWillUnmount",value:function(){document.removeEventListener&&this.props.enableClickOutside&&document.removeEventListener("mousedown",this.handleClickOutside)}},{key:"componentDidUpdate",value:function(a,e,n){a.country!==this.props.country?this.updateCountry(this.props.country):a.value!==this.props.value&&this.updateFormattedNumber(this.props.value)}},{key:"updateFormattedNumber",value:function(a){if(null===a)return this.setState({selectedCountry:0,formattedNumber:""});var e=this.state,n=e.onlyCountries,r=e.selectedCountry,t=e.hiddenAreaCodes,i=this.props,o=i.country,u=i.prefix;if(""===a)return this.setState({selectedCountry:r,formattedNumber:""});var s,l,d=a.replace(/\D/g,"");if(r&&M()(a,u+r.dialCode))l=this.formatNumber(d,r),this.setState({formattedNumber:l});else{var c=(s=this.props.disableCountryGuess?r:this.guessSelectedCountry(d.substring(0,6),o,n,t)||r)&&M()(d,u+s.dialCode)?s.dialCode:"";l=this.formatNumber((this.props.disableCountryCode?"":c)+d,s||void 0),this.setState({selectedCountry:s,formattedNumber:l})}}},{key:"render",value:function(){var a,e,n,t=this,i=this.state,o=i.onlyCountries,u=i.selectedCountry,s=i.showDropdown,l=i.formattedNumber,d=i.hiddenAreaCodes,c=this.props,h=c.disableDropdown,f=c.renderStringAsFlag,m=c.isValid,g=c.defaultErrorMessage,S=c.specialLabel;if("boolean"==typeof m)e=m;else{var b=m(l.replace(/\D/g,""),u,o,d);"boolean"==typeof b?!1===(e=b)&&(n=g):(e=!1,n=b)}var y=N()((r(a={},this.props.containerClass,!0),r(a,"react-tel-input",!0),a)),A=N()({arrow:!0,up:s}),C=N()(r({"form-control":!0,"invalid-number":!e,open:s},this.props.inputClass,!0)),v=N()({"selected-flag":!0,open:s}),k=N()(r({"flag-dropdown":!0,"invalid-number":!e,open:s},this.props.buttonClass,!0)),M="flag ".concat(u&&u.iso2);return p.a.createElement("div",{className:"".concat(y," ").concat(this.props.className),style:this.props.style||this.props.containerStyle,onKeyDown:this.handleKeydown},S&&p.a.createElement("div",{className:"special-label"},S),n&&p.a.createElement("div",{className:"invalid-number-message"},n),p.a.createElement("input",Object.assign({className:C,style:this.props.inputStyle,onChange:this.handleInput,onClick:this.handleInputClick,onDoubleClick:this.handleDoubleClick,onFocus:this.handleInputFocus,onBlur:this.handleInputBlur,onCopy:this.handleInputCopy,value:l,onKeyDown:this.handleInputKeyDown,placeholder:this.props.placeholder,disabled:this.props.disabled,type:"tel"},this.props.inputProps,{ref:function(a){t.numberInputRef=a,"function"==typeof t.props.inputProps.ref?t.props.inputProps.ref(a):"object"==typeof t.props.inputProps.ref&&(t.props.inputProps.ref.current=a)}})),p.a.createElement("div",{className:k,style:this.props.buttonStyle,ref:function(a){return t.dropdownContainerRef=a}},f?p.a.createElement("div",{className:v},f):p.a.createElement("div",{onClick:h?void 0:this.handleFlagDropdownClick,className:v,title:u?"".concat(u.localName||u.name,": + ").concat(u.dialCode):"",tabIndex:h?"-1":"0",role:"button","aria-haspopup":"listbox","aria-expanded":!!s||void 0},p.a.createElement("div",{className:M},!h&&p.a.createElement("div",{className:A}))),s&&this.getCountryDropdownList()))}}],l(d.prototype,e),n&&l(d,n),d}(p.a.Component);R.defaultProps={country:"",value:"",onlyCountries:[],preferredCountries:[],excludeCountries:[],placeholder:"1 (702) 123-4567",searchPlaceholder:"search",searchNotFound:"No entries to show",flagsImagePath:"./flags.png",disabled:!1,containerStyle:{},inputStyle:{},buttonStyle:{},dropdownStyle:{},searchStyle:{},containerClass:"",inputClass:"",buttonClass:"",dropdownClass:"",searchClass:"",className:"",autoFormat:!0,enableAreaCodes:!1,enableTerritories:!1,disableCountryCode:!1,disableDropdown:!1,enableLongNumbers:!1,countryCodeEditable:!0,enableSearch:!1,disableSearchIcon:!1,disableInitialCountryGuess:!1,disableCountryGuess:!1,regions:"",inputProps:{},localization:{},masks:null,priority:null,areaCodes:null,preserveOrder:[],defaultMask:"... ... ... ... ..",alwaysDefaultMask:!1,prefix:"+",copyNumbersOnly:!0,renderStringAsFlag:"",autocompleteSearch:!1,jumpCursorToEnd:!0,enableAreaCodeStretch:!1,enableClickOutside:!0,showDropdown:!1,isValid:!0,defaultErrorMessage:"",specialLabel:"Phone",onEnterKeyPress:null,keys:{UP:38,DOWN:40,RIGHT:39,LEFT:37,ENTER:13,ESC:27,PLUS:43,A:65,Z:90,SPACE:32,TAB:9}},e.default=R}])},7536:function(a,e,n){"use strict";n.d(e,{Qr:function(){return K},cI:function(){return aA}});var r=n(7294),t=a=>"checkbox"===a.type,i=a=>a instanceof Date,o=a=>null==a;let u=a=>"object"==typeof a;var s=a=>!o(a)&&!Array.isArray(a)&&u(a)&&!i(a),l=a=>s(a)&&a.target?t(a.target)?a.target.checked:a.target.value:a,d=a=>a.substring(0,a.search(/\.\d+(\.|$)/))||a,c=(a,e)=>a.has(d(e)),h=a=>Array.isArray(a)?a.filter(Boolean):[],f=a=>void 0===a,m=(a,e,n)=>{if(!e||!s(a))return n;let r=h(e.split(/[,[\].]+?/)).reduce((a,e)=>o(a)?a:a[e],a);return f(r)||r===a?f(a[e])?n:a[e]:r};let g={BLUR:"blur",FOCUS_OUT:"focusout",CHANGE:"change"},p={onBlur:"onBlur",onChange:"onChange",onSubmit:"onSubmit",onTouched:"onTouched",all:"all"},S={max:"max",min:"min",maxLength:"maxLength",minLength:"minLength",pattern:"pattern",required:"required",validate:"validate"},b=r.createContext(null),y=()=>r.useContext(b);var A=(a,e,n,r=!0)=>{let t={defaultValues:e._defaultValues};for(let i in a)Object.defineProperty(t,i,{get(){let t=i;return e._proxyFormState[t]!==p.all&&(e._proxyFormState[t]=!r||p.all),n&&(n[t]=!0),a[t]}});return t},C=a=>s(a)&&!Object.keys(a).length,v=(a,e,n)=>{let{name:r,...t}=a;return C(t)||Object.keys(t).length>=Object.keys(e).length||Object.keys(t).find(a=>e[a]===(!n||p.all))},k=a=>Array.isArray(a)?a:[a],M=(a,e,n)=>n&&e?a===e:!a||!e||a===e||k(a).some(a=>a&&(a.startsWith(e)||e.startsWith(a)));function B(a){let e=r.useRef(a);e.current=a,r.useEffect(()=>{let n=!a.disabled&&e.current.subject.subscribe({next:e.current.callback});return()=>{n&&n.unsubscribe()}},[a.disabled])}var N=a=>"string"==typeof a,T=(a,e,n,r)=>N(a)?(r&&e.watch.add(a),m(n,a)):Array.isArray(a)?a.map(a=>(r&&e.watch.add(a),m(n,a))):(r&&(e.watchAll=!0),n),x=a=>{let e=a.constructor&&a.constructor.prototype;return s(e)&&e.hasOwnProperty("isPrototypeOf")},L="undefined"!=typeof window&&void 0!==window.HTMLElement&&"undefined"!=typeof document;function P(a){let e;let n=Array.isArray(a);if(a instanceof Date)e=new Date(a);else if(a instanceof Set)e=new Set(a);else if(!(!(L&&(a instanceof Blob||a instanceof FileList))&&(n||s(a))))return a;else if(e=n?[]:{},Array.isArray(a)||x(a))for(let r in a)e[r]=P(a[r]);else e=a;return e}let K=a=>a.render(function(a){let e=y(),{name:n,control:t=e.control,shouldUnregister:i}=a,o=c(t._names.array,n),u=function(a){let e=y(),{control:n=e.control,name:t,defaultValue:i,disabled:o,exact:u}=a||{},s=r.useRef(t);s.current=t,B({disabled:o,subject:n._subjects.watch,callback(a){if(M(s.current,a.name,u)){let e=T(s.current,n._names,a.values||n._formValues);d(f(e)?i:P(e))}}});let[l,d]=r.useState(f(i)?n._getWatch(t):i);return r.useEffect(()=>n._removeUnmounted()),l}({control:t,name:n,defaultValue:m(t._formValues,n,m(t._defaultValues,n,a.defaultValue)),exact:!0}),s=function(a){let e=y(),{control:n=e.control,disabled:t,name:i,exact:o}=a||{},[u,s]=r.useState(n._formState),l=r.useRef(!0),d=r.useRef({isDirty:!1,dirtyFields:!1,touchedFields:!1,isValidating:!1,isValid:!1,errors:!1}),c=r.useRef(i);return c.current=i,B({disabled:t,callback:r.useCallback(a=>l.current&&M(c.current,a.name,o)&&v(a,d.current)&&s({...n._formState,...a}),[n,o]),subject:n._subjects.state}),r.useEffect(()=>{l.current=!0;let a=n._proxyFormState.isDirty&&n._getDirty();return a!==n._formState.isDirty&&n._subjects.state.next({isDirty:a}),n._updateValid(),()=>{l.current=!1}},[n]),A(u,n,d.current,!1)}({control:t,name:n}),d=r.useRef(t.register(n,{...a.rules,value:u}));return r.useEffect(()=>{let a=(a,e)=>{let n=m(t._fields,a);n&&(n._f.mount=e)};return a(n,!0),()=>{let e=t._options.shouldUnregister||i;(o?e&&!t._stateFlags.action:e)?t.unregister(n):a(n,!1)}},[n,t,o,i]),{field:{name:n,value:u,onChange:r.useCallback(a=>d.current.onChange({target:{value:l(a),name:n},type:g.CHANGE}),[n]),onBlur:r.useCallback(()=>d.current.onBlur({target:{value:m(t._formValues,n),name:n},type:g.BLUR}),[n,t]),ref(a){let e=m(t._fields,n);e&&a&&(e._f.ref={focus:()=>a.focus(),select:()=>a.select(),setCustomValidity:e=>a.setCustomValidity(e),reportValidity:()=>a.reportValidity()})}},formState:s,fieldState:Object.defineProperties({},{invalid:{enumerable:!0,get:()=>!!m(s.errors,n)},isDirty:{enumerable:!0,get:()=>!!m(s.dirtyFields,n)},isTouched:{enumerable:!0,get:()=>!!m(s.touchedFields,n)},error:{enumerable:!0,get:()=>m(s.errors,n)}})}}(a));var O=(a,e,n,r,t)=>e?{...n[a],types:{...n[a]&&n[a].types?n[a].types:{},[r]:t||!0}}:{},D=a=>/^\w*$/.test(a),R=a=>h(a.replace(/["|']|\]/g,"").split(/\.|\[/));function I(a,e,n){let r=-1,t=D(e)?[e]:R(e),i=t.length,o=i-1;for(;++r<i;){let u=t[r],l=n;if(r!==o){let d=a[u];l=s(d)||Array.isArray(d)?d:isNaN(+t[r+1])?{}:[]}a[u]=l,a=a[u]}return a}let E=(a,e,n)=>{for(let r of n||Object.keys(a)){let t=m(a,r);if(t){let{_f:i,...o}=t;if(i&&e(i.name)){if(i.ref.focus){i.ref.focus();break}if(i.refs&&i.refs[0].focus){i.refs[0].focus();break}}else s(o)&&E(o,e)}}};var G=(a,e,n)=>!n&&(e.watchAll||e.watch.has(a)||[...e.watch].some(e=>a.startsWith(e)&&/^\.\w+/.test(a.slice(e.length)))),w=(a,e,n)=>{let r=h(m(a,n));return I(r,"root",e[n]),I(a,n,r),a},j=a=>"boolean"==typeof a,H=a=>"file"===a.type,V=a=>"function"==typeof a,_=a=>N(a)||r.isValidElement(a),F=a=>"radio"===a.type,U=a=>a instanceof RegExp;let z={value:!1,isValid:!1},W={value:!0,isValid:!0};var J=a=>{if(Array.isArray(a)){if(a.length>1){let e=a.filter(a=>a&&a.checked&&!a.disabled).map(a=>a.value);return{value:e,isValid:!!e.length}}return a[0].checked&&!a[0].disabled?a[0].attributes&&!f(a[0].attributes.value)?f(a[0].value)||""===a[0].value?W:{value:a[0].value,isValid:!0}:W:z}return z};let Y={isValid:!1,value:null};var Z=a=>Array.isArray(a)?a.reduce((a,e)=>e&&e.checked&&!e.disabled?{isValid:!0,value:e.value}:a,Y):Y;function q(a,e,n="validate"){if(_(a)||Array.isArray(a)&&a.every(_)||j(a)&&!a)return{type:n,message:_(a)?a:"",ref:e}}var Q=a=>s(a)&&!U(a)?a:{value:a,message:""},X=async(a,e,n,r,i)=>{let{ref:u,refs:l,required:d,maxLength:c,minLength:h,min:f,max:m,pattern:g,validate:p,name:b,valueAsNumber:y,mount:A,disabled:v}=a._f;if(!A||v)return{};let k=l?l[0]:u,M=a=>{r&&k.reportValidity&&(k.setCustomValidity(j(a)?"":a||""),k.reportValidity())},B={},T=F(u),x=t(u),L=(y||H(u))&&!u.value||""===e||Array.isArray(e)&&!e.length,P=O.bind(null,b,n,B),K=(a,e,n,r=S.maxLength,t=S.minLength)=>{let i=a?e:n;B[b]={type:a?r:t,message:i,ref:u,...P(a?r:t,i)}};if(i?!Array.isArray(e)||!e.length:d&&(!(T||x)&&(L||o(e))||j(e)&&!e||x&&!J(l).isValid||T&&!Z(l).isValid)){let{value:D,message:R}=_(d)?{value:!!d,message:d}:Q(d);if(D&&(B[b]={type:S.required,message:R,ref:k,...P(S.required,R)},!n))return M(R),B}if(!L&&(!o(f)||!o(m))){let I,E;let G=Q(m),w=Q(f);if(o(e)||isNaN(e)){let z=u.valueAsDate||new Date(e),W=a=>new Date(new Date().toDateString()+" "+a),Y="time"==u.type,X="week"==u.type;N(G.value)&&e&&(I=Y?W(e)>W(G.value):X?e>G.value:z>new Date(G.value)),N(w.value)&&e&&(E=Y?W(e)<W(w.value):X?e<w.value:z<new Date(w.value))}else{let $=u.valueAsNumber||(e?+e:e);o(G.value)||(I=$>G.value),o(w.value)||(E=$<w.value)}if((I||E)&&(K(!!I,G.message,w.message,S.max,S.min),!n))return M(B[b].message),B}if((c||h)&&!L&&(N(e)||i&&Array.isArray(e))){let aa=Q(c),ae=Q(h),an=!o(aa.value)&&e.length>aa.value,ar=!o(ae.value)&&e.length<ae.value;if((an||ar)&&(K(an,aa.message,ae.message),!n))return M(B[b].message),B}if(g&&!L&&N(e)){let{value:at,message:ai}=Q(g);if(U(at)&&!e.match(at)&&(B[b]={type:S.pattern,message:ai,ref:u,...P(S.pattern,ai)},!n))return M(ai),B}if(p){if(V(p)){let ao=await p(e),au=q(ao,k);if(au&&(B[b]={...au,...P(S.validate,au.message)},!n))return M(au.message),B}else if(s(p)){let as={};for(let al in p){if(!C(as)&&!n)break;let ad=q(await p[al](e),k,al);ad&&(as={...ad,...P(al,ad.message)},M(ad.message),n&&(B[b]=as))}if(!C(as)&&(B[b]={ref:k,...as},!n))return B}}return M(!0),B},$=a=>({isOnSubmit:!a||a===p.onSubmit,isOnBlur:a===p.onBlur,isOnChange:a===p.onChange,isOnAll:a===p.all,isOnTouch:a===p.onTouched});function aa(a,e){let n;let r=D(e)?[e]:R(e),t=1==r.length?a:function(a,e){let n=e.slice(0,-1).length,r=0;for(;r<n;)a=f(a)?r++:a[e[r++]];return a}(a,r),i=r[r.length-1];t&&delete t[i];for(let o=0;o<r.slice(0,-1).length;o++){let u,l=-1,d=r.slice(0,-(o+1)),c=d.length-1;for(o>0&&(n=a);++l<d.length;){let h=d[l];u=u?u[h]:a[h],c===l&&(s(u)&&C(u)||Array.isArray(u)&&function(a){for(let e in a)if(!f(a[e]))return!1;return!0}(u))&&(n?delete n[h]:delete a[h]),n=u}}return a}function ae(){let a=[],e=e=>{for(let n of a)n.next(e)},n=e=>(a.push(e),{unsubscribe(){a=a.filter(a=>a!==e)}}),r=()=>{a=[]};return{get observers(){return a},next:e,subscribe:n,unsubscribe:r}}var an=a=>o(a)||!u(a);function ar(a,e){if(an(a)||an(e))return a===e;if(i(a)&&i(e))return a.getTime()===e.getTime();let n=Object.keys(a),r=Object.keys(e);if(n.length!==r.length)return!1;for(let t of n){let o=a[t];if(!r.includes(t))return!1;if("ref"!==t){let u=e[t];if(i(o)&&i(u)||s(o)&&s(u)||Array.isArray(o)&&Array.isArray(u)?!ar(o,u):o!==u)return!1}}return!0}var at=a=>{let e=a?a.ownerDocument:0,n=e&&e.defaultView?e.defaultView.HTMLElement:HTMLElement;return a instanceof n},ai=a=>"select-multiple"===a.type,ao=a=>F(a)||t(a),au=a=>at(a)&&a.isConnected,as=a=>{for(let e in a)if(V(a[e]))return!0;return!1};function al(a,e={}){let n=Array.isArray(a);if(s(a)||n)for(let r in a)Array.isArray(a[r])||s(a[r])&&!as(a[r])?(e[r]=Array.isArray(a[r])?[]:{},al(a[r],e[r])):o(a[r])||(e[r]=!0);return e}var ad=(a,e)=>(function a(e,n,r){let t=Array.isArray(e);if(s(e)||t)for(let i in e)Array.isArray(e[i])||s(e[i])&&!as(e[i])?f(n)||an(r[i])?r[i]=Array.isArray(e[i])?al(e[i],[]):{...al(e[i])}:a(e[i],o(n)?{}:n[i],r[i]):ar(e[i],n[i])?delete r[i]:r[i]=!0;return r})(a,e,al(e)),ac=(a,{valueAsNumber:e,valueAsDate:n,setValueAs:r})=>f(a)?a:e?""===a?NaN:a?+a:a:n&&N(a)?new Date(a):r?r(a):a;function ah(a){let e=a.ref;return(a.refs?a.refs.every(a=>a.disabled):e.disabled)?void 0:H(e)?e.files:F(e)?Z(a.refs).value:ai(e)?[...e.selectedOptions].map(({value:a})=>a):t(e)?J(a.refs).value:ac(f(e.value)?a.ref.value:e.value,a)}var af=(a,e,n,r)=>{let t={};for(let i of a){let o=m(e,i);o&&I(t,i,o._f)}return{criteriaMode:n,names:[...a],fields:t,shouldUseNativeValidation:r}},am=a=>f(a)?a:U(a)?a.source:s(a)?U(a.value)?a.value.source:a.value:a,ag=a=>a.mount&&(a.required||a.min||a.max||a.maxLength||a.minLength||a.pattern||a.validate);function ap(a,e,n){let r=m(a,n);if(r||D(n))return{error:r,name:n};let t=n.split(".");for(;t.length;){let i=t.join("."),o=m(e,i),u=m(a,i);if(o&&!Array.isArray(o)&&n!==i)break;if(u&&u.type)return{name:i,error:u};t.pop()}return{name:n}}var aS=(a,e,n,r,t)=>!t.isOnAll&&(!n&&t.isOnTouch?!(e||a):(n?r.isOnBlur:t.isOnBlur)?!a:(n?!r.isOnChange:!t.isOnChange)||a),ab=(a,e)=>!h(m(a,e)).length&&aa(a,e);let ay={mode:p.onSubmit,reValidateMode:p.onChange,shouldFocusError:!0};function aA(a={}){let e=r.useRef(),[n,u]=r.useState({isDirty:!1,isValidating:!1,isSubmitted:!1,isSubmitting:!1,isSubmitSuccessful:!1,isValid:!1,submitCount:0,dirtyFields:{},touchedFields:{},errors:{},defaultValues:a.defaultValues});e.current||(e.current={...function(a={}){let e,n={...ay,...a},r={submitCount:0,isDirty:!1,isValidating:!1,isSubmitted:!1,isSubmitting:!1,isSubmitSuccessful:!1,isValid:!1,touchedFields:{},dirtyFields:{},errors:{}},u={},s=P(n.defaultValues)||{},d=n.shouldUnregister?{}:P(s),S={action:!1,mount:!1,watch:!1},b={mount:new Set,unMount:new Set,array:new Set,watch:new Set},y=0,A={isDirty:!1,dirtyFields:!1,touchedFields:!1,isValidating:!1,isValid:!1,errors:!1},v={watch:ae(),array:ae(),state:ae()},M=$(n.mode),B=$(n.reValidateMode),x=n.criteriaMode===p.all,K=a=>e=>{clearTimeout(y),y=window.setTimeout(a,e)},O=async()=>{if(A.isValid){let a=n.resolver?C((await W()).errors):await Y(u,!0);a!==r.isValid&&(r.isValid=a,v.state.next({isValid:a}))}},D=a=>A.isValidating&&a!==r.isValidating&&v.state.next({isValidating:a}),R=(a,e=[],n,t,i=!0,o=!0)=>{if(t&&n){if(S.action=!0,o&&Array.isArray(m(u,a))){let l=n(m(u,a),t.argA,t.argB);i&&I(u,a,l)}if(o&&Array.isArray(m(r.errors,a))){let c=n(m(r.errors,a),t.argA,t.argB);i&&I(r.errors,a,c),ab(r.errors,a)}if(A.touchedFields&&o&&Array.isArray(m(r.touchedFields,a))){let h=n(m(r.touchedFields,a),t.argA,t.argB);i&&I(r.touchedFields,a,h)}A.dirtyFields&&(r.dirtyFields=ad(s,d)),v.state.next({name:a,isDirty:q(a,e),dirtyFields:r.dirtyFields,errors:r.errors,isValid:r.isValid})}else I(d,a,e)},_=(a,e)=>{I(r.errors,a,e),v.state.next({errors:r.errors})},F=(a,e,n,r)=>{let t=m(u,a);if(t){let i=m(d,a,f(n)?m(s,a):n);f(i)||r&&r.defaultChecked||e?I(d,a,e?i:ah(t._f)):al(a,i),S.mount&&O()}},U=(a,e,n,t,i)=>{let o=!1,u=!1,l={name:a};if((!n||t)&&(A.isDirty&&(u=r.isDirty,r.isDirty=l.isDirty=q(),o=u!==l.isDirty),A.dirtyFields)){u=m(r.dirtyFields,a);let d=ar(m(s,a),e);d?aa(r.dirtyFields,a):I(r.dirtyFields,a,!0),l.dirtyFields=r.dirtyFields,o=o||!d!==u}if(n){let c=m(r.touchedFields,a);c||(I(r.touchedFields,a,n),l.touchedFields=r.touchedFields,o=o||A.touchedFields&&c!==n)}return o&&i&&v.state.next(l),o?l:{}},z=(n,t,i,o)=>{let u=m(r.errors,n),s=A.isValid&&j(t)&&r.isValid!==t;if(a.delayError&&i?(e=K(()=>_(n,i)))(a.delayError):(clearTimeout(y),e=null,i?I(r.errors,n,i):aa(r.errors,n)),(i?!ar(u,i):u)||!C(o)||s){let l={...o,...s&&j(t)?{isValid:t}:{},errors:r.errors,name:n};r={...r,...l},v.state.next(l)}D(!1)},W=async a=>await n.resolver(d,n.context,af(a||b.mount,u,n.criteriaMode,n.shouldUseNativeValidation)),J=async a=>{let{errors:e}=await W();if(a)for(let n of a){let t=m(e,n);t?I(r.errors,n,t):aa(r.errors,n)}else r.errors=e;return e},Y=async(a,e,t={valid:!0})=>{for(let i in a){let o=a[i];if(o){let{_f:u,...s}=o;if(u){let l=b.array.has(u.name),c=await X(o,m(d,u.name),x,n.shouldUseNativeValidation,l);if(c[u.name]&&(t.valid=!1,e))break;e||(m(c,u.name)?l?w(r.errors,c,u.name):I(r.errors,u.name,c[u.name]):aa(r.errors,u.name))}s&&await Y(s,e,t)}}return t.valid},Z=()=>{for(let a of b.unMount){let e=m(u,a);e&&(e._f.refs?e._f.refs.every(a=>!au(a)):!au(e._f.ref))&&aL(a)}b.unMount=new Set},q=(a,e)=>(a&&e&&I(d,a,e),!ar(aM(),s)),Q=(a,e,n)=>T(a,b,{...S.mount?d:f(e)?s:N(a)?{[a]:e}:e},n),as=e=>h(m(S.mount?d:s,e,a.shouldUnregister?m(s,e,[]):[])),al=(a,e,n={})=>{let r=m(u,a),i=e;if(r){let s=r._f;s&&(s.disabled||I(d,a,ac(e,s)),i=L&&at(s.ref)&&o(e)?"":e,ai(s.ref)?[...s.ref.options].forEach(a=>a.selected=i.includes(a.value)):s.refs?t(s.ref)?s.refs.length>1?s.refs.forEach(a=>(!a.defaultChecked||!a.disabled)&&(a.checked=Array.isArray(i)?!!i.find(e=>e===a.value):i===a.value)):s.refs[0]&&(s.refs[0].checked=!!i):s.refs.forEach(a=>a.checked=a.value===i):H(s.ref)?s.ref.value="":(s.ref.value=i,s.ref.type||v.watch.next({name:a})))}(n.shouldDirty||n.shouldTouch)&&U(a,i,n.shouldTouch,n.shouldDirty,!0),n.shouldValidate&&ak(a)},aA=(a,e,n)=>{for(let r in e){let t=e[r],o=`${a}.${r}`,s=m(u,o);!b.array.has(a)&&an(t)&&(!s||s._f)||i(t)?al(o,t,n):aA(o,t,n)}},aC=(a,e,n={})=>{let t=m(u,a),i=b.array.has(a),l=P(e);I(d,a,l),i?(v.array.next({name:a,values:d}),(A.isDirty||A.dirtyFields)&&n.shouldDirty&&(r.dirtyFields=ad(s,d),v.state.next({name:a,dirtyFields:r.dirtyFields,isDirty:q(a,l)}))):!t||t._f||o(l)?al(a,l,n):aA(a,l,n),G(a,b)&&v.state.next({}),v.watch.next({name:a})},av=async a=>{let t=a.target,i=t.name,o=m(u,i),s=()=>t.type?ah(o._f):l(a);if(o){let c,h;let f=s(),p=a.type===g.BLUR||a.type===g.FOCUS_OUT,S=!ag(o._f)&&!n.resolver&&!m(r.errors,i)&&!o._f.deps||aS(p,m(r.touchedFields,i),r.isSubmitted,B,M),y=G(i,b,p);I(d,i,f),p?(o._f.onBlur&&o._f.onBlur(a),e&&e(0)):o._f.onChange&&o._f.onChange(a);let k=U(i,f,p,!1),N=!C(k)||y;if(p||v.watch.next({name:i,type:a.type}),S)return A.isValid&&O(),N&&v.state.next({name:i,...y?{}:k});if(!p&&y&&v.state.next({}),D(!0),n.resolver){let{errors:T}=await W([i]),L=ap(r.errors,u,i),P=ap(T,u,L.name||i);c=P.error,i=P.name,h=C(T)}else(c=(await X(o,m(d,i),x,n.shouldUseNativeValidation))[i])?h=!1:A.isValid&&(h=await Y(u,!0));an(f)&&s()!==f?D(!1):(o._f.deps&&ak(o._f.deps),z(i,h,c,k))}},ak=async(a,e={})=>{let t,i;let o=k(a);if(D(!0),n.resolver){let s=await J(f(a)?a:o);t=C(s),i=a?!o.some(a=>m(s,a)):t}else a?((i=(await Promise.all(o.map(async a=>{let e=m(u,a);return await Y(e&&e._f?{[a]:e}:e)}))).every(Boolean))||r.isValid)&&O():i=t=await Y(u);return v.state.next({...!N(a)||A.isValid&&t!==r.isValid?{}:{name:a},...n.resolver||!a?{isValid:t}:{},errors:r.errors,isValidating:!1}),e.shouldFocus&&!i&&E(u,a=>a&&m(r.errors,a),a?o:b.mount),i},aM=a=>{let e={...s,...S.mount?d:{}};return f(a)?e:N(a)?m(e,a):a.map(a=>m(e,a))},aB=(a,e)=>({invalid:!!m((e||r).errors,a),isDirty:!!m((e||r).dirtyFields,a),isTouched:!!m((e||r).touchedFields,a),error:m((e||r).errors,a)}),aN=a=>{a?k(a).forEach(a=>aa(r.errors,a)):r.errors={},v.state.next({errors:r.errors})},aT=(a,e,n)=>{let t=(m(u,a,{_f:{}})._f||{}).ref;I(r.errors,a,{...e,ref:t}),v.state.next({name:a,errors:r.errors,isValid:!1}),n&&n.shouldFocus&&t&&t.focus&&t.focus()},ax=(a,e)=>V(a)?v.watch.subscribe({next:n=>a(Q(void 0,e),n)}):Q(a,e,!0),aL=(a,e={})=>{for(let t of a?k(a):b.mount)b.mount.delete(t),b.array.delete(t),m(u,t)&&(e.keepValue||(aa(u,t),aa(d,t)),e.keepError||aa(r.errors,t),e.keepDirty||aa(r.dirtyFields,t),e.keepTouched||aa(r.touchedFields,t),n.shouldUnregister||e.keepDefaultValue||aa(s,t));v.watch.next({}),v.state.next({...r,...e.keepDirty?{isDirty:q()}:{}}),e.keepIsValid||O()},aP=(a,e={})=>{let r=m(u,a),t=j(e.disabled);return I(u,a,{...r||{},_f:{...r&&r._f?r._f:{ref:{name:a}},name:a,mount:!0,...e}}),b.mount.add(a),r?t&&I(d,a,e.disabled?void 0:m(d,a,ah(r._f))):F(a,!0,e.value),{...t?{disabled:e.disabled}:{},...n.shouldUseNativeValidation?{required:!!e.required,min:am(e.min),max:am(e.max),minLength:am(e.minLength),maxLength:am(e.maxLength),pattern:am(e.pattern)}:{},name:a,onChange:av,onBlur:av,ref(t){if(t){aP(a,e),r=m(u,a);let i=f(t.value)&&t.querySelectorAll&&t.querySelectorAll("input,select,textarea")[0]||t,o=ao(i),l=r._f.refs||[];(o?l.find(a=>a===i):i===r._f.ref)||(I(u,a,{_f:{...r._f,...o?{refs:[...l.filter(au),i,...Array.isArray(m(s,a))?[{}]:[]],ref:{type:i.type,name:a}}:{ref:i}}}),F(a,!1,void 0,i))}else(r=m(u,a,{}))._f&&(r._f.mount=!1),(n.shouldUnregister||e.shouldUnregister)&&!(c(b.array,a)&&S.action)&&b.unMount.add(a)}}},aK=()=>n.shouldFocusError&&E(u,a=>a&&m(r.errors,a),b.mount),aO=(a,e)=>async t=>{t&&(t.preventDefault&&t.preventDefault(),t.persist&&t.persist());let i=!0,o=P(d);v.state.next({isSubmitting:!0});try{if(n.resolver){let{errors:s,values:l}=await W();r.errors=s,o=l}else await Y(u);C(r.errors)?(v.state.next({errors:{},isSubmitting:!0}),await a(o,t)):(e&&await e({...r.errors},t),aK())}catch(c){throw i=!1,c}finally{r.isSubmitted=!0,v.state.next({isSubmitted:!0,isSubmitting:!1,isSubmitSuccessful:C(r.errors)&&i,submitCount:r.submitCount+1,errors:r.errors})}},aD=(a,e={})=>{m(u,a)&&(f(e.defaultValue)?aC(a,m(s,a)):(aC(a,e.defaultValue),I(s,a,e.defaultValue)),e.keepTouched||aa(r.touchedFields,a),e.keepDirty||(aa(r.dirtyFields,a),r.isDirty=e.defaultValue?q(a,m(s,a)):q()),!e.keepError&&(aa(r.errors,a),A.isValid&&O()),v.state.next({...r}))},aR=(e,n={})=>{let t=e||s,i=P(t),o=e&&!C(e)?i:s;if(n.keepDefaultValues||(s=t),!n.keepValues){if(n.keepDirtyValues)for(let l of b.mount)m(r.dirtyFields,l)?I(o,l,m(d,l)):aC(l,m(o,l));else{if(L&&f(e))for(let c of b.mount){let h=m(u,c);if(h&&h._f){let g=Array.isArray(h._f.refs)?h._f.refs[0]:h._f.ref;if(at(g)){let p=g.closest("form");if(p){p.reset();break}}}}u={}}d=a.shouldUnregister?n.keepDefaultValues?P(s):{}:i,v.array.next({values:o}),v.watch.next({values:o})}b={mount:new Set,unMount:new Set,array:new Set,watch:new Set,watchAll:!1,focus:""},S.mount=!A.isValid||!!n.keepIsValid,S.watch=!!a.shouldUnregister,v.state.next({submitCount:n.keepSubmitCount?r.submitCount:0,isDirty:n.keepDirty||n.keepDirtyValues?r.isDirty:!!(n.keepDefaultValues&&!ar(e,s)),isSubmitted:!!n.keepIsSubmitted&&r.isSubmitted,dirtyFields:n.keepDirty||n.keepDirtyValues?r.dirtyFields:n.keepDefaultValues&&e?ad(s,e):{},touchedFields:n.keepTouched?r.touchedFields:{},errors:n.keepErrors?r.errors:{},isSubmitting:!1,isSubmitSuccessful:!1})},aI=(a,e)=>aR(V(a)?a(d):a,e),aE=(a,e={})=>{let n=m(u,a),r=n&&n._f;if(r){let t=r.refs?r.refs[0]:r.ref;t.focus&&(t.focus(),e.shouldSelect&&t.select())}};return{control:{register:aP,unregister:aL,getFieldState:aB,_executeSchema:W,_focusError:aK,_getWatch:Q,_getDirty:q,_updateValid:O,_removeUnmounted:Z,_updateFieldArray:R,_getFieldArray:as,_subjects:v,_proxyFormState:A,get _fields(){return u},get _formValues(){return d},get _stateFlags(){return S},set _stateFlags(value){S=value},get _defaultValues(){return s},get _names(){return b},set _names(value){b=value},get _formState(){return r},set _formState(value){r=value},get _options(){return n},set _options(value){n={...n,...value}}},trigger:ak,register:aP,handleSubmit:aO,watch:ax,setValue:aC,getValues:aM,reset:aI,resetField:aD,clearErrors:aN,unregister:aL,setError:aT,setFocus:aE,getFieldState:aB}}(a),formState:n});let s=e.current.control;return s._options=a,B({subject:s._subjects.state,callback:r.useCallback(a=>{v(a,s._proxyFormState,!0)&&(s._formState={...s._formState,...a},u({...s._formState}))},[s])}),r.useEffect(()=>{s._stateFlags.mount||(s._proxyFormState.isValid&&s._updateValid(),s._stateFlags.mount=!0),s._stateFlags.watch&&(s._stateFlags.watch=!1,s._subjects.state.next({})),s._removeUnmounted()}),r.useEffect(()=>{n.submitCount&&s._focusError()},[s,n.submitCount]),e.current.formState=A(n,s),e.current}}}]);